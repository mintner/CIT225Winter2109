
PL/SQL procedure successfully completed.

SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Call scripts to create tables.
SQL> -- ------------------------------------------------------------------
SQL> @@system_user.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   system_user_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the system_user table and system_user_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL system_user.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('system_user');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
SYSTEM_USER

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE system_user
  2  ( system_user_id              NUMBER
  3  , system_user_name            VARCHAR2(20) CONSTRAINT nn_system_user_1 NOT NULL
  4  , system_user_group_id        NUMBER       CONSTRAINT nn_system_user_2 NOT NULL
  5  , system_user_type            NUMBER       CONSTRAINT nn_system_user_3 NOT NULL
  6  , first_name                  VARCHAR2(20)
  7  , middle_name                 VARCHAR2(20)
  8  , last_name                   VARCHAR2(20)
  9  , created_by                  NUMBER       CONSTRAINT nn_system_user_4 NOT NULL
 10  , creation_date               DATE         CONSTRAINT nn_system_user_5 NOT NULL
 11  , last_updated_by             NUMBER       CONSTRAINT nn_system_user_6 NOT NULL
 12  , last_update_date            DATE         CONSTRAINT nn_system_user_7 NOT NULL
 13  , CONSTRAINT pk_system_user_1 PRIMARY KEY(system_user_id)
 14  , CONSTRAINT fk_system_user_1 FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 15  , CONSTRAINT fk_system_user_2 FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table SYSTEM_USER created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

TABLE_NAME       COLUMN_ID COLUMN_NAME            NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
SYSTEM_USER              1 SYSTEM_USER_ID         NOT NULL NUMBER(22)  
SYSTEM_USER              2 SYSTEM_USER_NAME       NOT NULL VARCHAR2(20)
SYSTEM_USER              3 SYSTEM_USER_GROUP_ID   NOT NULL NUMBER(22)  
SYSTEM_USER              4 SYSTEM_USER_TYPE       NOT NULL NUMBER(22)  
SYSTEM_USER              5 FIRST_NAME                      VARCHAR2(20)
SYSTEM_USER              6 MIDDLE_NAME                     VARCHAR2(20)
SYSTEM_USER              7 LAST_NAME                       VARCHAR2(20)
SYSTEM_USER              8 CREATED_BY             NOT NULL NUMBER(22)  
SYSTEM_USER              9 CREATION_DATE          NOT NULL DATE        
SYSTEM_USER             10 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
SYSTEM_USER             11 LAST_UPDATE_DATE       NOT NULL DATE        

11 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type = UPPER('c')
  9  ORDER BY uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
NN_SYSTEM_USER_1       "SYSTEM_USER_NAME" IS NOT NULL       C
NN_SYSTEM_USER_2       "SYSTEM_USER_GROUP_ID" IS NOT NULL   C
NN_SYSTEM_USER_3       "SYSTEM_USER_TYPE" IS NOT NULL       C
NN_SYSTEM_USER_4       "CREATED_BY" IS NOT NULL             C
NN_SYSTEM_USER_5       "CREATION_DATE" IS NOT NULL          C
NN_SYSTEM_USER_6       "LAST_UPDATED_BY" IS NOT NULL        C
NN_SYSTEM_USER_7       "LAST_UPDATE_DATE" IS NOT NULL       C

7 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_SYSTEM_USER_1                       REFERENCES                              
(SYSTEM_USER.CREATED_BY)               (SYSTEM_USER.SYSTEM_USER_ID)            

FK_SYSTEM_USER_2                       REFERENCES                              
(SYSTEM_USER.LAST_UPDATED_BY)          (SYSTEM_USER.SYSTEM_USER_ID)            


2 rows selected. 

SQL> 
SQL> -- Create unique index.
SQL> CREATE UNIQUE INDEX uq_system_user_1
  2    ON system_user (system_user_name);

INDEX UQ_SYSTEM_USER_1 created.

SQL> 
SQL> -- Display unique indexes.
SQL> COLUMN index_name FORMAT A20 HEADING "Index Name"
SQL> SELECT   index_name
  2  FROM     user_indexes
  3  WHERE    table_name = :table_name;

Index Name          
--------------------
PK_SYSTEM_USER_1
UQ_SYSTEM_USER_1

2 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE system_user_s1 START WITH 1001 NOCACHE;

Sequence SYSTEM_USER_S1 created.

SQL> 
SQL> -- Display sequence.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
SYSTEM_USER_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@common_lookup.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   common_lookup.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the common_lookup table and common_lookup_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL common_lookup.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('common_lookup');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
COMMON_LOOKUP

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE common_lookup
  2  ( common_lookup_id            NUMBER
  3  , common_lookup_context       VARCHAR2(30) CONSTRAINT nn_clookup_1 NOT NULL
  4  , common_lookup_type          VARCHAR2(30) CONSTRAINT nn_clookup_2 NOT NULL
  5  , common_lookup_meaning       VARCHAR2(30) CONSTRAINT nn_clookup_3 NOT NULL
  6  , created_by                  NUMBER       CONSTRAINT nn_clookup_4 NOT NULL
  7  , creation_date               DATE         CONSTRAINT nn_clookup_5 NOT NULL
  8  , last_updated_by             NUMBER       CONSTRAINT nn_clookup_6 NOT NULL
  9  , last_update_date            DATE         CONSTRAINT nn_clookup_7 NOT NULL
 10  , CONSTRAINT pk_clookup_1    PRIMARY KEY(common_lookup_id)
 11  , CONSTRAINT fk_clookup_1    FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 12  , CONSTRAINT fk_clookup_2    FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table COMMON_LOOKUP created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

TABLE_NAME       COLUMN_ID COLUMN_NAME            NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
COMMON_LOOKUP            1 COMMON_LOOKUP_ID       NOT NULL NUMBER(22)  
COMMON_LOOKUP            2 COMMON_LOOKUP_CONTEXT  NOT NULL VARCHAR2(30)
COMMON_LOOKUP            3 COMMON_LOOKUP_TYPE     NOT NULL VARCHAR2(30)
COMMON_LOOKUP            4 COMMON_LOOKUP_MEANING  NOT NULL VARCHAR2(30)
COMMON_LOOKUP            5 CREATED_BY             NOT NULL NUMBER(22)  
COMMON_LOOKUP            6 CREATION_DATE          NOT NULL DATE        
COMMON_LOOKUP            7 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
COMMON_LOOKUP            8 LAST_UPDATE_DATE       NOT NULL DATE        

8 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_CLOOKUP_1                                                P
NN_CLOOKUP_1           "COMMON_LOOKUP_CONTEXT" IS NOT NULL  C
NN_CLOOKUP_2           "COMMON_LOOKUP_TYPE" IS NOT NULL     C
NN_CLOOKUP_3           "COMMON_LOOKUP_MEANING" IS NOT NULL  C
NN_CLOOKUP_4           "CREATED_BY" IS NOT NULL             C
NN_CLOOKUP_5           "CREATION_DATE" IS NOT NULL          C
NN_CLOOKUP_6           "LAST_UPDATED_BY" IS NOT NULL        C
NN_CLOOKUP_7           "LAST_UPDATE_DATE" IS NOT NULL       C

8 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_CLOOKUP_1                           REFERENCES                              
(COMMON_LOOKUP.CREATED_BY)             (SYSTEM_USER.SYSTEM_USER_ID)            

FK_CLOOKUP_2                           REFERENCES                              
(COMMON_LOOKUP.LAST_UPDATED_BY)        (SYSTEM_USER.SYSTEM_USER_ID)            


2 rows selected. 

SQL> 
SQL> -- Create a non-unique index.
SQL> CREATE INDEX common_lookup_n1
  2    ON common_lookup(common_lookup_context);

Index COMMON_LOOKUP_N1 created.

SQL> 
SQL> -- Create a unique index.
SQL> CREATE UNIQUE INDEX common_lookup_u2
  2    ON common_lookup(common_lookup_context,common_lookup_type);

INDEX COMMON_LOOKUP_U2 created.

SQL> 
SQL> -- Display unique and non-unique indexes.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  ORDER BY ui.index_name
  9  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
COMMON_LOOKUP_N1                   1 COMMON_LOOKUP_CONTEXT 
COMMON_LOOKUP_U2                   1 COMMON_LOOKUP_CONTEXT 
COMMON_LOOKUP_U2                   2 COMMON_LOOKUP_TYPE    
PK_CLOOKUP_1                       1 COMMON_LOOKUP_ID      

4 rows selected. 

SQL> 
SQL> -- Add a constraint to the SYSTEM_USER table dependent on the COMMON_LOOKUP table.
SQL> ALTER TABLE system_user
  2  ADD CONSTRAINT fk_system_user_3 FOREIGN KEY(system_user_group_id)
  3      REFERENCES common_lookup(common_lookup_id);

Table SYSTEM_USER altered.

SQL> 
SQL> ALTER TABLE system_user
  2  ADD CONSTRAINT fk_system_user_4 FOREIGN KEY(system_user_type)
  3      REFERENCES common_lookup(common_lookup_id);

Table SYSTEM_USER altered.

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_CLOOKUP_1                           REFERENCES                              
(COMMON_LOOKUP.CREATED_BY)             (SYSTEM_USER.SYSTEM_USER_ID)            

FK_CLOOKUP_2                           REFERENCES                              
(COMMON_LOOKUP.LAST_UPDATED_BY)        (SYSTEM_USER.SYSTEM_USER_ID)            


2 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE common_lookup_s1 START WITH 1001;

Sequence COMMON_LOOKUP_S1 created.

SQL> 
SQL> -- Display sequence.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
COMMON_LOOKUP_S1

1 row selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@member.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   member.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the member table and member_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL member.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('member');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
MEMBER

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE member
  2  ( member_id                   NUMBER
  3  , member_type                 NUMBER
  4  , account_number              VARCHAR2(10) CONSTRAINT nn_member_2 NOT NULL
  5  , credit_card_number          VARCHAR2(19) CONSTRAINT nn_member_3 NOT NULL
  6  , credit_card_type            NUMBER       CONSTRAINT nn_member_4 NOT NULL
  7  , created_by                  NUMBER       CONSTRAINT nn_member_5 NOT NULL
  8  , creation_date               DATE         CONSTRAINT nn_member_6 NOT NULL
  9  , last_updated_by             NUMBER       CONSTRAINT nn_member_7 NOT NULL
 10  , last_update_date            DATE         CONSTRAINT nn_member_8 NOT NULL
 11  , CONSTRAINT pk_member_1      PRIMARY KEY(member_id)
 12  , CONSTRAINT fk_member_1      FOREIGN KEY(member_type) REFERENCES common_lookup(common_lookup_id)
 13  , CONSTRAINT fk_member_2      FOREIGN KEY(credit_card_type) REFERENCES common_lookup(common_lookup_id)
 14  , CONSTRAINT fk_member_3      FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 15  , CONSTRAINT fk_member_4      FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table MEMBER created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
MEMBER                   1 MEMBER_ID              NOT NULL NUMBER(22)  
MEMBER                   2 MEMBER_TYPE                     NUMBER(22)  
MEMBER                   3 ACCOUNT_NUMBER         NOT NULL VARCHAR2(10)
MEMBER                   4 CREDIT_CARD_NUMBER     NOT NULL VARCHAR2(19)
MEMBER                   5 CREDIT_CARD_TYPE       NOT NULL NUMBER(22)  
MEMBER                   6 CREATED_BY             NOT NULL NUMBER(22)  
MEMBER                   7 CREATION_DATE          NOT NULL DATE        
MEMBER                   8 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
MEMBER                   9 LAST_UPDATE_DATE       NOT NULL DATE        

9 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_MEMBER_1                                                 P
NN_MEMBER_2            "ACCOUNT_NUMBER" IS NOT NULL         C
NN_MEMBER_3            "CREDIT_CARD_NUMBER" IS NOT NULL     C
NN_MEMBER_4            "CREDIT_CARD_TYPE" IS NOT NULL       C
NN_MEMBER_5            "CREATED_BY" IS NOT NULL             C
NN_MEMBER_6            "CREATION_DATE" IS NOT NULL          C
NN_MEMBER_7            "LAST_UPDATED_BY" IS NOT NULL        C
NN_MEMBER_8            "LAST_UPDATE_DATE" IS NOT NULL       C

8 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_MEMBER_1                            REFERENCES                              
(MEMBER.MEMBER_TYPE)                   (COMMON_LOOKUP.COMMON_LOOKUP_ID)        

FK_MEMBER_2                            REFERENCES                              
(MEMBER.CREDIT_CARD_TYPE)              (COMMON_LOOKUP.COMMON_LOOKUP_ID)        

FK_MEMBER_3                            REFERENCES                              
(MEMBER.CREATED_BY)                    (SYSTEM_USER.SYSTEM_USER_ID)            

FK_MEMBER_4                            REFERENCES                              
(MEMBER.LAST_UPDATED_BY)               (SYSTEM_USER.SYSTEM_USER_ID)            


4 rows selected. 

SQL> 
SQL> -- Create a non-unique index.
SQL> CREATE INDEX member_n1 ON member(credit_card_type);

Index MEMBER_N1 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
MEMBER_N1                          1 CREDIT_CARD_TYPE      

1 row selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE member_s1 START WITH 1001 NOCACHE;

Sequence MEMBER_S1 created.

SQL> 
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
MEMBER_S1

1 row selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@contact.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   contact.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the contact table and contact_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL contact.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('contact');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
CONTACT

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE contact
  2  ( contact_id                  NUMBER
  3  , member_id                   NUMBER       CONSTRAINT nn_contact_1 NOT NULL
  4  , contact_type                NUMBER       CONSTRAINT nn_contact_2 NOT NULL
  5  , first_name                  VARCHAR2(20) CONSTRAINT nn_contact_3 NOT NULL
  6  , middle_name                 VARCHAR2(20)
  7  , last_name                   VARCHAR2(20) CONSTRAINT nn_contact_4 NOT NULL
  8  , created_by                  NUMBER       CONSTRAINT nn_contact_5 NOT NULL
  9  , creation_date               DATE         CONSTRAINT nn_contact_6 NOT NULL
 10  , last_updated_by             NUMBER       CONSTRAINT nn_contact_7 NOT NULL
 11  , last_update_date            DATE         CONSTRAINT nn_contact_8 NOT NULL
 12  , CONSTRAINT pk_contact_1     PRIMARY KEY(contact_id)
 13  , CONSTRAINT fk_contact_1     FOREIGN KEY(member_id) REFERENCES member(member_id)
 14  , CONSTRAINT fk_contact_2     FOREIGN KEY(contact_type) REFERENCES common_lookup(common_lookup_id)
 15  , CONSTRAINT fk_contact_3     FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 16  , CONSTRAINT fk_contact_4     FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table CONTACT created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
CONTACT                  1 CONTACT_ID             NOT NULL NUMBER(22)  
CONTACT                  2 MEMBER_ID              NOT NULL NUMBER(22)  
CONTACT                  3 CONTACT_TYPE           NOT NULL NUMBER(22)  
CONTACT                  4 FIRST_NAME             NOT NULL VARCHAR2(20)
CONTACT                  5 MIDDLE_NAME                     VARCHAR2(20)
CONTACT                  6 LAST_NAME              NOT NULL VARCHAR2(20)
CONTACT                  7 CREATED_BY             NOT NULL NUMBER(22)  
CONTACT                  8 CREATION_DATE          NOT NULL DATE        
CONTACT                  9 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
CONTACT                 10 LAST_UPDATE_DATE       NOT NULL DATE        

10 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_CONTACT_1                                                P
NN_CONTACT_1           "MEMBER_ID" IS NOT NULL              C
NN_CONTACT_2           "CONTACT_TYPE" IS NOT NULL           C
NN_CONTACT_3           "FIRST_NAME" IS NOT NULL             C
NN_CONTACT_4           "LAST_NAME" IS NOT NULL              C
NN_CONTACT_5           "CREATED_BY" IS NOT NULL             C
NN_CONTACT_6           "CREATION_DATE" IS NOT NULL          C
NN_CONTACT_7           "LAST_UPDATED_BY" IS NOT NULL        C
NN_CONTACT_8           "LAST_UPDATE_DATE" IS NOT NULL       C

9 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_CONTACT_1                           REFERENCES                              
(CONTACT.MEMBER_ID)                    (MEMBER.MEMBER_ID)                      

FK_CONTACT_2                           REFERENCES                              
(CONTACT.CONTACT_TYPE)                 (COMMON_LOOKUP.COMMON_LOOKUP_ID)        

FK_CONTACT_3                           REFERENCES                              
(CONTACT.CREATED_BY)                   (SYSTEM_USER.SYSTEM_USER_ID)            

FK_CONTACT_4                           REFERENCES                              
(CONTACT.LAST_UPDATED_BY)              (SYSTEM_USER.SYSTEM_USER_ID)            


4 rows selected. 

SQL> 
SQL> -- Create non-unique indexes.
SQL> CREATE INDEX contact_n1 ON contact(member_id);

Index CONTACT_N1 created.

SQL> CREATE INDEX contact_n2 ON contact(contact_type);

Index CONTACT_N2 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
CONTACT_N1                         1 MEMBER_ID             
CONTACT_N2                         1 CONTACT_TYPE          

2 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE contact_s1 START WITH 1001 NOCACHE;

Sequence CONTACT_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
CONTACT_S1

1 row selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@address.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   address.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the contact table and contact_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL address.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('address');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
ADDRESS

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE address
  2  ( address_id                  NUMBER
  3  , contact_id                  NUMBER       CONSTRAINT nn_address_1 NOT NULL
  4  , address_type                NUMBER       CONSTRAINT nn_address_2 NOT NULL
  5  , city                        VARCHAR2(30) CONSTRAINT nn_address_3 NOT NULL
  6  , state_province              VARCHAR2(30) CONSTRAINT nn_address_4 NOT NULL
  7  , postal_code                 VARCHAR2(20) CONSTRAINT nn_address_5 NOT NULL
  8  , created_by                  NUMBER       CONSTRAINT nn_address_6 NOT NULL
  9  , creation_date               DATE         CONSTRAINT nn_address_7 NOT NULL
 10  , last_updated_by             NUMBER       CONSTRAINT nn_address_8 NOT NULL
 11  , last_update_date            DATE         CONSTRAINT nn_address_9 NOT NULL
 12  , CONSTRAINT pk_address_1     PRIMARY KEY(address_id)
 13  , CONSTRAINT fk_address_1     FOREIGN KEY(contact_id) REFERENCES contact(contact_id)
 14  , CONSTRAINT fk_address_2     FOREIGN KEY(address_type) REFERENCES common_lookup(common_lookup_id)
 15  , CONSTRAINT fk_address_3     FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 16  , CONSTRAINT fk_address_4     FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table ADDRESS created.

SQL> 
SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
ADDRESS                  1 ADDRESS_ID             NOT NULL NUMBER(22)  
ADDRESS                  2 CONTACT_ID             NOT NULL NUMBER(22)  
ADDRESS                  3 ADDRESS_TYPE           NOT NULL NUMBER(22)  
ADDRESS                  4 CITY                   NOT NULL VARCHAR2(30)
ADDRESS                  5 STATE_PROVINCE         NOT NULL VARCHAR2(30)
ADDRESS                  6 POSTAL_CODE            NOT NULL VARCHAR2(20)
ADDRESS                  7 CREATED_BY             NOT NULL NUMBER(22)  
ADDRESS                  8 CREATION_DATE          NOT NULL DATE        
ADDRESS                  9 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
ADDRESS                 10 LAST_UPDATE_DATE       NOT NULL DATE        

10 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_ADDRESS_1                                                P
NN_ADDRESS_1           "CONTACT_ID" IS NOT NULL             C
NN_ADDRESS_2           "ADDRESS_TYPE" IS NOT NULL           C
NN_ADDRESS_3           "CITY" IS NOT NULL                   C
NN_ADDRESS_4           "STATE_PROVINCE" IS NOT NULL         C
NN_ADDRESS_5           "POSTAL_CODE" IS NOT NULL            C
NN_ADDRESS_6           "CREATED_BY" IS NOT NULL             C
NN_ADDRESS_7           "CREATION_DATE" IS NOT NULL          C
NN_ADDRESS_8           "LAST_UPDATED_BY" IS NOT NULL        C
NN_ADDRESS_9           "LAST_UPDATE_DATE" IS NOT NULL       C

10 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_ADDRESS_1                           REFERENCES                              
(ADDRESS.CONTACT_ID)                   (CONTACT.CONTACT_ID)                    

FK_ADDRESS_2                           REFERENCES                              
(ADDRESS.ADDRESS_TYPE)                 (COMMON_LOOKUP.COMMON_LOOKUP_ID)        

FK_ADDRESS_3                           REFERENCES                              
(ADDRESS.CREATED_BY)                   (SYSTEM_USER.SYSTEM_USER_ID)            

FK_ADDRESS_4                           REFERENCES                              
(ADDRESS.LAST_UPDATED_BY)              (SYSTEM_USER.SYSTEM_USER_ID)            


4 rows selected. 

SQL> 
SQL> -- Create a non-unique index.
SQL> CREATE INDEX address_n1 ON address(contact_id);

Index ADDRESS_N1 created.

SQL> CREATE INDEX address_n2 ON address(address_type);

Index ADDRESS_N2 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
ADDRESS_N1                         1 CONTACT_ID            
ADDRESS_N2                         1 ADDRESS_TYPE          

2 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE address_s1 START WITH 1001 NOCACHE;

Sequence ADDRESS_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
ADDRESS_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@street_address.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   street_address.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the contact table and contact_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL street_address.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('street_address');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
STREET_ADDRESS

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE street_address
  2  ( street_address_id           NUMBER
  3  , address_id                  NUMBER       CONSTRAINT nn_saddress_1 NOT NULL
  4  , street_address              VARCHAR2(30) CONSTRAINT nn_saddress_2 NOT NULL
  5  , created_by                  NUMBER       CONSTRAINT nn_saddress_3 NOT NULL
  6  , creation_date               DATE         CONSTRAINT nn_saddress_4 NOT NULL
  7  , last_updated_by             NUMBER       CONSTRAINT nn_saddress_5 NOT NULL
  8  , last_update_date            DATE         CONSTRAINT nn_saddress_6 NOT NULL
  9  , CONSTRAINT pk_s_address_1   PRIMARY KEY(street_address_id)
 10  , CONSTRAINT fk_s_address_1   FOREIGN KEY(address_id) REFERENCES address(address_id)
 11  , CONSTRAINT fk_s_address_3   FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 12  , CONSTRAINT fk_s_address_4   FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table STREET_ADDRESS created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
STREET_ADDRESS           1 STREET_ADDRESS_ID      NOT NULL NUMBER(22)  
STREET_ADDRESS           2 ADDRESS_ID             NOT NULL NUMBER(22)  
STREET_ADDRESS           3 STREET_ADDRESS         NOT NULL VARCHAR2(30)
STREET_ADDRESS           4 CREATED_BY             NOT NULL NUMBER(22)  
STREET_ADDRESS           5 CREATION_DATE          NOT NULL DATE        
STREET_ADDRESS           6 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
STREET_ADDRESS           7 LAST_UPDATE_DATE       NOT NULL DATE        

7 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_S_ADDRESS_1                                              P
NN_SADDRESS_1          "ADDRESS_ID" IS NOT NULL             C
NN_SADDRESS_2          "STREET_ADDRESS" IS NOT NULL         C
NN_SADDRESS_3          "CREATED_BY" IS NOT NULL             C
NN_SADDRESS_4          "CREATION_DATE" IS NOT NULL          C
NN_SADDRESS_5          "LAST_UPDATED_BY" IS NOT NULL        C
NN_SADDRESS_6          "LAST_UPDATE_DATE" IS NOT NULL       C

7 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_S_ADDRESS_1                         REFERENCES                              
(STREET_ADDRESS.ADDRESS_ID)            (ADDRESS.ADDRESS_ID)                    

FK_S_ADDRESS_3                         REFERENCES                              
(STREET_ADDRESS.CREATED_BY)            (SYSTEM_USER.SYSTEM_USER_ID)            

FK_S_ADDRESS_4                         REFERENCES                              
(STREET_ADDRESS.LAST_UPDATED_BY)       (SYSTEM_USER.SYSTEM_USER_ID)            


3 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE street_address_s1 START WITH 1001 NOCACHE;

Sequence STREET_ADDRESS_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
STREET_ADDRESS_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@telephone.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   telephone.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the telephone table and telephone_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL telephone.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('telephone');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
TELEPHONE

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE telephone
  2  ( telephone_id                NUMBER
  3  , contact_id                  NUMBER       CONSTRAINT nn_telephone_1 NOT NULL
  4  , address_id                  NUMBER
  5  , telephone_type              NUMBER       CONSTRAINT nn_telephone_2 NOT NULL
  6  , country_code                VARCHAR2(3)  CONSTRAINT nn_telephone_3 NOT NULL
  7  , area_code                   VARCHAR2(6)  CONSTRAINT nn_telephone_4 NOT NULL
  8  , telephone_number            VARCHAR2(10) CONSTRAINT nn_telephone_5 NOT NULL
  9  , created_by                  NUMBER       CONSTRAINT nn_telephone_6 NOT NULL
 10  , creation_date               DATE         CONSTRAINT nn_telephone_7 NOT NULL
 11  , last_updated_by             NUMBER       CONSTRAINT nn_telephone_8 NOT NULL
 12  , last_update_date            DATE         CONSTRAINT nn_telephone_9 NOT NULL
 13  , CONSTRAINT pk_telephone_1   PRIMARY KEY(telephone_id)
 14  , CONSTRAINT fk_telephone_1   FOREIGN KEY(contact_id) REFERENCES contact(contact_id)
 15  , CONSTRAINT fk_telephone_2   FOREIGN KEY(telephone_type) REFERENCES common_lookup(common_lookup_id)
 16  , CONSTRAINT fk_telephone_3   FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 17  , CONSTRAINT fk_telephone_4   FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table TELEPHONE created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
TELEPHONE                1 TELEPHONE_ID           NOT NULL NUMBER(22)  
TELEPHONE                2 CONTACT_ID             NOT NULL NUMBER(22)  
TELEPHONE                3 ADDRESS_ID                      NUMBER(22)  
TELEPHONE                4 TELEPHONE_TYPE         NOT NULL NUMBER(22)  
TELEPHONE                5 COUNTRY_CODE           NOT NULL VARCHAR2(3) 
TELEPHONE                6 AREA_CODE              NOT NULL VARCHAR2(6) 
TELEPHONE                7 TELEPHONE_NUMBER       NOT NULL VARCHAR2(10)
TELEPHONE                8 CREATED_BY             NOT NULL NUMBER(22)  
TELEPHONE                9 CREATION_DATE          NOT NULL DATE        
TELEPHONE               10 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
TELEPHONE               11 LAST_UPDATE_DATE       NOT NULL DATE        

11 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_TELEPHONE_1                                              P
NN_TELEPHONE_1         "CONTACT_ID" IS NOT NULL             C
NN_TELEPHONE_2         "TELEPHONE_TYPE" IS NOT NULL         C
NN_TELEPHONE_3         "COUNTRY_CODE" IS NOT NULL           C
NN_TELEPHONE_4         "AREA_CODE" IS NOT NULL              C
NN_TELEPHONE_5         "TELEPHONE_NUMBER" IS NOT NULL       C
NN_TELEPHONE_6         "CREATED_BY" IS NOT NULL             C
NN_TELEPHONE_7         "CREATION_DATE" IS NOT NULL          C
NN_TELEPHONE_8         "LAST_UPDATED_BY" IS NOT NULL        C
NN_TELEPHONE_9         "LAST_UPDATE_DATE" IS NOT NULL       C

10 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_TELEPHONE_1                         REFERENCES                              
(TELEPHONE.CONTACT_ID)                 (CONTACT.CONTACT_ID)                    

FK_TELEPHONE_2                         REFERENCES                              
(TELEPHONE.TELEPHONE_TYPE)             (COMMON_LOOKUP.COMMON_LOOKUP_ID)        

FK_TELEPHONE_3                         REFERENCES                              
(TELEPHONE.CREATED_BY)                 (SYSTEM_USER.SYSTEM_USER_ID)            

FK_TELEPHONE_4                         REFERENCES                              
(TELEPHONE.LAST_UPDATED_BY)            (SYSTEM_USER.SYSTEM_USER_ID)            


4 rows selected. 

SQL> 
SQL> -- Create non-unique indexes.
SQL> CREATE INDEX telephone_n1 ON telephone(contact_id,address_id);

Index TELEPHONE_N1 created.

SQL> CREATE INDEX telephone_n2 ON telephone(address_id);

Index TELEPHONE_N2 created.

SQL> CREATE INDEX telephone_n3 ON telephone(telephone_type);

Index TELEPHONE_N3 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
TELEPHONE_N1                       1 CONTACT_ID            
TELEPHONE_N1                       2 ADDRESS_ID            
TELEPHONE_N2                       1 ADDRESS_ID            
TELEPHONE_N3                       1 TELEPHONE_TYPE        

4 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE telephone_s1 START WITH 1001 NOCACHE;

Sequence TELEPHONE_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
TELEPHONE_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@rental.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   rental.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the rental table and rental_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL rental.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('rental');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
RENTAL

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE rental
  2  ( rental_id                   NUMBER
  3  , customer_id                 NUMBER CONSTRAINT nn_rental_1 NOT NULL
  4  , check_out_date              DATE   CONSTRAINT nn_rental_2 NOT NULL
  5  , return_date                 DATE   CONSTRAINT nn_rental_3 NOT NULL
  6  , created_by                  NUMBER CONSTRAINT nn_rental_4 NOT NULL
  7  , creation_date               DATE   CONSTRAINT nn_rental_5 NOT NULL
  8  , last_updated_by             NUMBER CONSTRAINT nn_rental_6 NOT NULL
  9  , last_update_date            DATE   CONSTRAINT nn_rental_7 NOT NULL
 10  , CONSTRAINT pk_rental_1      PRIMARY KEY(rental_id)
 11  , CONSTRAINT fk_rental_1      FOREIGN KEY(customer_id) REFERENCES contact(contact_id)
 12  , CONSTRAINT fk_rental_2      FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 13  , CONSTRAINT fk_rental_3      FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table RENTAL created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
RENTAL                   1 RENTAL_ID              NOT NULL NUMBER(22)  
RENTAL                   2 CUSTOMER_ID            NOT NULL NUMBER(22)  
RENTAL                   3 CHECK_OUT_DATE         NOT NULL DATE        
RENTAL                   4 RETURN_DATE            NOT NULL DATE        
RENTAL                   5 CREATED_BY             NOT NULL NUMBER(22)  
RENTAL                   6 CREATION_DATE          NOT NULL DATE        
RENTAL                   7 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
RENTAL                   8 LAST_UPDATE_DATE       NOT NULL DATE        

8 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_RENTAL_1                                                 P
NN_RENTAL_1            "CUSTOMER_ID" IS NOT NULL            C
NN_RENTAL_2            "CHECK_OUT_DATE" IS NOT NULL         C
NN_RENTAL_3            "RETURN_DATE" IS NOT NULL            C
NN_RENTAL_4            "CREATED_BY" IS NOT NULL             C
NN_RENTAL_5            "CREATION_DATE" IS NOT NULL          C
NN_RENTAL_6            "LAST_UPDATED_BY" IS NOT NULL        C
NN_RENTAL_7            "LAST_UPDATE_DATE" IS NOT NULL       C

8 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_RENTAL_1                            REFERENCES                              
(RENTAL.CUSTOMER_ID)                   (CONTACT.CONTACT_ID)                    

FK_RENTAL_2                            REFERENCES                              
(RENTAL.CREATED_BY)                    (SYSTEM_USER.SYSTEM_USER_ID)            

FK_RENTAL_3                            REFERENCES                              
(RENTAL.LAST_UPDATED_BY)               (SYSTEM_USER.SYSTEM_USER_ID)            


3 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE rental_s1 START WITH 1001 NOCACHE;

Sequence RENTAL_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
RENTAL_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@item.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   item.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the item table and item_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL item.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('item');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
ITEM

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create a table.
SQL> CREATE TABLE item
  2  ( item_id                     NUMBER
  3  , item_barcode                VARCHAR2(14) CONSTRAINT nn_item_1 NOT NULL
  4  , item_type                   NUMBER       CONSTRAINT nn_item_2 NOT NULL
  5  , item_title                  VARCHAR2(60) CONSTRAINT nn_item_3 NOT NULL
  6  , item_subtitle               VARCHAR2(60)
  7  , item_rating                 VARCHAR2(8)  CONSTRAINT nn_item_4 NOT NULL
  8  , item_release_date           DATE         CONSTRAINT nn_item_5 NOT NULL
  9  , created_by                  NUMBER       CONSTRAINT nn_item_6 NOT NULL
 10  , creation_date               DATE         CONSTRAINT nn_item_7 NOT NULL
 11  , last_updated_by             NUMBER       CONSTRAINT nn_item_8 NOT NULL
 12  , last_update_date            DATE         CONSTRAINT nn_item_9 NOT NULL
 13  , CONSTRAINT pk_item_1        PRIMARY KEY(item_id)
 14  , CONSTRAINT fk_item_1        FOREIGN KEY(item_type) REFERENCES common_lookup(common_lookup_id)
 15  , CONSTRAINT fk_item_2        FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 16  , CONSTRAINT fk_item_3        FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table ITEM created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
ITEM                     1 ITEM_ID                NOT NULL NUMBER(22)  
ITEM                     2 ITEM_BARCODE           NOT NULL VARCHAR2(14)
ITEM                     3 ITEM_TYPE              NOT NULL NUMBER(22)  
ITEM                     4 ITEM_TITLE             NOT NULL VARCHAR2(60)
ITEM                     5 ITEM_SUBTITLE                   VARCHAR2(60)
ITEM                     6 ITEM_RATING            NOT NULL VARCHAR2(8) 
ITEM                     7 ITEM_RELEASE_DATE      NOT NULL DATE        
ITEM                     8 CREATED_BY             NOT NULL NUMBER(22)  
ITEM                     9 CREATION_DATE          NOT NULL DATE        
ITEM                    10 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
ITEM                    11 LAST_UPDATE_DATE       NOT NULL DATE        

11 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_ITEM_1                                                   P
NN_ITEM_1              "ITEM_BARCODE" IS NOT NULL           C
NN_ITEM_2              "ITEM_TYPE" IS NOT NULL              C
NN_ITEM_3              "ITEM_TITLE" IS NOT NULL             C
NN_ITEM_4              "ITEM_RATING" IS NOT NULL            C
NN_ITEM_5              "ITEM_RELEASE_DATE" IS NOT NULL      C
NN_ITEM_6              "CREATED_BY" IS NOT NULL             C
NN_ITEM_7              "CREATION_DATE" IS NOT NULL          C
NN_ITEM_8              "LAST_UPDATED_BY" IS NOT NULL        C
NN_ITEM_9              "LAST_UPDATE_DATE" IS NOT NULL       C

10 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_ITEM_1                              REFERENCES                              
(ITEM.ITEM_TYPE)                       (COMMON_LOOKUP.COMMON_LOOKUP_ID)        

FK_ITEM_2                              REFERENCES                              
(ITEM.CREATED_BY)                      (SYSTEM_USER.SYSTEM_USER_ID)            

FK_ITEM_3                              REFERENCES                              
(ITEM.LAST_UPDATED_BY)                 (SYSTEM_USER.SYSTEM_USER_ID)            


3 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE item_s1 START WITH 1001 NOCACHE;

Sequence ITEM_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
ITEM_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@rental_item.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   rental_item.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the rental_item table and rental_item_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL rental_item.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('rental_item');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
RENTAL_ITEM

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE rental_item
  2  ( rental_item_id              NUMBER
  3  , rental_id                   NUMBER CONSTRAINT nn_rental_item_1 NOT NULL
  4  , item_id                     NUMBER CONSTRAINT nn_rental_item_2 NOT NULL
  5  , created_by                  NUMBER CONSTRAINT nn_rental_item_3 NOT NULL
  6  , creation_date               DATE   CONSTRAINT nn_rental_item_4 NOT NULL
  7  , last_updated_by             NUMBER CONSTRAINT nn_rental_item_5 NOT NULL
  8  , last_update_date            DATE   CONSTRAINT nn_rental_item_6 NOT NULL
  9  , CONSTRAINT pk_rental_item_1 PRIMARY KEY(rental_item_id)
 10  , CONSTRAINT fk_rental_item_1 FOREIGN KEY(rental_id) REFERENCES rental(rental_id)
 11  , CONSTRAINT fk_rental_item_2 FOREIGN KEY(item_id) REFERENCES item(item_id)
 12  , CONSTRAINT fk_rental_item_3 FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
 13  , CONSTRAINT fk_rental_item_4 FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table RENTAL_ITEM created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
RENTAL_ITEM              1 RENTAL_ITEM_ID         NOT NULL NUMBER(22)  
RENTAL_ITEM              2 RENTAL_ID              NOT NULL NUMBER(22)  
RENTAL_ITEM              3 ITEM_ID                NOT NULL NUMBER(22)  
RENTAL_ITEM              4 CREATED_BY             NOT NULL NUMBER(22)  
RENTAL_ITEM              5 CREATION_DATE          NOT NULL DATE        
RENTAL_ITEM              6 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
RENTAL_ITEM              7 LAST_UPDATE_DATE       NOT NULL DATE        

7 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_RENTAL_ITEM_1                                            P
NN_RENTAL_ITEM_1       "RENTAL_ID" IS NOT NULL              C
NN_RENTAL_ITEM_2       "ITEM_ID" IS NOT NULL                C
NN_RENTAL_ITEM_3       "CREATED_BY" IS NOT NULL             C
NN_RENTAL_ITEM_4       "CREATION_DATE" IS NOT NULL          C
NN_RENTAL_ITEM_5       "LAST_UPDATED_BY" IS NOT NULL        C
NN_RENTAL_ITEM_6       "LAST_UPDATE_DATE" IS NOT NULL       C

7 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_RENTAL_ITEM_1                       REFERENCES                              
(RENTAL_ITEM.RENTAL_ID)                (RENTAL.RENTAL_ID)                      

FK_RENTAL_ITEM_2                       REFERENCES                              
(RENTAL_ITEM.ITEM_ID)                  (ITEM.ITEM_ID)                          

FK_RENTAL_ITEM_3                       REFERENCES                              
(RENTAL_ITEM.CREATED_BY)               (SYSTEM_USER.SYSTEM_USER_ID)            

FK_RENTAL_ITEM_4                       REFERENCES                              
(RENTAL_ITEM.LAST_UPDATED_BY)          (SYSTEM_USER.SYSTEM_USER_ID)            


4 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE rental_item_s1 START WITH 1001 NOCACHE;

Sequence RENTAL_ITEM_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
RENTAL_ITEM_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> 
SQL> -- Open log file.
SQL> SPOOL create_oracle_store2.txt
SQL> 
SQL> COLUMN table_name_base     FORMAT A30 HEADING "Base Tables"
SQL> COLUMN sequence_name_base  FORMAT A30 HEADING "Base Sequences"
SQL> SELECT   a.table_name_base
  2  ,        b.sequence_name_base
  3  FROM    (SELECT   table_name AS table_name_base
  4           FROM     user_tables
  5           WHERE    table_name IN ('SYSTEM_USER'
  6                                  ,'COMMON_LOOKUP'
  7                                  ,'MEMBER'
  8                                  ,'CONTACT'
  9                                  ,'ADDRESS'
 10                                  ,'STREET_ADDRESS'
 11                                  ,'TELEPHONE'
 12                                  ,'ITEM'
 13                                  ,'RENTAL'
 14                                  ,'RENTAL_ITEM')) a  INNER JOIN
 15          (SELECT   sequence_name AS sequence_name_base
 16           FROM     user_sequences
 17           WHERE    sequence_name IN ('SYSTEM_USER_S1'
 18                                     ,'COMMON_LOOKUP_S1'
 19                                     ,'MEMBER_S1'
 20                                     ,'CONTACT_S1'
 21                                     ,'ADDRESS_S1'
 22                                     ,'STREET_ADDRESS_S1'
 23                                     ,'TELEPHONE_S1'
 24                                     ,'ITEM_S1'
 25                                     ,'RENTAL_S1'
 26                                     ,'RENTAL_ITEM_S1')) b
 27  ON       a.table_name_base =
 28             SUBSTR( b.sequence_name_base, 1, REGEXP_INSTR(b.sequence_name_base,'_S1') - 1)
 29  ORDER BY CASE
 30             WHEN table_name_base LIKE 'SYSTEM_USER%' THEN 0
 31             WHEN table_name_base LIKE 'COMMON_LOOKUP%' THEN 1
 32             WHEN table_name_base LIKE 'MEMBER%' THEN 2
 33             WHEN table_name_base LIKE 'CONTACT%' THEN 3
 34             WHEN table_name_base LIKE 'ADDRESS%' THEN 4
 35             WHEN table_name_base LIKE 'STREET_ADDRESS%' THEN 5
 36             WHEN table_name_base LIKE 'TELEPHONE%' THEN 6
 37             WHEN table_name_base LIKE 'ITEM%' THEN 7
 38             WHEN table_name_base LIKE 'RENTAL%' AND NOT table_name_base LIKE 'RENTAL_ITEM%' THEN 8
 39             WHEN table_name_base LIKE 'RENTAL_ITEM%' THEN 9
 40           END;

Base Tables                    Base Sequences                
------------------------------ ------------------------------
SYSTEM_USER                    SYSTEM_USER_S1                
COMMON_LOOKUP                  COMMON_LOOKUP_S1              
MEMBER                         MEMBER_S1                     
CONTACT                        CONTACT_S1                    
ADDRESS                        ADDRESS_S1                    
STREET_ADDRESS                 STREET_ADDRESS_S1             
TELEPHONE                      TELEPHONE_S1                  
ITEM                           ITEM_S1                       
RENTAL                         RENTAL_S1                     
RENTAL_ITEM                    RENTAL_ITEM_S1                

10 rows selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
not spooling currently
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Call scripts to create tables.
SQL> -- ------------------------------------------------------------------
SQL> @@system_user_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   system_user_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the system_user_lab table and system_user_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL system_user_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('system_user_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
SYSTEM_USER_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE system_user_lab
  2  ( system_user_lab_id              NUMBER
  3  , system_user_name            VARCHAR2(20) CONSTRAINT nn_system_user_lab_1 NOT NULL
  4  , system_user_group_id        NUMBER       CONSTRAINT nn_system_user_lab_2 NOT NULL
  5  , system_user_type            NUMBER       CONSTRAINT nn_system_user_lab_3 NOT NULL
  6  , first_name                  VARCHAR2(20)
  7  , middle_name                 VARCHAR2(20)
  8  , last_name                   VARCHAR2(20)
  9  , created_by                  NUMBER       CONSTRAINT nn_system_user_lab_4 NOT NULL
 10  , creation_date               DATE         CONSTRAINT nn_system_user_lab_5 NOT NULL
 11  , last_updated_by             NUMBER       CONSTRAINT nn_system_user_lab_6 NOT NULL
 12  , last_update_date            DATE         CONSTRAINT nn_system_user_lab_7 NOT NULL
 13  , CONSTRAINT pk_system_user_lab_1 PRIMARY KEY(system_user_lab_id)
 14  , CONSTRAINT fk_system_user_lab_1 FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 15  , CONSTRAINT fk_system_user_lab_2 FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table SYSTEM_USER_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
SYSTEM_USER_LAB          1 SYSTEM_USER_LAB_ID     NOT NULL NUMBER(22)  
SYSTEM_USER_LAB          2 SYSTEM_USER_NAME       NOT NULL VARCHAR2(20)
SYSTEM_USER_LAB          3 SYSTEM_USER_GROUP_ID   NOT NULL NUMBER(22)  
SYSTEM_USER_LAB          4 SYSTEM_USER_TYPE       NOT NULL NUMBER(22)  
SYSTEM_USER_LAB          5 FIRST_NAME                      VARCHAR2(20)
SYSTEM_USER_LAB          6 MIDDLE_NAME                     VARCHAR2(20)
SYSTEM_USER_LAB          7 LAST_NAME                       VARCHAR2(20)
SYSTEM_USER_LAB          8 CREATED_BY             NOT NULL NUMBER(22)  
SYSTEM_USER_LAB          9 CREATION_DATE          NOT NULL DATE        
SYSTEM_USER_LAB         10 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
SYSTEM_USER_LAB         11 LAST_UPDATE_DATE       NOT NULL DATE        

11 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type = UPPER('c')
  9  ORDER BY uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
NN_SYSTEM_USER_LAB_1   "SYSTEM_USER_NAME" IS NOT NULL       C
NN_SYSTEM_USER_LAB_2   "SYSTEM_USER_GROUP_ID" IS NOT NULL   C
NN_SYSTEM_USER_LAB_3   "SYSTEM_USER_TYPE" IS NOT NULL       C
NN_SYSTEM_USER_LAB_4   "CREATED_BY" IS NOT NULL             C
NN_SYSTEM_USER_LAB_5   "CREATION_DATE" IS NOT NULL          C
NN_SYSTEM_USER_LAB_6   "LAST_UPDATED_BY" IS NOT NULL        C
NN_SYSTEM_USER_LAB_7   "LAST_UPDATE_DATE" IS NOT NULL       C

7 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_SYSTEM_USER_LAB_1                   REFERENCES                              
(SYSTEM_USER_LAB.CREATED_BY)           (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_SYSTEM_USER_LAB_2                   REFERENCES                              
(SYSTEM_USER_LAB.LAST_UPDATED_BY)      (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


2 rows selected. 

SQL> 
SQL> -- Create unique index.
SQL> CREATE UNIQUE INDEX uq_system_user_lab_1
  2    ON system_user_lab (system_user_name);

INDEX UQ_SYSTEM_USER_LAB_1 created.

SQL> 
SQL> -- Display unique indexes.
SQL> COLUMN index_name FORMAT A20 HEADING "Index Name"
SQL> SELECT   index_name
  2  FROM     user_indexes
  3  WHERE    table_name = :table_name;

Index Name          
--------------------
PK_SYSTEM_USER_LAB_1
UQ_SYSTEM_USER_LAB_1

2 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE system_user_lab_s1 START WITH 1001 NOCACHE;

Sequence SYSTEM_USER_LAB_S1 created.

SQL> 
SQL> -- Display sequence.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
SYSTEM_USER_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@common_lookup_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   common_lookup_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the common_lookup_lab table and common_lookup_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL common_lookup_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('common_lookup_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
COMMON_LOOKUP_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE common_lookup_lab
  2  ( common_lookup_lab_id            NUMBER
  3  , common_lookup_context       VARCHAR2(30) CONSTRAINT nn_common_lookup_lab_1 NOT NULL
  4  , common_lookup_type          VARCHAR2(30) CONSTRAINT nn_common_lookup_lab_2 NOT NULL
  5  , common_lookup_meaning       VARCHAR2(30) CONSTRAINT nn_common_lookup_lab_3 NOT NULL
  6  , created_by                  NUMBER       CONSTRAINT nn_common_lookup_lab_4 NOT NULL
  7  , creation_date               DATE         CONSTRAINT nn_common_lookup_lab_5 NOT NULL
  8  , last_updated_by             NUMBER       CONSTRAINT nn_common_lookup_lab_6 NOT NULL
  9  , last_update_date            DATE         CONSTRAINT nn_common_lookup_lab_7 NOT NULL
 10  , CONSTRAINT pk_common_lookup_lab_1    PRIMARY KEY(common_lookup_lab_id)
 11  , CONSTRAINT fk_common_lookup_lab_1    FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 12  , CONSTRAINT fk_common_lookup_lab_2    FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table COMMON_LOOKUP_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
COMMON_LOOKUP_LA         1 COMMON_LOOKUP_LAB_ID   NOT NULL NUMBER(22)  
B                                                                      

COMMON_LOOKUP_LA         2 COMMON_LOOKUP_CONTEXT  NOT NULL VARCHAR2(30)
B                                                                      

COMMON_LOOKUP_LA         3 COMMON_LOOKUP_TYPE     NOT NULL VARCHAR2(30)
B                                                                      

COMMON_LOOKUP_LA         4 COMMON_LOOKUP_MEANING  NOT NULL VARCHAR2(30)
B                                                                      

COMMON_LOOKUP_LA         5 CREATED_BY             NOT NULL NUMBER(22)  
B                                                                      

COMMON_LOOKUP_LA         6 CREATION_DATE          NOT NULL DATE        
B                                                                      

COMMON_LOOKUP_LA         7 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
B                                                                      

COMMON_LOOKUP_LA         8 LAST_UPDATE_DATE       NOT NULL DATE        
B                                                                      


8 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_COMMON_LOOKUP_LAB_1                                      P
NN_COMMON_LOOKUP_LAB_1 "COMMON_LOOKUP_CONTEXT" IS NOT NULL  C
NN_COMMON_LOOKUP_LAB_2 "COMMON_LOOKUP_TYPE" IS NOT NULL     C
NN_COMMON_LOOKUP_LAB_3 "COMMON_LOOKUP_MEANING" IS NOT NULL  C
NN_COMMON_LOOKUP_LAB_4 "CREATED_BY" IS NOT NULL             C
NN_COMMON_LOOKUP_LAB_5 "CREATION_DATE" IS NOT NULL          C
NN_COMMON_LOOKUP_LAB_6 "LAST_UPDATED_BY" IS NOT NULL        C
NN_COMMON_LOOKUP_LAB_7 "LAST_UPDATE_DATE" IS NOT NULL       C

8 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_COMMON_LOOKUP_LAB_1                 REFERENCES                              
(COMMON_LOOKUP_LAB.CREATED_BY)         (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_COMMON_LOOKUP_LAB_2                 REFERENCES                              
(COMMON_LOOKUP_LAB.LAST_UPDATED_BY)    (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


2 rows selected. 

SQL> 
SQL> -- Create a non-unique index.
SQL> CREATE INDEX common_lookup_lab_n1
  2    ON common_lookup_lab(common_lookup_context);

Index COMMON_LOOKUP_LAB_N1 created.

SQL> 
SQL> -- Create a unique index.
SQL> CREATE UNIQUE INDEX common_lookup_lab_u2
  2    ON common_lookup_lab(common_lookup_context,common_lookup_type);

INDEX COMMON_LOOKUP_LAB_U2 created.

SQL> 
SQL> -- Display unique and non-unique indexes.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  ORDER BY ui.index_name
  9  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
COMMON_LOOKUP_LAB_N1               1 COMMON_LOOKUP_CONTEXT 
COMMON_LOOKUP_LAB_U2               1 COMMON_LOOKUP_CONTEXT 
COMMON_LOOKUP_LAB_U2               2 COMMON_LOOKUP_TYPE    
PK_COMMON_LOOKUP_LAB               1 COMMON_LOOKUP_LAB_ID  
_1                                                         


4 rows selected. 

SQL> 
SQL> -- Add a constraint to the SYSTEM_USER table dependent on the COMMON_LOOKUP table.
SQL> ALTER TABLE system_user
  2  ADD CONSTRAINT fk_system_user_lab_3 FOREIGN KEY(system_user_group_id)
  3      REFERENCES common_lookup_lab(common_lookup_lab_id);

Table SYSTEM_USER altered.

SQL> 
SQL> ALTER TABLE system_user
  2  ADD CONSTRAINT fk_system_user_lab_4 FOREIGN KEY(system_user_type)
  3      REFERENCES common_lookup_lab(common_lookup_lab_id);

Table SYSTEM_USER altered.

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_COMMON_LOOKUP_LAB_1                 REFERENCES                              
(COMMON_LOOKUP_LAB.CREATED_BY)         (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_COMMON_LOOKUP_LAB_2                 REFERENCES                              
(COMMON_LOOKUP_LAB.LAST_UPDATED_BY)    (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


2 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE common_lookup_lab_s1 START WITH 1001;

Sequence COMMON_LOOKUP_LAB_S1 created.

SQL> 
SQL> -- Display sequence.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
COMMON_LOOKUP_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@member_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   member_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the member_lab table and member_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL member_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('member_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
MEMBER_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE member_lab
  2  ( member_lab_id                   NUMBER
  3  , member_type                 NUMBER
  4  , account_number              VARCHAR2(10) CONSTRAINT nn_member_lab_2 NOT NULL
  5  , credit_card_number          VARCHAR2(19) CONSTRAINT nn_member_lab_3 NOT NULL
  6  , credit_card_type            NUMBER       CONSTRAINT nn_member_lab_4 NOT NULL
  7  , created_by                  NUMBER       CONSTRAINT nn_member_lab_5 NOT NULL
  8  , creation_date               DATE         CONSTRAINT nn_member_lab_6 NOT NULL
  9  , last_updated_by             NUMBER       CONSTRAINT nn_member_lab_7 NOT NULL
 10  , last_update_date            DATE         CONSTRAINT nn_member_lab_8 NOT NULL
 11  , CONSTRAINT pk_member_lab_1      PRIMARY KEY(member_lab_id)
 12  , CONSTRAINT fk_member_lab_1      FOREIGN KEY(member_type) REFERENCES common_lookup_lab(common_lookup_lab_id)
 13  , CONSTRAINT fk_member_lab_2      FOREIGN KEY(credit_card_type) REFERENCES common_lookup_lab(common_lookup_lab_id)
 14  , CONSTRAINT fk_member_lab_3      FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 15  , CONSTRAINT fk_member_lab_4      FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table MEMBER_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
MEMBER_LAB               1 MEMBER_LAB_ID          NOT NULL NUMBER(22)  
MEMBER_LAB               2 MEMBER_TYPE                     NUMBER(22)  
MEMBER_LAB               3 ACCOUNT_NUMBER         NOT NULL VARCHAR2(10)
MEMBER_LAB               4 CREDIT_CARD_NUMBER     NOT NULL VARCHAR2(19)
MEMBER_LAB               5 CREDIT_CARD_TYPE       NOT NULL NUMBER(22)  
MEMBER_LAB               6 CREATED_BY             NOT NULL NUMBER(22)  
MEMBER_LAB               7 CREATION_DATE          NOT NULL DATE        
MEMBER_LAB               8 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
MEMBER_LAB               9 LAST_UPDATE_DATE       NOT NULL DATE        

9 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_MEMBER_LAB_1                                             P
NN_MEMBER_LAB_2        "ACCOUNT_NUMBER" IS NOT NULL         C
NN_MEMBER_LAB_3        "CREDIT_CARD_NUMBER" IS NOT NULL     C
NN_MEMBER_LAB_4        "CREDIT_CARD_TYPE" IS NOT NULL       C
NN_MEMBER_LAB_5        "CREATED_BY" IS NOT NULL             C
NN_MEMBER_LAB_6        "CREATION_DATE" IS NOT NULL          C
NN_MEMBER_LAB_7        "LAST_UPDATED_BY" IS NOT NULL        C
NN_MEMBER_LAB_8        "LAST_UPDATE_DATE" IS NOT NULL       C

8 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_MEMBER_LAB_1                        REFERENCES                              
(MEMBER_LAB.MEMBER_TYPE)               (COMMON_LOOKUP_LAB.COMMON_LOOKUP_LAB_ID)

FK_MEMBER_LAB_2                        REFERENCES                              
(MEMBER_LAB.CREDIT_CARD_TYPE)          (COMMON_LOOKUP_LAB.COMMON_LOOKUP_LAB_ID)

FK_MEMBER_LAB_3                        REFERENCES                              
(MEMBER_LAB.CREATED_BY)                (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_MEMBER_LAB_4                        REFERENCES                              
(MEMBER_LAB.LAST_UPDATED_BY)           (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


4 rows selected. 

SQL> 
SQL> -- Create a non-unique index.
SQL> CREATE INDEX member_lab_n1 ON member_lab(credit_card_type);

Index MEMBER_LAB_N1 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
MEMBER_LAB_N1                      1 CREDIT_CARD_TYPE      

1 row selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE _lab_s1 START WITH 1001 NOCACHE;

Error starting at line : 153 File @ /home/student/Data/cit225/oracle/lab2/member_lab.sql
In command -
CREATE SEQUENCE _lab_s1 START WITH 1001 NOCACHE
Error report -
ORA-00911: invalid character
00911. 00000 -  "invalid character"
*Cause:    identifiers may not start with any ASCII character other than
           letters and numbers.  $#_ are also allowed after the first
           character.  Identifiers enclosed by doublequotes may contain
           any character other than a doublequote.  Alternative quotes
           (q'#...#') cannot use spaces, tabs, or carriage returns as
           delimiters.  For all other contexts, consult the SQL Language
           Reference Manual.
*Action:
SQL> 
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

0 rows selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@contact_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   contact_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the contact_lab table and contact_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL contact_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('contact_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
CONTACT_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE contact_lab
  2  ( contact_lab_id                  NUMBER
  3  , member_lab_id                   NUMBER       CONSTRAINT nn_contact_lab_1 NOT NULL
  4  , contact_type                NUMBER       CONSTRAINT nn_contact_lab_2 NOT NULL
  5  , first_name                  VARCHAR2(20) CONSTRAINT nn_contact_lab_3 NOT NULL
  6  , middle_name                 VARCHAR2(20)
  7  , last_name                   VARCHAR2(20) CONSTRAINT nn_contact_lab_4 NOT NULL
  8  , created_by                  NUMBER       CONSTRAINT nn_contact_lab_5 NOT NULL
  9  , creation_date               DATE         CONSTRAINT nn_contact_lab_6 NOT NULL
 10  , last_updated_by             NUMBER       CONSTRAINT nn_contact_lab_7 NOT NULL
 11  , last_update_date            DATE         CONSTRAINT nn_contact_lab_8 NOT NULL
 12  , CONSTRAINT pk_contact_lab_1     PRIMARY KEY(contact_lab_id)
 13  , CONSTRAINT fk_contact_lab_1     FOREIGN KEY(member_lab_id) REFERENCES member_lab(member_lab_id)
 14  , CONSTRAINT fk_contact_lab_2     FOREIGN KEY(contact_type) REFERENCES common_lookup_lab(common_lookup_lab_id)
 15  , CONSTRAINT fk_contact_lab_3     FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 16  , CONSTRAINT fk_contact_lab_4     FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table CONTACT_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
CONTACT_LAB              1 CONTACT_LAB_ID         NOT NULL NUMBER(22)  
CONTACT_LAB              2 MEMBER_LAB_ID          NOT NULL NUMBER(22)  
CONTACT_LAB              3 CONTACT_TYPE           NOT NULL NUMBER(22)  
CONTACT_LAB              4 FIRST_NAME             NOT NULL VARCHAR2(20)
CONTACT_LAB              5 MIDDLE_NAME                     VARCHAR2(20)
CONTACT_LAB              6 LAST_NAME              NOT NULL VARCHAR2(20)
CONTACT_LAB              7 CREATED_BY             NOT NULL NUMBER(22)  
CONTACT_LAB              8 CREATION_DATE          NOT NULL DATE        
CONTACT_LAB              9 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
CONTACT_LAB             10 LAST_UPDATE_DATE       NOT NULL DATE        

10 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_CONTACT_LAB_1                                            P
NN_CONTACT_LAB_1       "MEMBER_LAB_ID" IS NOT NULL          C
NN_CONTACT_LAB_2       "CONTACT_TYPE" IS NOT NULL           C
NN_CONTACT_LAB_3       "FIRST_NAME" IS NOT NULL             C
NN_CONTACT_LAB_4       "LAST_NAME" IS NOT NULL              C
NN_CONTACT_LAB_5       "CREATED_BY" IS NOT NULL             C
NN_CONTACT_LAB_6       "CREATION_DATE" IS NOT NULL          C
NN_CONTACT_LAB_7       "LAST_UPDATED_BY" IS NOT NULL        C
NN_CONTACT_LAB_8       "LAST_UPDATE_DATE" IS NOT NULL       C

9 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_CONTACT_LAB_1                       REFERENCES                              
(CONTACT_LAB.MEMBER_LAB_ID)            (MEMBER_LAB.MEMBER_LAB_ID)              

FK_CONTACT_LAB_2                       REFERENCES                              
(CONTACT_LAB.CONTACT_TYPE)             (COMMON_LOOKUP_LAB.COMMON_LOOKUP_LAB_ID)

FK_CONTACT_LAB_3                       REFERENCES                              
(CONTACT_LAB.CREATED_BY)               (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_CONTACT_LAB_4                       REFERENCES                              
(CONTACT_LAB.LAST_UPDATED_BY)          (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


4 rows selected. 

SQL> 
SQL> -- Create non-unique indexes.
SQL> CREATE INDEX contact_lab_n1 ON contact_lab(member_lab_id);

Index CONTACT_LAB_N1 created.

SQL> CREATE INDEX contact_lab_n2 ON contact_lab(contact_type);

Index CONTACT_LAB_N2 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
CONTACT_LAB_N1                     1 MEMBER_LAB_ID         
CONTACT_LAB_N2                     1 CONTACT_TYPE          

2 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE contact_lab_s1 START WITH 1001 NOCACHE;

Sequence CONTACT_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
CONTACT_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@address_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   address_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the address_lab table and addres_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL addres_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('address_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
ADDRESS_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE address_lab
  2  ( address_lab_id                  NUMBER
  3  , contact_lab_id                  NUMBER       CONSTRAINT nn_address_lab_1 NOT NULL
  4  , address_type                NUMBER       CONSTRAINT nn_address_lab_2 NOT NULL
  5  , city                        VARCHAR2(30) CONSTRAINT nn_address_lab_3 NOT NULL
  6  , state_province              VARCHAR2(30) CONSTRAINT nn_address_lab_4 NOT NULL
  7  , postal_code                 VARCHAR2(20) CONSTRAINT nn_address_lab_5 NOT NULL
  8  , created_by                  NUMBER       CONSTRAINT nn_address_lab_6 NOT NULL
  9  , creation_date               DATE         CONSTRAINT nn_address_lab_7 NOT NULL
 10  , last_updated_by             NUMBER       CONSTRAINT nn_address_lab_8 NOT NULL
 11  , last_update_date            DATE         CONSTRAINT nn_address_lab_9 NOT NULL
 12  , CONSTRAINT pk_address_lab_1     PRIMARY KEY(address_lab_id)
 13  , CONSTRAINT fk_address_lab_1     FOREIGN KEY(contact_lab_id) REFERENCES contact_lab(contact_lab_id)
 14  , CONSTRAINT fk_address_lab_2     FOREIGN KEY(address_type) REFERENCES common_lookup_lab(common_lookup_lab_id)
 15  , CONSTRAINT fk_address_lab_3     FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 16  , CONSTRAINT fk_address_lab_4     FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table ADDRESS_LAB created.

SQL> 
SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
ADDRESS_LAB              1 ADDRESS_LAB_ID         NOT NULL NUMBER(22)  
ADDRESS_LAB              2 CONTACT_LAB_ID         NOT NULL NUMBER(22)  
ADDRESS_LAB              3 ADDRESS_TYPE           NOT NULL NUMBER(22)  
ADDRESS_LAB              4 CITY                   NOT NULL VARCHAR2(30)
ADDRESS_LAB              5 STATE_PROVINCE         NOT NULL VARCHAR2(30)
ADDRESS_LAB              6 POSTAL_CODE            NOT NULL VARCHAR2(20)
ADDRESS_LAB              7 CREATED_BY             NOT NULL NUMBER(22)  
ADDRESS_LAB              8 CREATION_DATE          NOT NULL DATE        
ADDRESS_LAB              9 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
ADDRESS_LAB             10 LAST_UPDATE_DATE       NOT NULL DATE        

10 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_ADDRESS_LAB_1                                            P
NN_ADDRESS_LAB_1       "CONTACT_LAB_ID" IS NOT NULL         C
NN_ADDRESS_LAB_2       "ADDRESS_TYPE" IS NOT NULL           C
NN_ADDRESS_LAB_3       "CITY" IS NOT NULL                   C
NN_ADDRESS_LAB_4       "STATE_PROVINCE" IS NOT NULL         C
NN_ADDRESS_LAB_5       "POSTAL_CODE" IS NOT NULL            C
NN_ADDRESS_LAB_6       "CREATED_BY" IS NOT NULL             C
NN_ADDRESS_LAB_7       "CREATION_DATE" IS NOT NULL          C
NN_ADDRESS_LAB_8       "LAST_UPDATED_BY" IS NOT NULL        C
NN_ADDRESS_LAB_9       "LAST_UPDATE_DATE" IS NOT NULL       C

10 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_ADDRESS_LAB_1                       REFERENCES                              
(ADDRESS_LAB.CONTACT_LAB_ID)           (CONTACT_LAB.CONTACT_LAB_ID)            

FK_ADDRESS_LAB_2                       REFERENCES                              
(ADDRESS_LAB.ADDRESS_TYPE)             (COMMON_LOOKUP_LAB.COMMON_LOOKUP_LAB_ID)

FK_ADDRESS_LAB_3                       REFERENCES                              
(ADDRESS_LAB.CREATED_BY)               (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_ADDRESS_LAB_4                       REFERENCES                              
(ADDRESS_LAB.LAST_UPDATED_BY)          (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


4 rows selected. 

SQL> 
SQL> -- Create a non-unique index.
SQL> CREATE INDEX address_lab_n1 ON address_lab(address_lab_id);

Error starting at line : 135 File @ /home/student/Data/cit225/oracle/lab2/address_lab.sql
In command -
CREATE INDEX address_lab_n1 ON address_lab(address_lab_id)
Error report -
ORA-01408: such column list already indexed
01408. 00000 -  "such column list already indexed"
*Cause:    
*Action:
SQL> CREATE INDEX address_lab_n2 ON address_lab(address_type);

Index ADDRESS_LAB_N2 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
ADDRESS_LAB_N2                     1 ADDRESS_TYPE          

1 row selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE address_lab_s1 START WITH 1001 NOCACHE;

Sequence ADDRESS_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
ADDRESS_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@street_address_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   street_address_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the contact table and contact_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL street_address_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('street_address_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
STREET_ADDRESS_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE street_address_lab
  2  ( street_address_lab_id           NUMBER
  3  , address_lab_id                  NUMBER       CONSTRAINT nn_saddress_lab_1 NOT NULL
  4  , street_address              VARCHAR2(30) CONSTRAINT nn_saddress_lab_2 NOT NULL
  5  , created_by                  NUMBER       CONSTRAINT nn_saddress_lab_3 NOT NULL
  6  , creation_date               DATE         CONSTRAINT nn_saddress_lab_4 NOT NULL
  7  , last_updated_by             NUMBER       CONSTRAINT nn_saddress_lab_5 NOT NULL
  8  , last_update_date            DATE         CONSTRAINT nn_saddress_lab_6 NOT NULL
  9  , CONSTRAINT pk_s_address_lab_1   PRIMARY KEY(street_address_lab_id)
 10  , CONSTRAINT fk_s_address_lab_1   FOREIGN KEY(address_lab_id) REFERENCES address_lab(address_lab_id)
 11  , CONSTRAINT fk_s_address_lab_3   FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 12  , CONSTRAINT fk_s_address_lab_4   FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table STREET_ADDRESS_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
STREET_ADDRESS_L         1 STREET_ADDRESS_LAB_ID  NOT NULL NUMBER(22)  
AB                                                                     

STREET_ADDRESS_L         2 ADDRESS_LAB_ID         NOT NULL NUMBER(22)  
AB                                                                     

STREET_ADDRESS_L         3 STREET_ADDRESS         NOT NULL VARCHAR2(30)
AB                                                                     

STREET_ADDRESS_L         4 CREATED_BY             NOT NULL NUMBER(22)  
AB                                                                     

STREET_ADDRESS_L         5 CREATION_DATE          NOT NULL DATE        
AB                                                                     

STREET_ADDRESS_L         6 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
AB                                                                     

STREET_ADDRESS_L         7 LAST_UPDATE_DATE       NOT NULL DATE        
AB                                                                     


7 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_S_ADDRESS_LAB_1                                          P
NN_SADDRESS_LAB_1      "ADDRESS_LAB_ID" IS NOT NULL         C
NN_SADDRESS_LAB_2      "STREET_ADDRESS" IS NOT NULL         C
NN_SADDRESS_LAB_3      "CREATED_BY" IS NOT NULL             C
NN_SADDRESS_LAB_4      "CREATION_DATE" IS NOT NULL          C
NN_SADDRESS_LAB_5      "LAST_UPDATED_BY" IS NOT NULL        C
NN_SADDRESS_LAB_6      "LAST_UPDATE_DATE" IS NOT NULL       C

7 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_S_ADDRESS_LAB_1                     REFERENCES                              
(STREET_ADDRESS_LAB.ADDRESS_LAB_ID)    (ADDRESS_LAB.ADDRESS_LAB_ID)            

FK_S_ADDRESS_LAB_3                     REFERENCES                              
(STREET_ADDRESS_LAB.CREATED_BY)        (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_S_ADDRESS_LAB_4                     REFERENCES                              
(STREET_ADDRESS_LAB.LAST_UPDATED_BY)   (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


3 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE street_address_lab_s1 START WITH 1001 NOCACHE;

Sequence STREET_ADDRESS_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
STREET_ADDRESS_LAB_S
1


1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@telephone_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   telephone_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the telephone_lab table and telephone_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL telephone_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('telephone_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
TELEPHONE_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE telephone_lab
  2  ( telephone_lab_id                NUMBER
  3  , contact_lab_id                  NUMBER       CONSTRAINT nn_telephone_lab_1 NOT NULL
  4  , address_lab_id                  NUMBER
  5  , telephone_type              NUMBER       CONSTRAINT nn_telephone_lab_2 NOT NULL
  6  , country_code                VARCHAR2(3)  CONSTRAINT nn_telephone_lab_3 NOT NULL
  7  , area_code                   VARCHAR2(6)  CONSTRAINT nn_telephone_lab_4 NOT NULL
  8  , telephone_number            VARCHAR2(10) CONSTRAINT nn_telephone_lab_5 NOT NULL
  9  , created_by                  NUMBER       CONSTRAINT nn_telephone_lab_6 NOT NULL
 10  , creation_date               DATE         CONSTRAINT nn_telephone_lab_7 NOT NULL
 11  , last_updated_by             NUMBER       CONSTRAINT nn_telephone_lab_8 NOT NULL
 12  , last_update_date            DATE         CONSTRAINT nn_telephone_lab_9 NOT NULL
 13  , CONSTRAINT pk_telephone_lab_1   PRIMARY KEY(telephone_lab_id)
 14  , CONSTRAINT fk_telephone_lab_1   FOREIGN KEY(contact_lab_id) REFERENCES contact_lab(contact_lab_id)
 15  , CONSTRAINT fk_telephone_lab_2   FOREIGN KEY(telephone_type) REFERENCES common_lookup_lab(common_lookup_lab_id)
 16  , CONSTRAINT fk_telephone_lab_3   FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 17  , CONSTRAINT fk_telephone_lab_4   FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table TELEPHONE_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
TELEPHONE_LAB            1 TELEPHONE_LAB_ID       NOT NULL NUMBER(22)  
TELEPHONE_LAB            2 CONTACT_LAB_ID         NOT NULL NUMBER(22)  
TELEPHONE_LAB            3 ADDRESS_LAB_ID                  NUMBER(22)  
TELEPHONE_LAB            4 TELEPHONE_TYPE         NOT NULL NUMBER(22)  
TELEPHONE_LAB            5 COUNTRY_CODE           NOT NULL VARCHAR2(3) 
TELEPHONE_LAB            6 AREA_CODE              NOT NULL VARCHAR2(6) 
TELEPHONE_LAB            7 TELEPHONE_NUMBER       NOT NULL VARCHAR2(10)
TELEPHONE_LAB            8 CREATED_BY             NOT NULL NUMBER(22)  
TELEPHONE_LAB            9 CREATION_DATE          NOT NULL DATE        
TELEPHONE_LAB           10 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
TELEPHONE_LAB           11 LAST_UPDATE_DATE       NOT NULL DATE        

11 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_TELEPHONE_LAB_1                                          P
NN_TELEPHONE_LAB_1     "CONTACT_LAB_ID" IS NOT NULL         C
NN_TELEPHONE_LAB_2     "TELEPHONE_TYPE" IS NOT NULL         C
NN_TELEPHONE_LAB_3     "COUNTRY_CODE" IS NOT NULL           C
NN_TELEPHONE_LAB_4     "AREA_CODE" IS NOT NULL              C
NN_TELEPHONE_LAB_5     "TELEPHONE_NUMBER" IS NOT NULL       C
NN_TELEPHONE_LAB_6     "CREATED_BY" IS NOT NULL             C
NN_TELEPHONE_LAB_7     "CREATION_DATE" IS NOT NULL          C
NN_TELEPHONE_LAB_8     "LAST_UPDATED_BY" IS NOT NULL        C
NN_TELEPHONE_LAB_9     "LAST_UPDATE_DATE" IS NOT NULL       C

10 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_TELEPHONE_LAB_1                     REFERENCES                              
(TELEPHONE_LAB.CONTACT_LAB_ID)         (CONTACT_LAB.CONTACT_LAB_ID)            

FK_TELEPHONE_LAB_2                     REFERENCES                              
(TELEPHONE_LAB.TELEPHONE_TYPE)         (COMMON_LOOKUP_LAB.COMMON_LOOKUP_LAB_ID)

FK_TELEPHONE_LAB_3                     REFERENCES                              
(TELEPHONE_LAB.CREATED_BY)             (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_TELEPHONE_LAB_4                     REFERENCES                              
(TELEPHONE_LAB.LAST_UPDATED_BY)        (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


4 rows selected. 

SQL> 
SQL> -- Create non-unique indexes.
SQL> CREATE INDEX telephone_lab_n1 ON telephone_lab(contact_lab_id,address_lab_id);

Index TELEPHONE_LAB_N1 created.

SQL> CREATE INDEX telephone_lab_n2 ON telephone_lab(address_lab_id);

Index TELEPHONE_LAB_N2 created.

SQL> CREATE INDEX telephone_lab_n3 ON telephone_lab(telephone_type);

Index TELEPHONE_LAB_N3 created.

SQL> 
SQL> -- Display the non-unique index.
SQL> COLUMN sequence_name   FORMAT A22 HEADING "Sequence Name"
SQL> COLUMN column_position FORMAT 999 HEADING "Column|Position"
SQL> COLUMN column_name     FORMAT A22 HEADING "Column|Name"
SQL> SELECT   ui.index_name
  2  ,        uic.column_position
  3  ,        uic.column_name
  4  FROM     user_indexes ui INNER JOIN user_ind_columns uic
  5  ON       ui.index_name = uic.index_name
  6  AND      ui.table_name = uic.table_name
  7  WHERE    ui.table_name = :table_name
  8  AND NOT  ui.index_name IN (SELECT constraint_name
  9                             FROM   user_constraints)
 10  ORDER BY ui.index_name
 11  ,        uic.column_position;

                              Column Column                
Index Name                  Position Name                  
-------------------- --------------- ----------------------
TELEPHONE_LAB_N1                   1 CONTACT_LAB_ID        
TELEPHONE_LAB_N1                   2 ADDRESS_LAB_ID        
TELEPHONE_LAB_N2                   1 ADDRESS_LAB_ID        
TELEPHONE_LAB_N3                   1 TELEPHONE_TYPE        

4 rows selected. 

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE telephone_lab_s1 START WITH 1001 NOCACHE;

Sequence TELEPHONE_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
TELEPHONE_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@rental_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   rental_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the rental_lab table and rental_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL rental_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('rental_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
RENTAL_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE rental_lab
  2  ( rental_lab_id                   NUMBER
  3  , customer_id                 NUMBER CONSTRAINT nn_rental_lab_1 NOT NULL
  4  , check_out_date              DATE   CONSTRAINT nn_rental_lab_2 NOT NULL
  5  , return_date                 DATE   CONSTRAINT nn_rental_lab_3 NOT NULL
  6  , created_by                  NUMBER CONSTRAINT nn_rental_lab_4 NOT NULL
  7  , creation_date               DATE   CONSTRAINT nn_rental_lab_5 NOT NULL
  8  , last_updated_by             NUMBER CONSTRAINT nn_rental_lab_6 NOT NULL
  9  , last_update_date            DATE   CONSTRAINT nn_rental_lab_7 NOT NULL
 10  , CONSTRAINT pk_rental_lab_1      PRIMARY KEY(rental_lab_id)
 11  , CONSTRAINT fk_rental_lab_1      FOREIGN KEY(customer_id) REFERENCES contact_lab(contact_lab_id)
 12  , CONSTRAINT fk_rental_lab_2      FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 13  , CONSTRAINT fk_rental_lab_3      FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table RENTAL_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
RENTAL_LAB               1 RENTAL_LAB_ID          NOT NULL NUMBER(22)  
RENTAL_LAB               2 CUSTOMER_ID            NOT NULL NUMBER(22)  
RENTAL_LAB               3 CHECK_OUT_DATE         NOT NULL DATE        
RENTAL_LAB               4 RETURN_DATE            NOT NULL DATE        
RENTAL_LAB               5 CREATED_BY             NOT NULL NUMBER(22)  
RENTAL_LAB               6 CREATION_DATE          NOT NULL DATE        
RENTAL_LAB               7 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
RENTAL_LAB               8 LAST_UPDATE_DATE       NOT NULL DATE        

8 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_RENTAL_LAB_1                                             P
NN_RENTAL_LAB_1        "CUSTOMER_ID" IS NOT NULL            C
NN_RENTAL_LAB_2        "CHECK_OUT_DATE" IS NOT NULL         C
NN_RENTAL_LAB_3        "RETURN_DATE" IS NOT NULL            C
NN_RENTAL_LAB_4        "CREATED_BY" IS NOT NULL             C
NN_RENTAL_LAB_5        "CREATION_DATE" IS NOT NULL          C
NN_RENTAL_LAB_6        "LAST_UPDATED_BY" IS NOT NULL        C
NN_RENTAL_LAB_7        "LAST_UPDATE_DATE" IS NOT NULL       C

8 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_RENTAL_LAB_1                        REFERENCES                              
(RENTAL_LAB.CUSTOMER_ID)               (CONTACT_LAB.CONTACT_LAB_ID)            

FK_RENTAL_LAB_2                        REFERENCES                              
(RENTAL_LAB.CREATED_BY)                (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_RENTAL_LAB_3                        REFERENCES                              
(RENTAL_LAB.LAST_UPDATED_BY)           (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


3 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE rental_lab_s1 START WITH 1001 NOCACHE;

Sequence RENTAL_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
RENTAL_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@item_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   item_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the item_lab table and item_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL item_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('item_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
ITEM_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create a table.
SQL> CREATE TABLE item_lab
  2  ( item_lab_id                     NUMBER
  3  , item_barcode                VARCHAR2(14) CONSTRAINT nn_item_lab_1 NOT NULL
  4  , item_type                   NUMBER       CONSTRAINT nn_item_lab_2 NOT NULL
  5  , item_title                  VARCHAR2(60) CONSTRAINT nn_item_lab_3 NOT NULL
  6  , item_subtitle               VARCHAR2(60)
  7  , item_rating                 VARCHAR2(8)  CONSTRAINT nn_item_lab_4 NOT NULL
  8  , item_release_date           DATE         CONSTRAINT nn_item_lab_5 NOT NULL
  9  , created_by                  NUMBER       CONSTRAINT nn_item_lab_6 NOT NULL
 10  , creation_date               DATE         CONSTRAINT nn_item_lab_7 NOT NULL
 11  , last_updated_by             NUMBER       CONSTRAINT nn_item_lab_8 NOT NULL
 12  , last_update_date            DATE         CONSTRAINT nn_item_lab_9 NOT NULL
 13  , CONSTRAINT pk_item_lab_1        PRIMARY KEY(item_lab_id)
 14  , CONSTRAINT fk_item_lab_1        FOREIGN KEY(item_type) REFERENCES common_lookup_lab(common_lookup_lab_id)
 15  , CONSTRAINT fk_item_lab_2        FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 16  , CONSTRAINT fk_item_lab_3        FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table ITEM_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
ITEM_LAB                 1 ITEM_LAB_ID            NOT NULL NUMBER(22)  
ITEM_LAB                 2 ITEM_BARCODE           NOT NULL VARCHAR2(14)
ITEM_LAB                 3 ITEM_TYPE              NOT NULL NUMBER(22)  
ITEM_LAB                 4 ITEM_TITLE             NOT NULL VARCHAR2(60)
ITEM_LAB                 5 ITEM_SUBTITLE                   VARCHAR2(60)
ITEM_LAB                 6 ITEM_RATING            NOT NULL VARCHAR2(8) 
ITEM_LAB                 7 ITEM_RELEASE_DATE      NOT NULL DATE        
ITEM_LAB                 8 CREATED_BY             NOT NULL NUMBER(22)  
ITEM_LAB                 9 CREATION_DATE          NOT NULL DATE        
ITEM_LAB                10 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
ITEM_LAB                11 LAST_UPDATE_DATE       NOT NULL DATE        

11 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_ITEM_LAB_1                                               P
NN_ITEM_LAB_1          "ITEM_BARCODE" IS NOT NULL           C
NN_ITEM_LAB_2          "ITEM_TYPE" IS NOT NULL              C
NN_ITEM_LAB_3          "ITEM_TITLE" IS NOT NULL             C
NN_ITEM_LAB_4          "ITEM_RATING" IS NOT NULL            C
NN_ITEM_LAB_5          "ITEM_RELEASE_DATE" IS NOT NULL      C
NN_ITEM_LAB_6          "CREATED_BY" IS NOT NULL             C
NN_ITEM_LAB_7          "CREATION_DATE" IS NOT NULL          C
NN_ITEM_LAB_8          "LAST_UPDATED_BY" IS NOT NULL        C
NN_ITEM_LAB_9          "LAST_UPDATE_DATE" IS NOT NULL       C

10 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_ITEM_LAB_1                          REFERENCES                              
(ITEM_LAB.ITEM_TYPE)                   (COMMON_LOOKUP_LAB.COMMON_LOOKUP_LAB_ID)

FK_ITEM_LAB_2                          REFERENCES                              
(ITEM_LAB.CREATED_BY)                  (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_ITEM_LAB_3                          REFERENCES                              
(ITEM_LAB.LAST_UPDATED_BY)             (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


3 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE item_lab_s1 START WITH 1001 NOCACHE;

Sequence ITEM_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
ITEM_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> @@rental_item_lab.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   rental_item_lab.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates the rental_item_lab table and rental_item_lab_s1 sequences.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Open log file.
SQL> SPOOL rental_item_lab.txt
SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
  2    :table_name := UPPER('rental_item_lab');
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------
RENTAL_ITEM_LAB

1 row selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
  2    /* Dynamic cursor. */
  3    CURSOR c (cv_object_name VARCHAR2) IS
  4      SELECT o.object_type
  5      ,      o.object_name
  6      FROM   user_objects o
  7      WHERE  o.object_name LIKE UPPER(cv_object_name||'%');
  8  BEGIN
  9    FOR i IN c(:table_name) LOOP
 10      IF i.object_type = 'SEQUENCE' THEN
 11        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
 12      ELSIF i.object_type = 'TABLE' THEN
 13        EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
 14      END IF;
 15    END LOOP;
 16  END;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE rental_item_lab
  2  ( rental_item_lab_id              NUMBER
  3  , rental_lab_id                   NUMBER CONSTRAINT nn_rental_item_lab_1 NOT NULL
  4  , item_lab_id                     NUMBER CONSTRAINT nn_rental_item_lab_2 NOT NULL
  5  , created_by                  NUMBER CONSTRAINT nn_rental_item_lab_3 NOT NULL
  6  , creation_date               DATE   CONSTRAINT nn_rental_item_lab_4 NOT NULL
  7  , last_updated_by             NUMBER CONSTRAINT nn_rental_item_lab_5 NOT NULL
  8  , last_update_date            DATE   CONSTRAINT nn_rental_item_lab_6 NOT NULL
  9  , CONSTRAINT pk_rental_item_lab_1 PRIMARY KEY(rental_item_lab_id)
 10  , CONSTRAINT fk_rental_item_lab_1 FOREIGN KEY(rental_lab_id) REFERENCES rental_lab(rental_lab_id)
 11  , CONSTRAINT fk_rental_item_lab_2 FOREIGN KEY(item_lab_id) REFERENCES item_lab(item_lab_id)
 12  , CONSTRAINT fk_rental_item_lab_3 FOREIGN KEY(created_by) REFERENCES system_user_lab(system_user_lab_id)
 13  , CONSTRAINT fk_rental_item_lab_4 FOREIGN KEY(last_updated_by) REFERENCES system_user_lab(system_user_lab_id));

Table RENTAL_ITEM_LAB created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name   FORMAT A16
SQL> COLUMN column_id    FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type    FORMAT A12
SQL> SELECT   table_name
  2  ,        column_id
  3  ,        column_name
  4  ,        CASE
  5             WHEN nullable = 'N' THEN 'NOT NULL'
  6             ELSE ''
  7           END AS nullable
  8  ,        CASE
  9             WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10               data_type||'('||data_length||')'
 11             ELSE
 12               data_type
 13           END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = :table_name
 16  ORDER BY 2;

                           Column                                      
TABLE_NAME       COLUMN_ID Name                   NULLABLE DATA_TYPE   
---------------- --------- ---------------------- -------- ------------
RENTAL_ITEM_LAB          1 RENTAL_ITEM_LAB_ID     NOT NULL NUMBER(22)  
RENTAL_ITEM_LAB          2 RENTAL_LAB_ID          NOT NULL NUMBER(22)  
RENTAL_ITEM_LAB          3 ITEM_LAB_ID            NOT NULL NUMBER(22)  
RENTAL_ITEM_LAB          4 CREATED_BY             NOT NULL NUMBER(22)  
RENTAL_ITEM_LAB          5 CREATION_DATE          NOT NULL DATE        
RENTAL_ITEM_LAB          6 LAST_UPDATED_BY        NOT NULL NUMBER(22)  
RENTAL_ITEM_LAB          7 LAST_UPDATE_DATE       NOT NULL DATE        

7 rows selected. 

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
  2  ,        uc.search_condition
  3  ,        uc.constraint_type
  4  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  5  ON       uc.table_name = ucc.table_name
  6  AND      uc.constraint_name = ucc.constraint_name
  7  WHERE    uc.table_name = :table_name
  8  AND      uc.constraint_type IN (UPPER('c'),UPPER('p'))
  9  ORDER BY uc.constraint_type DESC
 10  ,        uc.constraint_name;

CONSTRAINT_NAME        SEARCH_CONDITION                     C
---------------------- ------------------------------------ -
PK_RENTAL_ITEM_LAB_1                                        P
NN_RENTAL_ITEM_LAB_1   "RENTAL_LAB_ID" IS NOT NULL          C
NN_RENTAL_ITEM_LAB_2   "ITEM_LAB_ID" IS NOT NULL            C
NN_RENTAL_ITEM_LAB_3   "CREATED_BY" IS NOT NULL             C
NN_RENTAL_ITEM_LAB_4   "CREATION_DATE" IS NOT NULL          C
NN_RENTAL_ITEM_LAB_5   "LAST_UPDATED_BY" IS NOT NULL        C
NN_RENTAL_ITEM_LAB_6   "LAST_UPDATE_DATE" IS NOT NULL       C

7 rows selected. 

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
  2  ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
  3  ,       'REFERENCES'||CHR(10)
  4  ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
  5  FROM     user_constraints uc
  6  ,        user_cons_columns ucc1
  7  ,        user_cons_columns ucc2
  8  WHERE    uc.constraint_name = ucc1.constraint_name
  9  AND      uc.r_constraint_name = ucc2.constraint_name
 10  AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
 11  AND      uc.constraint_type = 'R'
 12  AND      ucc1.table_name = :table_name
 13  ORDER BY ucc1.table_name
 14  ,        uc.constraint_name;

Constraint Name:                       References:                             
Table.Column                           Table.Column                            
-------------------------------------- ----------------------------------------
FK_RENTAL_ITEM_LAB_1                   REFERENCES                              
(RENTAL_ITEM_LAB.RENTAL_LAB_ID)        (RENTAL_LAB.RENTAL_LAB_ID)              

FK_RENTAL_ITEM_LAB_2                   REFERENCES                              
(RENTAL_ITEM_LAB.ITEM_LAB_ID)          (ITEM_LAB.ITEM_LAB_ID)                  

FK_RENTAL_ITEM_LAB_3                   REFERENCES                              
(RENTAL_ITEM_LAB.CREATED_BY)           (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    

FK_RENTAL_ITEM_LAB_4                   REFERENCES                              
(RENTAL_ITEM_LAB.LAST_UPDATED_BY)      (SYSTEM_USER_LAB.SYSTEM_USER_LAB_ID)    


4 rows selected. 

SQL> 
SQL> -- Create a sequence.
SQL> CREATE SEQUENCE rental_item_lab_s1 START WITH 1001 NOCACHE;

Sequence RENTAL_ITEM_LAB_S1 created.

SQL> 
SQL> -- Display sequence value.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
  2  FROM     user_sequences
  3  WHERE    sequence_name = :table_name||'_S1';

Sequence Name       
--------------------
RENTAL_ITEM_LAB_S1

1 row selected. 

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
SQL> 
SQL> -- Open log file.
SQL> SPOOL create_oracle_store2.txt
SQL> 
SQL> COLUMN table_name_base     FORMAT A30 HEADING "Base Tables"
SQL> COLUMN sequence_name_base  FORMAT A30 HEADING "Base Sequences"
SQL> SELECT   a.table_name_base
  2  ,        b.sequence_name_base
  3  FROM    (SELECT   table_name AS table_name_base
  4           FROM     user_tables
  5           WHERE    table_name IN ('SYSTEM_USER'
  6                                  ,'COMMON_LOOKUP'
  7                                  ,'MEMBER'
  8                                  ,'CONTACT'
  9                                  ,'ADDRESS'
 10                                  ,'STREET_ADDRESS'
 11                                  ,'TELEPHONE'
 12                                  ,'ITEM'
 13                                  ,'RENTAL'
 14                                  ,'RENTAL_ITEM')) a  INNER JOIN
 15          (SELECT   sequence_name AS sequence_name_base
 16           FROM     user_sequences
 17           WHERE    sequence_name IN ('SYSTEM_USER_S1'
 18                                     ,'COMMON_LOOKUP_S1'
 19                                     ,'MEMBER_S1'
 20                                     ,'CONTACT_S1'
 21                                     ,'ADDRESS_S1'
 22                                     ,'STREET_ADDRESS_S1'
 23                                     ,'TELEPHONE_S1'
 24                                     ,'ITEM_S1'
 25                                     ,'RENTAL_S1'
 26                                     ,'RENTAL_ITEM_S1')) b
 27  ON       a.table_name_base =
 28             SUBSTR( b.sequence_name_base, 1, REGEXP_INSTR(b.sequence_name_base,'_S1') - 1)
 29  ORDER BY CASE
 30             WHEN table_name_base LIKE 'SYSTEM_USER%' THEN 0
 31             WHEN table_name_base LIKE 'COMMON_LOOKUP%' THEN 1
 32             WHEN table_name_base LIKE 'MEMBER%' THEN 2
 33             WHEN table_name_base LIKE 'CONTACT%' THEN 3
 34             WHEN table_name_base LIKE 'ADDRESS%' THEN 4
 35             WHEN table_name_base LIKE 'STREET_ADDRESS%' THEN 5
 36             WHEN table_name_base LIKE 'TELEPHONE%' THEN 6
 37             WHEN table_name_base LIKE 'ITEM%' THEN 7
 38             WHEN table_name_base LIKE 'RENTAL%' AND NOT table_name_base LIKE 'RENTAL_ITEM%' THEN 8
 39             WHEN table_name_base LIKE 'RENTAL_ITEM%' THEN 9
 40           END;

Base Tables                    Base Sequences                
------------------------------ ------------------------------
SYSTEM_USER                    SYSTEM_USER_S1                
COMMON_LOOKUP                  COMMON_LOOKUP_S1              
MEMBER                         MEMBER_S1                     
CONTACT                        CONTACT_S1                    
ADDRESS                        ADDRESS_S1                    
STREET_ADDRESS                 STREET_ADDRESS_S1             
TELEPHONE                      TELEPHONE_S1                  
ITEM                           ITEM_S1                       
RENTAL                         RENTAL_S1                     
RENTAL_ITEM                    RENTAL_ITEM_S1                

10 rows selected. 

SQL> COLUMN table_name_base FORMAT A30 HEADING "Base Tables"
SQL> COLUMN table_name_lab  FORMAT A30 HEADING "Lab Tables"
SQL> SELECT   a.table_name_base
  2  ,        b.table_name_lab
  3  FROM    (SELECT   table_name AS table_name_base
  4           FROM     user_tables
  5           WHERE    table_name IN ('SYSTEM_USER'
  6                                  ,'COMMON_LOOKUP'
  7                                  ,'MEMBER'
  8                                  ,'CONTACT'
  9                                  ,'ADDRESS'
 10                                  ,'STREET_ADDRESS'
 11                                  ,'TELEPHONE'
 12                                  ,'ITEM'
 13                                  ,'RENTAL'
 14                                  ,'RENTAL_ITEM')) a INNER JOIN
 15          (SELECT   table_name AS table_name_lab
 16           FROM     user_tables
 17           WHERE    table_name IN ('SYSTEM_USER_LAB'
 18                                  ,'COMMON_LOOKUP_LAB'
 19                                  ,'MEMBER_LAB'
 20                                  ,'CONTACT_LAB'
 21                                  ,'ADDRESS_LAB'
 22                                  ,'STREET_ADDRESS_LAB'
 23                                  ,'TELEPHONE_LAB'
 24                                  ,'ITEM_LAB'
 25                                  ,'RENTAL_LAB'
 26                                  ,'RENTAL_ITEM_LAB')) b
 27  ON       a.table_name_base = SUBSTR( b.table_name_lab, 1, REGEXP_INSTR(table_name_lab,'_LAB') - 1)
 28  ORDER BY CASE
 29             WHEN table_name_base LIKE 'SYSTEM_USER%' THEN 0
 30             WHEN table_name_base LIKE 'COMMON_LOOKUP%' THEN 1
 31             WHEN table_name_base LIKE 'MEMBER%' THEN 2
 32             WHEN table_name_base LIKE 'CONTACT%' THEN 3
 33             WHEN table_name_base LIKE 'ADDRESS%' THEN 4
 34             WHEN table_name_base LIKE 'STREET_ADDRESS%' THEN 5
 35             WHEN table_name_base LIKE 'TELEPHONE%' THEN 6
 36             WHEN table_name_base LIKE 'ITEM%' THEN 7
 37             WHEN table_name_base LIKE 'RENTAL%' AND NOT table_name_base LIKE 'RENTAL_ITEM%' THEN 8
 38             WHEN table_name_base LIKE 'RENTAL_ITEM%' THEN 9
 39           END;

Base Tables                    Lab Tables                    
------------------------------ ------------------------------
SYSTEM_USER                    SYSTEM_USER_LAB               
COMMON_LOOKUP                  COMMON_LOOKUP_LAB             
MEMBER                         MEMBER_LAB                    
CONTACT                        CONTACT_LAB                   
ADDRESS                        ADDRESS_LAB                   
STREET_ADDRESS                 STREET_ADDRESS_LAB            
TELEPHONE                      TELEPHONE_LAB                 
ITEM                           ITEM_LAB                      
RENTAL                         RENTAL_LAB                    
RENTAL_ITEM                    RENTAL_ITEM_LAB               

10 rows selected. 

SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @@/home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   preseed_oracle_store.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  17-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates tables, sequences, indexes, and constraints necessary
SQL> -- to begin lesson #3. Demonstrates proper process and syntax.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #1
SQL> --  -------
SQL> --  Disable foreign key constraints dependencies.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE system_user
  2    DISABLE CONSTRAINT fk_system_user_3;

Table SYSTEM_USER altered.

SQL> 
SQL> ALTER TABLE system_user
  2    DISABLE CONSTRAINT fk_system_user_4;

Table SYSTEM_USER altered.

SQL> 
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
SYSTEM_USER    PK_SYSTEM_USER_1         PRIMARY KEY  ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_1         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_2         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_3         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_4         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_5         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_6         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_7         NOT NULL     ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_1         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_2         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_3         FOREIGN KEY  DISABLED
SYSTEM_USER    FK_SYSTEM_USER_4         FOREIGN KEY  DISABLED
SYSTEM_USER    FK_SYSTEM_USER_LAB_3     FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_LAB_4     FOREIGN KEY  ENABLED 

14 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #2
SQL> --  -------
SQL> --  Alter the table to remove not null constraints.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE system_user
  2    MODIFY (system_user_group_id  NUMBER  NULL);

Table SYSTEM_USER altered.

SQL> 
SQL> ALTER TABLE system_user
  2    MODIFY (system_user_type  NUMBER  NULL);

Table SYSTEM_USER altered.

SQL> 
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
SYSTEM_USER    PK_SYSTEM_USER_1         PRIMARY KEY  ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_1         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_4         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_5         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_6         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_7         NOT NULL     ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_1         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_2         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_3         FOREIGN KEY  DISABLED
SYSTEM_USER    FK_SYSTEM_USER_4         FOREIGN KEY  DISABLED
SYSTEM_USER    FK_SYSTEM_USER_LAB_3     FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_LAB_4     FOREIGN KEY  ENABLED 

12 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #3
SQL> --  -------
SQL> --  Insert partial data set for preseeded system_user.
SQL> -- --------------------------------------------------------
SQL> INSERT INTO system_user
  2  ( system_user_id
  3  , system_user_name
  4  , system_user_group_id
  5  , system_user_type
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date)
 10  VALUES
 11  ( 1            -- system_user_id
 12  ,'SYSADMIN'    -- system_user_name
 13  , null         -- system_user_group_id            
 14  , null         -- system_user_type
 15  , 1            -- created_by
 16  , SYSDATE      -- creation_date
 17  , 1            -- last_updated_by
 18  , SYSDATE      -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #4
SQL> --  -------
SQL> --  Disable foreign key constraints dependencies.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE common_lookup
  2    DISABLE CONSTRAINT fk_clookup_1;

Table COMMON_LOOKUP altered.

SQL> 
SQL> ALTER TABLE common_lookup
  2    DISABLE CONSTRAINT fk_clookup_2;

Table COMMON_LOOKUP altered.

SQL> 
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'COMMON_LOOKUP'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
COMMON_LOOKUP  PK_CLOOKUP_1             PRIMARY KEY  ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_1             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_2             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_3             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_4             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_5             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_6             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_7             NOT NULL     ENABLED 
COMMON_LOOKUP  FK_CLOOKUP_1             FOREIGN KEY  DISABLED
COMMON_LOOKUP  FK_CLOOKUP_2             FOREIGN KEY  DISABLED

10 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #5
SQL> --  -------
SQL> --  Insert data set for preseeded common_lookup table.
SQL> -- --------------------------------------------------------
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 1                           -- common_lookup_id
 12  ,'SYSTEM_USER'                -- common_lookup_context
 13  ,'SYSTEM_ADMIN'               -- common_lookup_type
 14  ,'System Administrator'       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( 2                           -- common_lookup_id
 12  ,'SYSTEM_USER'                -- common_lookup_context
 13  ,'DBA'                        -- common_lookup_type
 14  ,'Database Administrator'     -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 3                           -- common_lookup_id
 12  ,'SYSTEM_USER'                -- common_lookup_context
 13  ,'SYSTEM_GROUP'               -- common_lookup_type
 14  ,'System Group'              -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 4                           -- common_lookup_id
 12  ,'SYSTEM_USER'                -- common_lookup_context
 13  ,'COST_CENTER'                -- common_lookup_type
 14  ,'Cost Center'                -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 5                           -- common_lookup_id
 12  ,'SYSTEM_USER'                -- common_lookup_context
 13  ,'INDIVIDUAL'                 -- common_lookup_type
 14  ,'Individual'                 -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1001)
 12  ,'CONTACT'                    -- common_lookup_context
 13  ,'EMPLOYEE'                   -- common_lookup_type
 14  ,'Employee'                   -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1002)
 12  ,'CONTACT'                    -- common_lookup_context
 13  ,'CUSTOMER'                   -- common_lookup_type
 14  ,'Customer'                   -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1003)
 12  ,'MEMBER'                     -- common_lookup_context
 13  ,'INDIVIDUAL'                 -- common_lookup_type
 14  ,'Individual Membership'      -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1004)
 12  ,'MEMBER'                     -- common_lookup_context
 13  ,'GROUP'                      -- common_lookup_type
 14  ,'Group Membership'           -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1005)
 12  ,'MEMBER'                     -- common_lookup_context
 13  ,'DISCOVER_CARD'              -- common_lookup_type
 14  ,'Discover Card'              -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1006)
 12  ,'MEMBER'                     -- common_lookup_context
 13  ,'MASTER_CARD'                -- common_lookup_type
 14  ,'Master Card'                -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1007)
 12  ,'MEMBER'                     -- common_lookup_context
 13  ,'VISA_CARD'                  -- common_lookup_type
 14  ,'Visa Card'                  -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1008)
 12  ,'MULTIPLE'                   -- common_lookup_context
 13  ,'HOME'                       -- common_lookup_type
 14  ,'Home'                       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1009)
 12  ,'MULTIPLE'                   -- common_lookup_context
 13  ,'WORK'                       -- common_lookup_type
 14  ,'Work'                       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1010)
 12  ,'ITEM'                       -- common_lookup_context
 13  ,'DVD_FULL_SCREEN'            -- common_lookup_type
 14  ,'DVD: Full Screen'           -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1011)
 12  ,'ITEM'                       -- common_lookup_context
 13  ,'DVD_WIDE_SCREEN'            -- common_lookup_type
 14  ,'DVD: Wide Screen'           -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1012)
 12  ,'ITEM'                       -- common_lookup_context
 13  ,'NINTENDO_GAMECUBE'          -- common_lookup_type
 14  ,'Nintendo Gamecube'          -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1013)
 12  ,'ITEM'                       -- common_lookup_context
 13  ,'PLAYSTATION2'               -- common_lookup_type
 14  ,'Playstation2'               -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1014)
 12  ,'ITEM'                       -- common_lookup_context
 13  ,'XBOX'                       -- common_lookup_type
 14  ,'XBOX'                       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup
  2  ( common_lookup_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_s1.nextval    -- common_lookup_id (1011)
 12  ,'ITEM'                       -- common_lookup_context
 13  ,'BLU-RAY'                    -- common_lookup_type
 14  ,'Blu-ray'                    -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #6
SQL> --  -------
SQL> --  Display the preseeded values in the common_lookup table.
SQL> -- --------------------------------------------------------
SQL> COL common_lookup_id       FORMAT  9999
SQL> COL common_lookup_context  FORMAT A22
SQL> COL common_lookup_type     FORMAT A16
SQL> SELECT   common_lookup_id
  2  ,        common_lookup_context
  3  ,        common_lookup_type
  4  FROM     common_lookup;

COMMON_LOOKUP_ID COMMON_LOOKUP_CONTEXT  COMMON_LOOKUP_TY
---------------- ---------------------- ----------------
               1 SYSTEM_USER            SYSTEM_ADMIN    
               2 SYSTEM_USER            DBA             
               3 SYSTEM_USER            SYSTEM_GROUP    
               4 SYSTEM_USER            COST_CENTER     
               5 SYSTEM_USER            INDIVIDUAL      
            1001 CONTACT                EMPLOYEE        
            1002 CONTACT                CUSTOMER        
            1003 MEMBER                 INDIVIDUAL      
            1004 MEMBER                 GROUP           
            1005 MEMBER                 DISCOVER_CARD   
            1006 MEMBER                 MASTER_CARD     
            1007 MEMBER                 VISA_CARD       
            1008 MULTIPLE               HOME            
            1009 MULTIPLE               WORK            
            1010 ITEM                   DVD_FULL_SCREEN 
            1011 ITEM                   DVD_WIDE_SCREEN 
            1012 ITEM                   NINTENDO_GAMECUB
                                        E               

            1013 ITEM                   PLAYSTATION2    
            1014 ITEM                   XBOX            
            1015 ITEM                   BLU-RAY         

20 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #7
SQL> --  -------
SQL> --  Write two queries using the COMMON_LOOKUP table:
SQL> --  --------------------------------------------------
SQL> --   One finds the primary key values for the
SQL> --   SYSTEM_USER_GROUP_ID in the COMMON_LOOKUP table.
SQL> --   Another finds the primary key values for the 
SQL> --   SYSTEM_USER_TYPE in the COMMON_LOOKUP table.
SQL> --  --------------------------------------------------
SQL> --  Both queries use the COMMON_LOOKUP_CONTEXT and
SQL> --  COMMON_LOOKUP_TYPE columns.
SQL> -- --------------------------------------------------------
SQL> SELECT   common_lookup_id
  2  FROM     common_lookup
  3  WHERE    common_lookup_context = 'SYSTEM_USER'
  4  AND      common_lookup_type = 'SYSTEM_GROUP';

COMMON_LOOKUP_ID
----------------
               3

1 row selected. 

SQL> 
SQL> SELECT   common_lookup_id
  2  FROM     common_lookup
  3  WHERE    common_lookup_context = 'SYSTEM_USER'
  4  AND      common_lookup_type = 'SYSTEM_ADMIN';

COMMON_LOOKUP_ID
----------------
               1

1 row selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #8
SQL> --  -------
SQL> --  Update the SYSTEM_USER_GROUP_ID and SYSTEM_USER_TYPE
SQL> --  columns in the SYSTEM_USER table.
SQL> -- --------------------------------------------------------
SQL> UPDATE system_user
  2  SET    system_user_group_id = 
  3           (SELECT   common_lookup_id
  4            FROM     common_lookup
  5            WHERE    common_lookup_context = 'SYSTEM_USER'
  6            AND      common_lookup_type = 'SYSTEM_ADMIN')
  7  WHERE  system_user_id = 1;

Error starting at line : 600 File @ /home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
In command -
UPDATE system_user
SET    system_user_group_id = 
         (SELECT   common_lookup_id
          FROM     common_lookup
          WHERE    common_lookup_context = 'SYSTEM_USER'
          AND      common_lookup_type = 'SYSTEM_ADMIN')
WHERE  system_user_id = 1
Error report -
ORA-02291: integrity constraint (STUDENT.FK_SYSTEM_USER_LAB_3) violated - parent key not found

SQL> 
SQL> -- Display results.
SQL> SET NULL '<Null>'
SQL> COL system_user_id        FORMAT 999999  HEADING "System|User|ID #"
SQL> COL system_user_name      FORMAT A10     HEADING "System|User|Name"
SQL> COL system_user_group_id  FORMAT 999999  HEADING "System|User|Group|ID #"
SQL> COL system_user_type      FORMAT 999999  HEADING "System|User|Type"
SQL> SELECT   system_user_id
  2  ,        system_user_name
  3  ,        system_user_group_id
  4  ,        system_user_type
  5  FROM     system_user
  6  WHERE    system_user_id = 1;

                                                             System
          System System                     System             User
            User User                        GUser                 
            ID # Name                         ID #             Type
---------------- ---------- ---------------------- ----------------
               1 SYSADMIN   <Null>                 <Null>          

1 row selected. 

SQL> 
SQL> UPDATE system_user
  2  SET    system_user_type = 
  3           (SELECT   common_lookup_id
  4            FROM     common_lookup
  5            WHERE    common_lookup_context = 'SYSTEM_USER'
  6            AND      common_lookup_type = 'SYSTEM_GROUP')
  7  WHERE  system_user_id = 1;

Error starting at line : 621 File @ /home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
In command -
UPDATE system_user
SET    system_user_type = 
         (SELECT   common_lookup_id
          FROM     common_lookup
          WHERE    common_lookup_context = 'SYSTEM_USER'
          AND      common_lookup_type = 'SYSTEM_GROUP')
WHERE  system_user_id = 1
Error report -
ORA-02291: integrity constraint (STUDENT.FK_SYSTEM_USER_LAB_4) violated - parent key not found

SQL> 
SQL> -- Display results.
SQL> SET NULL '<Null>'
SQL> COL system_user_id        FORMAT 999999  HEADING "System|User|ID #"
SQL> COL system_user_name      FORMAT A10     HEADING "System|User|Name"
SQL> COL system_user_group_id  FORMAT 999999  HEADING "System|User|Group|ID #"
SQL> COL system_user_type      FORMAT 999999  HEADING "System|User|Type"
SQL> SELECT   system_user_id
  2  ,        system_user_name
  3  ,        system_user_group_id
  4  ,        system_user_type
  5  FROM     system_user
  6  WHERE    system_user_id = 1;

                                                             System
          System System                     System             User
            User User                        GUser                 
            ID # Name                         ID #             Type
---------------- ---------- ---------------------- ----------------
               1 SYSADMIN   <Null>                 <Null>          

1 row selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #9
SQL> --  --------
SQL> --  Enable foreign key constraints dependencies.
SQL> -- --------------------------------------------------------
SQL> -- Enable fk_system_user_3 constraint.
SQL> ALTER TABLE system_user
  2    ENABLE CONSTRAINT fk_system_user_3;

Table SYSTEM_USER altered.

SQL> 
SQL> -- Enable fk_system_user_4 constraint.
SQL> ALTER TABLE system_user
  2    ENABLE CONSTRAINT fk_system_user_4;

Table SYSTEM_USER altered.

SQL> 
SQL> -- Display system_user table constraints.
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
SYSTEM_USER    PK_SYSTEM_USER_1         PRIMARY KEY  ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_1         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_4         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_5         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_6         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_7         NOT NULL     ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_1         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_2         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_3         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_4         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_LAB_3     FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_LAB_4     FOREIGN KEY  ENABLED 

12 rows selected. 

SQL> 
SQL> -- Enable fk_clookup_1 constraint.
SQL> ALTER TABLE common_lookup
  2    ENABLE CONSTRAINT fk_clookup_1;

Table COMMON_LOOKUP altered.

SQL> 
SQL> -- Enable fk_clookup_2 constraint.
SQL> ALTER TABLE common_lookup
  2    ENABLE CONSTRAINT fk_clookup_2;

Table COMMON_LOOKUP altered.

SQL> 
SQL> -- Display system_user table constraints.
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'COMMON_LOOKUP'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
COMMON_LOOKUP  PK_CLOOKUP_1             PRIMARY KEY  ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_1             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_2             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_3             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_4             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_5             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_6             NOT NULL     ENABLED 
COMMON_LOOKUP  NN_CLOOKUP_7             NOT NULL     ENABLED 
COMMON_LOOKUP  FK_CLOOKUP_1             FOREIGN KEY  ENABLED 
COMMON_LOOKUP  FK_CLOOKUP_2             FOREIGN KEY  ENABLED 

10 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #10
SQL> --  --------
SQL> --  Alter the table to add not null constraints.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE system_user
  2    MODIFY (system_user_group_id  NUMBER  CONSTRAINT nn_system_user_2 NOT NULL);

Error starting at line : 722 File @ /home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
In command -
ALTER TABLE system_user
  MODIFY (system_user_group_id  NUMBER  CONSTRAINT nn_system_user_2 NOT NULL)
Error report -
ORA-02296: cannot enable (STUDENT.NN_SYSTEM_USER_2) - null values found
02296. 00000 - "cannot enable (%s.%s) - null values found"
*Cause:    an alter table enable constraint failed because the table
           contains values that do not satisfy the constraint.
*Action:   Obvious
SQL> 
SQL> ALTER TABLE system_user
  2    MODIFY (system_user_type      NUMBER  CONSTRAINT nn_system_user_3 NOT NULL);

Error starting at line : 725 File @ /home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
In command -
ALTER TABLE system_user
  MODIFY (system_user_type      NUMBER  CONSTRAINT nn_system_user_3 NOT NULL)
Error report -
ORA-02296: cannot enable (STUDENT.NN_SYSTEM_USER_3) - null values found
02296. 00000 - "cannot enable (%s.%s) - null values found"
*Cause:    an alter table enable constraint failed because the table
           contains values that do not satisfy the constraint.
*Action:   Obvious
SQL> 
SQL> -- Display system_user table constraints.
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
SYSTEM_USER    PK_SYSTEM_USER_1         PRIMARY KEY  ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_1         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_4         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_5         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_6         NOT NULL     ENABLED 
SYSTEM_USER    NN_SYSTEM_USER_7         NOT NULL     ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_1         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_2         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_3         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_4         FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_LAB_3     FOREIGN KEY  ENABLED 
SYSTEM_USER    FK_SYSTEM_USER_LAB_4     FOREIGN KEY  ENABLED 

12 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #11
SQL> --  --------
SQL> --  Insert row in the system_user table with subqueries.
SQL> -- --------------------------------------------------------
SQL> INSERT INTO system_user
  2  ( system_user_id
  3  , system_user_name
  4  , system_user_group_id
  5  , system_user_type
  6  , first_name
  7  , middle_name
  8  , last_name
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date)
 13  VALUES
 14  ( system_user_s1.NEXTVAL                          -- system_user_id
 15  ,'DBA1'                                           -- system_user_name
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'SYSTEM_USER'
 19    AND      common_lookup_type = 'DBA')            -- system_user_group_id            
 20  ,(SELECT   common_lookup_id
 21    FROM     common_lookup
 22    WHERE    common_lookup_context = 'SYSTEM_USER'
 23    AND      common_lookup_type = 'SYSTEM_GROUP')   -- system_user_type
 24  ,'Phineas'
 25  ,'Taylor'
 26  ,'Barnum'
 27  ,(SELECT   system_user_id
 28    FROM     system_user
 29    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 30  , SYSDATE                                         -- creation_date
 31  ,(SELECT   system_user_id
 32    FROM     system_user
 33    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 34  , SYSDATE                                         -- last_update_date
 35  );

Error starting at line : 760 File @ /home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
In command -
INSERT INTO system_user
( system_user_id
, system_user_name
, system_user_group_id
, system_user_type
, first_name
, middle_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( system_user_s1.NEXTVAL                          -- system_user_id
,'DBA1'                                           -- system_user_name
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'SYSTEM_USER'
  AND      common_lookup_type = 'DBA')            -- system_user_group_id            
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'SYSTEM_USER'
  AND      common_lookup_type = 'SYSTEM_GROUP')   -- system_user_type
,'Phineas'
,'Taylor'
,'Barnum'
,(SELECT   system_user_id
  FROM     system_user
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_id
  FROM     system_user
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_SYSTEM_USER_LAB_4) violated - parent key not found

SQL> 
SQL> INSERT INTO system_user
  2  ( system_user_id
  3  , system_user_name
  4  , system_user_group_id
  5  , system_user_type
  6  , first_name
  7  , last_name
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date)
 12  VALUES
 13  ( system_user_s1.NEXTVAL                          -- system_user_id
 14  ,'DBA2'                                           -- system_user_name
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_context = 'SYSTEM_USER'
 18    AND      common_lookup_type = 'DBA')            -- system_user_group_id            
 19  ,(SELECT   common_lookup_id
 20    FROM     common_lookup
 21    WHERE    common_lookup_context = 'SYSTEM_USER'
 22    AND      common_lookup_type = 'SYSTEM_GROUP')   -- system_user_type
 23  ,'Phileas'
 24  ,'Fogg'
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 28  , SYSDATE                                         -- creation_date
 29  ,(SELECT   system_user_id
 30    FROM     system_user
 31    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 32  , SYSDATE                                         -- last_update_date
 33  );

Error starting at line : 796 File @ /home/student/Data/cit225/oracle/lib1/preseed/preseed_oracle_store.sql
In command -
INSERT INTO system_user
( system_user_id
, system_user_name
, system_user_group_id
, system_user_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( system_user_s1.NEXTVAL                          -- system_user_id
,'DBA2'                                           -- system_user_name
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'SYSTEM_USER'
  AND      common_lookup_type = 'DBA')            -- system_user_group_id            
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'SYSTEM_USER'
  AND      common_lookup_type = 'SYSTEM_GROUP')   -- system_user_type
,'Phileas'
,'Fogg'
,(SELECT   system_user_id
  FROM     system_user
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_id
  FROM     system_user
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_SYSTEM_USER_LAB_4) violated - parent key not found

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #12
SQL> --  --------
SQL> --  Display inserted rows from the system_user table.
SQL> -- --------------------------------------------------------
SQL> SET NULL '<Null>'
SQL> COL system_user_id        FORMAT  9999
SQL> COL system_user_group_id  FORMAT  9999
SQL> COL system_user_type      FORMAT  9999
SQL> COL system_user_name      FORMAT  A10
SQL> COL full_user_name        FORMAT  A30
SQL> SELECT   system_user_id
  2  ,        system_user_group_id
  3  ,        system_user_type
  4  ,        system_user_name
  5  ,        CASE
  6             WHEN last_name IS NOT NULL THEN
  7               last_name || ', ' || first_name || ' ' || middle_name
  8           END AS full_user_name
  9  FROM     system_user;

                                                         System                                   
          System                 System           System User                                     
            User                  GUser             User                                          
            ID #                   ID #             Type Name       FULL_USER_NAME                
---------------- ---------------------- ---------------- ---------- ------------------------------
               1 <Null>                 <Null>           SYSADMIN   <Null>                        

1 row selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> -- --------------------------------------------------------
SQL> SPOOL apply_oracle_lab3.txt
SQL> --  Step #1
SQL> --  -------
SQL> --  Disable foreign key constraints dependencies.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE system_user_lab
  2    DISABLE CONSTRAINT fk_system_user_lab_3;

Error starting at line : 24 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE system_user_lab
  DISABLE CONSTRAINT fk_system_user_lab_3
Error report -
ORA-02431: cannot disable constraint (FK_SYSTEM_USER_LAB_3) - no such constraint
02431. 00000 -  "cannot disable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> ALTER TABLE system_user_lab
  2    DISABLE CONSTRAINT fk_system_user_lab_4;

Error starting at line : 27 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE system_user_lab
  DISABLE CONSTRAINT fk_system_user_lab_4
Error report -
ORA-02431: cannot disable constraint (FK_SYSTEM_USER_LAB_4) - no such constraint
02431. 00000 -  "cannot disable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A12  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER_LAB'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint T Status  
-------------- ------------------------ ------------ --------
SYSTEM_USER_LA PK_SYSTEM_USER_LAB_1     PRIMARY KEY  ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_1     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_2     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_3     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_4     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_5     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_6     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_7     NOT NULL     ENABLED 
B                                                            

SYSTEM_USER_LA FK_SYSTEM_USER_LAB_1     FOREIGN KEY  ENABLED 
B                                                            

SYSTEM_USER_LA FK_SYSTEM_USER_LAB_2     FOREIGN KEY  ENABLED 
B                                                            


10 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #2
SQL> --  -------
SQL> --  Alter the table to remove not null constraints.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE system_user_lab
  2    MODIFY (system_user_group_id  NUMBER  NULL);

Table SYSTEM_USER_LAB altered.

SQL> 
SQL> ALTER TABLE system_user_lab
  2    MODIFY (system_user_type  NUMBER  NULL);

Table SYSTEM_USER_LAB altered.

SQL> 
SQL> COL table_name       FORMAT A18  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A28  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A15  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER_LAB'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name         Constraint Name              Constraint Type Status  
------------------ ---------------------------- --------------- --------
SYSTEM_USER_LAB    PK_SYSTEM_USER_LAB_1         PRIMARY KEY     ENABLED 
SYSTEM_USER_LAB    NN_SYSTEM_USER_LAB_1         NOT NULL        ENABLED 
SYSTEM_USER_LAB    NN_SYSTEM_USER_LAB_4         NOT NULL        ENABLED 
SYSTEM_USER_LAB    NN_SYSTEM_USER_LAB_5         NOT NULL        ENABLED 
SYSTEM_USER_LAB    NN_SYSTEM_USER_LAB_6         NOT NULL        ENABLED 
SYSTEM_USER_LAB    NN_SYSTEM_USER_LAB_7         NOT NULL        ENABLED 
SYSTEM_USER_LAB    FK_SYSTEM_USER_LAB_1         FOREIGN KEY     ENABLED 
SYSTEM_USER_LAB    FK_SYSTEM_USER_LAB_2         FOREIGN KEY     ENABLED 

8 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #3
SQL> --  -------
SQL> --  Insert partial data set for preseeded system_user_lab.
SQL> -- --------------------------------------------------------
SQL> INSERT INTO system_user_lab
  2  ( system_user_lab_id
  3  , system_user_name
  4  , system_user_group_id
  5  , system_user_type
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date)
 10  VALUES
 11  ( 1            -- system_user_lab_id
 12  ,'SYSADMIN'    -- system_user_name
 13  , null         -- system_user_group_id            
 14  , null         -- system_user_type
 15  , 1            -- created_by
 16  , SYSDATE      -- creation_date
 17  , 1            -- last_updated_by
 18  , SYSDATE      -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #4
SQL> --  -------
SQL> --  Disable foreign key constraints dependencies.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE common_lookup_lab
  2    DISABLE CONSTRAINT fk_clookup_1;

Error starting at line : 123 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE common_lookup_lab
  DISABLE CONSTRAINT fk_clookup_1
Error report -
ORA-02431: cannot disable constraint (FK_CLOOKUP_1) - no such constraint
02431. 00000 -  "cannot disable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> ALTER TABLE common_lookup_lab
  2    DISABLE CONSTRAINT fk_clookup_2;

Error starting at line : 126 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE common_lookup_lab
  DISABLE CONSTRAINT fk_clookup_2
Error report -
ORA-02431: cannot disable constraint (FK_CLOOKUP_2) - no such constraint
02431. 00000 -  "cannot disable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A15  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'COMMON_LOOKUP_LAB'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint Type Status  
-------------- ------------------------ --------------- --------
COMMON_LOOKUP_ PK_COMMON_LOOKUP_LAB_1   PRIMARY KEY     ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_1   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_2   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_3   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_4   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_5   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_6   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_7   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ FK_COMMON_LOOKUP_LAB_1   FOREIGN KEY     ENABLED 
LAB                                                             

COMMON_LOOKUP_ FK_COMMON_LOOKUP_LAB_2   FOREIGN KEY     ENABLED 
LAB                                                             


10 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #5
SQL> --  -------
SQL> --  Insert data set for preseeded common_lookup_lab table.
SQL> -- --------------------------------------------------------
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 1                           -- common_lookup_lab_id
 12  ,'SYSTEM_USER_LAB'                -- common_lookup_context
 13  ,'SYSTEM_ADMIN'               -- common_lookup_type
 14  ,'System Administrator'       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( 2                           -- common_lookup_lab_id
 12  ,'SYSTEM_USER_LAB'                -- common_lookup_context
 13  ,'DBA'                        -- common_lookup_type
 14  ,'Database Administrator'     -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 3                           -- common_lookup_lab_id
 12  ,'SYSTEM_USER_LAB'            -- common_lookup_context
 13  ,'SYSTEM_GROUP'               -- common_lookup_type
 14  ,'System Group'              -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 4                           -- common_lookup_lab_id
 12  ,'SYSTEM_USER_LAB'                -- common_lookup_context
 13  ,'COST_CENTER'                -- common_lookup_type
 14  ,'Cost Center'                -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10   VALUES
 11  ( 5                           -- common_lookup_lab_id
 12  ,'SYSTEM_USER_LAB'                -- common_lookup_context
 13  ,'INDIVIDUAL'                 -- common_lookup_type
 14  ,'Individual'                 -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1001)
 12  ,'CONTACT_LAB'                    -- common_lookup_context
 13  ,'EMPLOYEE'                   -- common_lookup_type
 14  ,'Employee'                   -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1002)
 12  ,'CONTACT_LAB'                    -- common_lookup_context
 13  ,'CUSTOMER'                   -- common_lookup_type
 14  ,'Customer'                   -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1003)
 12  ,'MEMBER_LAB'                     -- common_lookup_context
 13  ,'INDIVIDUAL'                 -- common_lookup_type
 14  ,'Individual Membership'      -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1004)
 12  ,'MEMBER_LAB'                     -- common_lookup_context
 13  ,'GROUP'                      -- common_lookup_type
 14  ,'Group Membership'           -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1005)
 12  ,'MEMBER_LAB'                     -- common_lookup_context
 13  ,'DISCOVER_CARD'              -- common_lookup_type
 14  ,'Discover Card'              -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1006)
 12  ,'MEMBER_LAB'                     -- common_lookup_context
 13  ,'MASTER_CARD'                -- common_lookup_type
 14  ,'Master Card'                -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1007)
 12  ,'MEMBER_LAB'                     -- common_lookup_context
 13  ,'VISA_CARD'                  -- common_lookup_type
 14  ,'Visa Card'                  -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1008)
 12  ,'MULTIPLE'                   -- common_lookup_context
 13  ,'HOME'                       -- common_lookup_type
 14  ,'Home'                       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1009)
 12  ,'MULTIPLE'                   -- common_lookup_context
 13  ,'WORK'                       -- common_lookup_type
 14  ,'Work'                       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1010)
 12  ,'ITEM_LAB'                       -- common_lookup_context
 13  ,'DVD_FULL_SCREEN'            -- common_lookup_type
 14  ,'DVD: Full Screen'           -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1011)
 12  ,'ITEM_LAB'                       -- common_lookup_context
 13  ,'DVD_WIDE_SCREEN'            -- common_lookup_type
 14  ,'DVD: Wide Screen'           -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1012)
 12  ,'ITEM_LAB'                       -- common_lookup_context
 13  ,'NINTENDO_GAMECUBE'          -- common_lookup_type
 14  ,'Nintendo Gamecube'          -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1013)
 12  ,'ITEM_LAB'                       -- common_lookup_context
 13  ,'PLAYSTATION2'               -- common_lookup_type
 14  ,'Playstation2'               -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1014)
 12  ,'ITEM_LAB'                       -- common_lookup_context
 13  ,'XBOX'                       -- common_lookup_type
 14  ,'XBOX'                       -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> INSERT INTO common_lookup_lab
  2  ( common_lookup_lab_id
  3  , common_lookup_context
  4  , common_lookup_type
  5  , common_lookup_meaning
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( common_lookup_lab_s1.nextval    -- common_lookup_lab_id (1011)
 12  ,'ITEM_LAB'                       -- common_lookup_context
 13  ,'BLU-RAY'                    -- common_lookup_type
 14  ,'Blu-ray'                    -- common_lookup_meaning
 15  , 1                           -- created_by
 16  , SYSDATE                     -- creation_date
 17  , 1                           -- last_updated_by
 18  , SYSDATE                     -- last_update_date
 19  );

1 row inserted.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #6
SQL> --  -------
SQL> --  Display the preseeded values in the common_lookup_lab table.
SQL> -- --------------------------------------------------------
SQL> COL common_lookup_id       FORMAT  9999
SQL> COL common_lookup_context  FORMAT A22
SQL> COL common_lookup_type     FORMAT A18
SQL> SELECT   common_lookup_lab_id
  2  ,        common_lookup_context
  3  ,        common_lookup_type
  4  FROM     common_lookup_lab;

COMMON_LOOKUP_LAB_ID COMMON_LOOKUP_CONTEXT  COMMON_LOOKUP_TYPE
-------------------- ---------------------- ------------------
                   1 SYSTEM_USER_LAB        SYSTEM_ADMIN      
                   2 SYSTEM_USER_LAB        DBA               
                   3 SYSTEM_USER_LAB        SYSTEM_GROUP      
                   4 SYSTEM_USER_LAB        COST_CENTER       
                   5 SYSTEM_USER_LAB        INDIVIDUAL        
                1001 CONTACT_LAB            EMPLOYEE          
                1002 CONTACT_LAB            CUSTOMER          
                1003 MEMBER_LAB             INDIVIDUAL        
                1004 MEMBER_LAB             GROUP             
                1005 MEMBER_LAB             DISCOVER_CARD     
                1006 MEMBER_LAB             MASTER_CARD       
                1007 MEMBER_LAB             VISA_CARD         
                1008 MULTIPLE               HOME              
                1009 MULTIPLE               WORK              
                1010 ITEM_LAB               DVD_FULL_SCREEN   
                1011 ITEM_LAB               DVD_WIDE_SCREEN   
                1012 ITEM_LAB               NINTENDO_GAMECUBE 
                1013 ITEM_LAB               PLAYSTATION2      
                1014 ITEM_LAB               XBOX              
                1015 ITEM_LAB               BLU-RAY           

20 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #7
SQL> --  -------
SQL> --  Write two queries using the COMMON_LOOKUP_LAB table:
SQL> --  --------------------------------------------------
SQL> --   One finds the primary key values for the
SQL> --   SYSTEM_USER_GROUP_ID in the COMMON_LOOKUP table.
SQL> --   Another finds the primary key values for the 
SQL> --   SYSTEM_USER_TYPE in the COMMON_LOOKUP table.
SQL> --  --------------------------------------------------
SQL> --  Both queries use the COMMON_LOOKUP_CONTEXT and
SQL> --  COMMON_LOOKUP_TYPE columns.
SQL> -- --------------------------------------------------------
SQL> SELECT   common_lookup_lab_id
  2  FROM     common_lookup_lab
  3  WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
  4  AND      common_lookup_type = 'SYSTEM_GROUP';

COMMON_LOOKUP_LAB_ID
--------------------
                   3

1 row selected. 

SQL> 
SQL> SELECT   common_lookup_lab_id
  2  FROM     common_lookup_lab
  3  WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
  4  AND      common_lookup_type = 'SYSTEM_ADMIN';

COMMON_LOOKUP_LAB_ID
--------------------
                   1

1 row selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #8
SQL> --  -------
SQL> --  Update the SYSTEM_USER_GROUP_ID and SYSTEM_USER_TYPE
SQL> --  columns in the SYSTEM_USER_LAB table.
SQL> -- --------------------------------------------------------
SQL> UPDATE system_user_lab
  2  SET    system_user_group_id = 
  3           (SELECT   common_lookup_lab_id
  4            FROM     common_lookup_lab
  5            WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
  6            AND      common_lookup_type = 'SYSTEM_ADMIN')
  7  WHERE  system_user_lab_id = 1;

1 row updated.

SQL> 
SQL> -- Display results.
SQL> SET NULL '<Null>'
SQL> COL system_user_lab_id        FORMAT 999999  HEADING "System|User|ID #"
SQL> COL system_user_name      FORMAT A10     HEADING "System|User|Name"
SQL> COL system_user_group_id  FORMAT 999999  HEADING "System|User|Group|ID #"
SQL> COL system_user_type      FORMAT 999999  HEADING "System|User|Type"
SQL> SELECT   system_user_lab_id
  2  ,        system_user_name
  3  ,        system_user_group_id
  4  ,        system_user_type
  5  FROM     system_user_lab
  6  WHERE    system_user_lab_id = 1;

                                                             System
          System System                     System             User
            User User                        GUser                 
            ID # Name                         ID #             Type
---------------- ---------- ---------------------- ----------------
               1 SYSADMIN                        1 <Null>          

1 row selected. 

SQL> 
SQL> UPDATE system_user_lab
  2  SET    system_user_type = 
  3           (SELECT   common_lookup_lab_id
  4            FROM     common_lookup_lab
  5            WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
  6            AND      common_lookup_type = 'SYSTEM_GROUP')
  7  WHERE  system_user_lab_id = 1;

1 row updated.

SQL> 
SQL> -- Display results.
SQL> SET NULL '<Null>'
SQL> COL system_user_lab_id        FORMAT 999999  HEADING "System|User|ID #"
SQL> COL system_user_name      FORMAT A10     HEADING "System|User|Name"
SQL> COL system_user_group_id  FORMAT 999999  HEADING "System|User|Group|ID #"
SQL> COL system_user_type      FORMAT 999999  HEADING "System|User|Type"
SQL> SELECT   system_user_lab_id
  2  ,        system_user_name
  3  ,        system_user_group_id
  4  ,        system_user_type
  5  FROM     system_user_lab
  6  WHERE    system_user_lab_id = 1;

                                                             System
          System System                     System             User
            User User                        GUser                 
            ID # Name                         ID #             Type
---------------- ---------- ---------------------- ----------------
               1 SYSADMIN                        1                3

1 row selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #9
SQL> --  --------
SQL> --  Enable foreign key constraints dependencies.
SQL> -- --------------------------------------------------------
SQL> -- Enable fk_system_user_lab_3 constraint.
SQL> ALTER TABLE system_user_lab
  2    ENABLE CONSTRAINT fk_system_user_lab_3;

Error starting at line : 650 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE system_user_lab
  ENABLE CONSTRAINT fk_system_user_lab_3
Error report -
ORA-02430: cannot enable constraint (FK_SYSTEM_USER_LAB_3) - no such constraint
02430. 00000 -  "cannot enable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> -- Enable fk_system_user_lab_4 constraint.
SQL> ALTER TABLE system_user_lab
  2    ENABLE CONSTRAINT fk_system_user_lab_4;

Error starting at line : 654 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE system_user_lab
  ENABLE CONSTRAINT fk_system_user_lab_4
Error report -
ORA-02430: cannot enable constraint (FK_SYSTEM_USER_LAB_4) - no such constraint
02430. 00000 -  "cannot enable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> -- Display system_user_lab table constraints.
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A1  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'SYSTEM_USER_LAB'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          C Status  
-------------- ------------------------ - --------
SYSTEM_USER_LA PK_SYSTEM_USER_LAB_1     P ENABLED 
B                                       R         
                                        I         
                                        M         
                                        A         
                                        R         
                                        Y         
                                                  
                                        K         
                                        E         
                                        Y         

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_1     N ENABLED 
B                                       O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_4     N ENABLED 
B                                       O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_5     N ENABLED 
B                                       O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_6     N ENABLED 
B                                       O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

SYSTEM_USER_LA NN_SYSTEM_USER_LAB_7     N ENABLED 
B                                       O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

SYSTEM_USER_LA FK_SYSTEM_USER_LAB_1     F ENABLED 
B                                       O         
                                        R         
                                        E         
                                        I         
                                        G         
                                        N         
                                                  
                                        K         
                                        E         
                                        Y         

SYSTEM_USER_LA FK_SYSTEM_USER_LAB_2     F ENABLED 
B                                       O         
                                        R         
                                        E         
                                        I         
                                        G         
                                        N         
                                                  
                                        K         
                                        E         
                                        Y         


8 rows selected. 

SQL> 
SQL> -- Enable fk_clookup_1 constraint.
SQL> ALTER TABLE common_lookup_lab
  2    ENABLE CONSTRAINT fk_clookup_1;

Error starting at line : 685 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE common_lookup_lab
  ENABLE CONSTRAINT fk_clookup_1
Error report -
ORA-02430: cannot enable constraint (FK_CLOOKUP_1) - no such constraint
02430. 00000 -  "cannot enable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> -- Enable fk_clookup_2 constraint.
SQL> ALTER TABLE common_lookup_lab
  2    ENABLE CONSTRAINT fk_clookup_2;

Error starting at line : 689 File @ /home/student/Data/cit225/oracle/lab3/apply_oracle_lab3.sql
In command -
ALTER TABLE common_lookup_lab
  ENABLE CONSTRAINT fk_clookup_2
Error report -
ORA-02430: cannot enable constraint (FK_CLOOKUP_2) - no such constraint
02430. 00000 -  "cannot enable constraint (%s) - no such constraint"
*Cause:    the named constraint does not exist for this table.
*Action:   Obvious
SQL> 
SQL> -- Display system_user_lab table constraints.
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A1  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'COMMON_LOOKUP_LAB'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          C Status  
-------------- ------------------------ - --------
COMMON_LOOKUP_ PK_COMMON_LOOKUP_LAB_1   P ENABLED 
LAB                                     R         
                                        I         
                                        M         
                                        A         
                                        R         
                                        Y         
                                                  
                                        K         
                                        E         
                                        Y         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_1   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_2   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_3   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_4   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_5   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_6   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_7   N ENABLED 
LAB                                     O         
                                        T         
                                                  
                                        N         
                                        U         
                                        L         
                                        L         

COMMON_LOOKUP_ FK_COMMON_LOOKUP_LAB_1   F ENABLED 
LAB                                     O         
                                        R         
                                        E         
                                        I         
                                        G         
                                        N         
                                                  
                                        K         
                                        E         
                                        Y         

COMMON_LOOKUP_ FK_COMMON_LOOKUP_LAB_2   F ENABLED 
LAB                                     O         
                                        R         
                                        E         
                                        I         
                                        G         
                                        N         
                                                  
                                        K         
                                        E         
                                        Y         


10 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #10
SQL> --  --------
SQL> --  Alter the table to add not null constraints.
SQL> -- --------------------------------------------------------
SQL> ALTER TABLE system_user_lab
  2    MODIFY (system_user_group_id  NUMBER  CONSTRAINT nn_system_user_lab_2 NOT NULL);

Table SYSTEM_USER_LAB altered.

SQL> 
SQL> ALTER TABLE system_user_lab
  2    MODIFY (system_user_type      NUMBER  CONSTRAINT nn_system_user_lab_3 NOT NULL);

Table SYSTEM_USER_LAB altered.

SQL> 
SQL> -- Display system_user_lab table constraints.
SQL> COL table_name       FORMAT A14  HEADING "Table Name"
SQL> COL constraint_name  FORMAT A24  HEADING "Constraint Name"
SQL> COL constraint_type  FORMAT A15  HEADING "Constraint Type"
SQL> COL status           FORMAT A8   HEADING "Status"
SQL> SELECT   table_name
  2  ,        constraint_name
  3  ,        CASE
  4             WHEN constraint_type = 'R'        THEN 'FOREIGN KEY'
  5             WHEN constraint_type = 'P'        THEN 'PRIMARY KEY'
  6             WHEN constraint_type = 'U'        THEN 'UNIQUE'
  7             WHEN constraint_type = 'C' AND  REGEXP_LIKE(constraint_name,'^.*nn.*$','i')
  8             THEN 'NOT NULL'
  9             ELSE 'CHECK'
 10           END constraint_type
 11  ,        status
 12  FROM     user_constraints
 13  WHERE    table_name = 'COMMON_LOOKUP_LAB'
 14  ORDER BY CASE
 15             WHEN constraint_type = 'PRIMARY KEY' THEN 1
 16             WHEN constraint_type = 'NOT NULL'    THEN 2
 17             WHEN constraint_type = 'CHECK'       THEN 3
 18             WHEN constraint_type = 'UNIQUE'      THEN 4
 19             WHEN constraint_type = 'FOREIGN KEY' THEN 5
 20           END
 21  ,        constraint_name;

Table Name     Constraint Name          Constraint Type Status  
-------------- ------------------------ --------------- --------
COMMON_LOOKUP_ PK_COMMON_LOOKUP_LAB_1   PRIMARY KEY     ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_1   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_2   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_3   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_4   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_5   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_6   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ NN_COMMON_LOOKUP_LAB_7   NOT NULL        ENABLED 
LAB                                                             

COMMON_LOOKUP_ FK_COMMON_LOOKUP_LAB_1   FOREIGN KEY     ENABLED 
LAB                                                             

COMMON_LOOKUP_ FK_COMMON_LOOKUP_LAB_2   FOREIGN KEY     ENABLED 
LAB                                                             


10 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #11
SQL> --  --------
SQL> --  Insert row in the system_user_lab table with subqueries.
SQL> -- --------------------------------------------------------
SQL> INSERT INTO system_user_lab
  2  ( system_user_lab_id
  3  , system_user_name
  4  , system_user_group_id
  5  , system_user_type
  6  , first_name
  7  , middle_name
  8  , last_name
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date)
 13  VALUES
 14  ( system_user_lab_s1.NEXTVAL                          -- system_user_lab_id
 15  ,'DBA1'                                           -- system_user_name
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
 19    AND      common_lookup_type = 'DBA')            -- system_user_group_id            
 20  ,(SELECT   common_lookup_lab_id
 21    FROM     common_lookup_lab
 22    WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
 23    AND      common_lookup_type = 'SYSTEM_GROUP')   -- system_user_type
 24  ,'Phineas'
 25  ,'Taylor'
 26  ,'Barnum'
 27  ,(SELECT   system_user_lab_id
 28    FROM     system_user_lab
 29    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 30  , SYSDATE                                         -- creation_date
 31  ,(SELECT   system_user_lab_id
 32    FROM     system_user_lab
 33    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 34  , SYSDATE                                         -- last_update_date
 35  );

1 row inserted.

SQL> 
SQL> INSERT INTO system_user_lab
  2  ( system_user_lab_id
  3  , system_user_name
  4  , system_user_group_id
  5  , system_user_type
  6  , first_name
  7  , last_name
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date)
 12  VALUES
 13  ( system_user_lab_s1.NEXTVAL                          -- system_user_lab_id
 14  ,'DBA2'                                           -- system_user_name
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
 18    AND      common_lookup_type = 'DBA')            -- system_user_group_id            
 19  ,(SELECT   common_lookup_lab_id
 20    FROM     common_lookup_lab
 21    WHERE    common_lookup_context = 'SYSTEM_USER_LAB'
 22    AND      common_lookup_type = 'SYSTEM_GROUP')   -- system_user_type
 23  ,'Phileas'
 24  ,'Fogg'
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 28  , SYSDATE                                         -- creation_date
 29  ,(SELECT   system_user_lab_id
 30    FROM     system_user_lab
 31    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 32  , SYSDATE                                         -- last_update_date
 33  );

1 row inserted.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #12
SQL> --  --------
SQL> --  Display inserted rows from the system_user_lab table.
SQL> -- --------------------------------------------------------
SQL> SET NULL '<Null>'
SQL> COL system_user_lab_id        FORMAT  9999
SQL> COL system_user_group_id  FORMAT  9999
SQL> COL system_user_type      FORMAT  9999
SQL> COL system_user_name      FORMAT  A10
SQL> COL full_user_name        FORMAT  A30
SQL> SELECT   system_user_lab_id
  2  ,        system_user_group_id
  3  ,        system_user_type
  4  ,        system_user_name
  5  ,        CASE
  6             WHEN last_name IS NOT NULL THEN
  7               last_name || ', ' || first_name || ' ' || middle_name
  8           END AS full_user_name
  9  FROM     system_user_lab;

                                                         System                                   
          System                 System           System User                                     
            User                  GUser             User                                          
            ID #                   ID #             Type Name       FULL_USER_NAME                
---------------- ---------------------- ---------------- ---------- ------------------------------
               1                      1                3 SYSADMIN   <Null>                        
            1001                      2                3 DBA1       Barnum, Phineas Taylor        
            1002                      2                3 DBA2       Fogg, Phileas                 

3 rows selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> @/home/student/Data/cit225/oracle/lib1/seed/seeding.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   seeding.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds data in the video store model.
SQL> --   - Inserts the data in the rental table for 5 records and
SQL> --     then inserts 9 dependent records in a non-sequential 
SQL> --     order.
SQL> --   - A non-sequential order requires that you use subqueries
SQL> --     to discover the foreign key values for the inserts.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> @@group_account1.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   group_account1.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This seeds data in the video store model.
SQL> -- ------------------------------------------------------------------
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds rows in a dependency chain, including the following
SQL> --  tables:
SQL> --
SQL> --    1. MEMBER
SQL> --    2. CONTACT
SQL> --    3. ADDRESS
SQL> --    4. STREET_ADDRESS
SQL> --    5. TELEPHONE
SQL> --
SQL> --  It creates primary keys with the .NEXTVAL pseudo columns and
SQL> --  foreign keys with the .CURRVAL pseudo columns.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL group_account1.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert record set #1, with one entry in the member table and
SQL> --  two entries in contact table.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO member
  2  ( member_id
  3  , member_type
  4  , account_number
  5  , credit_card_number
  6  , credit_card_type
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( member_s1.nextval                               -- member_id
 13  , NULL                                            -- member_type
 14  ,'B293-71445'                                     -- account_number
 15  ,'1111-2222-3333-4444'                            -- credit_card_number
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'MEMBER'
 19    AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert first contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_s1.nextval                              -- contact_id
 13  , member_s1.currval                               -- member_id
 14  ,(SELECT   common_lookup_id
 15    FROM     common_lookup
 16    WHERE    common_lookup_context = 'CONTACT'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Randi'                                          -- first_name
 19  ,'Winn'                                           -- last_name
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'10 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'001'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'111-1111'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert second contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_s1.nextval                              -- contact_id
 13  , member_s1.currval                               -- member_id
 14  ,(SELECT   common_lookup_id
 15    FROM     common_lookup
 16    WHERE    common_lookup_context = 'CONTACT'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Brian'                                          -- first_name
 19  ,'Winn'                                           -- last_name
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'10 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'001'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'111-1111'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE    c.last_name = 'Winn';

Account    Name                                                       
Number     (Last, First MI) City         State      Telephone         
---------- ---------------- ------------ ---------- ------------------
B293-71445 Winn, Randi      San Jose     CA         001-(408) 111-1111
B293-71445 Winn, Brian      San Jose     CA         001-(408) 111-1111

2 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@group_account2.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   group_account2.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This seeds data in the video store model.
SQL> -- ------------------------------------------------------------------
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds rows in a dependency chain, including the following
SQL> --  tables:
SQL> --
SQL> --    1. MEMBER
SQL> --    2. CONTACT
SQL> --    3. ADDRESS
SQL> --    4. STREET_ADDRESS
SQL> --    5. TELEPHONE
SQL> --
SQL> --  It creates primary keys with the .NEXTVAL pseudo columns and
SQL> --  foreign keys with the .CURRVAL pseudo columns.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL group_account2.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert record set #2, with one entry in the member table and
SQL> --  two entries in contact table.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO member
  2  ( member_id
  3  , member_type
  4  , account_number
  5  , credit_card_number
  6  , credit_card_type
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( member_s1.nextval                               -- member_id
 13  , NULL                                            -- member_type
 14  ,'B293-71446'                                     -- account_number
 15  ,'2222-3333-4444-5555'                            -- credit_card_number
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'MEMBER'
 19    AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert first contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_s1.nextval                              -- contact_id
 13  , member_s1.currval                               -- member_id
 14  ,(SELECT   common_lookup_id
 15    FROM     common_lookup
 16    WHERE    common_lookup_context = 'CONTACT'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Oscar'                                          -- first_name
 19  ,'Vizquel'                                        -- last_name
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'12 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'222-2222'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert second contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_s1.nextval                              -- contact_id
 13  , member_s1.currval                               -- member_id
 14  ,(SELECT   common_lookup_id
 15    FROM     common_lookup
 16    WHERE    common_lookup_context = 'CONTACT'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Doreen'                                         -- first_name
 19  ,'Vizquel'                                        -- last_name
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'12 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'222-2222'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE    c.last_name = 'Vizquel';

Account    Name                                                       
Number     (Last, First MI) City         State      Telephone         
---------- ---------------- ------------ ---------- ------------------
B293-71446 Vizquel, Oscar   San Jose     CA         USA-(408) 222-2222
B293-71446 Vizquel, Doreen  San Jose     CA         USA-(408) 222-2222

2 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@group_account3.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   group_account3.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This seeds data in the video store model.
SQL> -- ------------------------------------------------------------------
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds rows in a dependency chain, including the following
SQL> --  tables:
SQL> --
SQL> --    1. MEMBER
SQL> --    2. CONTACT
SQL> --    3. ADDRESS
SQL> --    4. STREET_ADDRESS
SQL> --    5. TELEPHONE
SQL> --
SQL> --  It creates primary keys with the .NEXTVAL pseudo columns and
SQL> --  foreign keys with the .CURRVAL pseudo columns.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL group_account3.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert record set #3, with one entry in the member table and
SQL> --  two entries in contact table.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO member
  2  ( member_id
  3  , member_type
  4  , account_number
  5  , credit_card_number
  6  , credit_card_type
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( member_s1.nextval                               -- member_id
 13  , NULL                                            -- member_type
 14  ,'B293-71447'                                     -- account_number
 15  ,'3333-4444-5555-6666'                            -- credit_card_number
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'MEMBER'
 19    AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert first contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_s1.nextval                              -- contact_id
 13  , member_s1.currval                               -- member_id
 14  ,(SELECT   common_lookup_id
 15    FROM     common_lookup
 16    WHERE    common_lookup_context = 'CONTACT'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Meaghan'                                        -- first_name
 19  ,'Sweeney'                                        -- last_name
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'14 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'333-3333'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert second contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_s1.nextval                              -- contact_id
 13  , member_s1.currval                               -- member_id
 14  ,(SELECT   common_lookup_id
 15    FROM     common_lookup
 16    WHERE    common_lookup_context = 'CONTACT'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Matthew'                                         -- first_name
 19  ,'Sweeney'                                        -- last_name
 20  ,(SELECT   system_user_id
 21    FROM     system_user
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

1 row inserted.

SQL> 
SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'14 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'333-3333'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert third contact in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact
  2  ( contact_id
  3  , member_id
  4  , contact_type
  5  , first_name
  6  , middle_name
  7  , last_name
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( contact_s1.nextval                              -- contact_id
 14  , member_s1.currval                               -- member_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_context = 'CONTACT'
 18    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 19  ,'Ian'                                            -- first_name
 20  ,'M'                                              -- middle_name
 21  ,'Sweeney'                                        -- last_name
 22  ,(SELECT   system_user_id
 23    FROM     system_user
 24    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 25  , SYSDATE                                         -- creation_date
 26  ,(SELECT   system_user_id
 27    FROM     system_user
 28    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 29  , SYSDATE                                         -- last_update_date
 30  );

1 row inserted.

SQL> 
SQL> 
SQL> INSERT INTO address
  2  ( address_id
  3  , contact_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_s1.nextval                              -- address_id
 14  , contact_s1.currval                              -- contact_id
 15  ,(SELECT   common_lookup_id
 16    FROM     common_lookup
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_id
 22    FROM     system_user
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_id
 26    FROM     system_user
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

1 row inserted.

SQL> 
SQL> INSERT INTO street_address
  2  ( street_address_id
  3  , address_id
  4  , street_address
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_s1.nextval                       -- street_address_id
 11  , address_s1.currval                              -- address_id
 12  ,'14 El Camino Real'                              -- street_address
 13  ,(SELECT   system_user_id
 14    FROM     system_user
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_id
 18    FROM     system_user
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

1 row inserted.

SQL> 
SQL> INSERT INTO telephone
  2  ( telephone_id
  3  , contact_id
  4  , address_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_s1.nextval                            -- telephone_id
 15  , address_s1.currval                              -- address_id
 16  , contact_s1.currval                              -- contact_id
 17  ,(SELECT   common_lookup_id
 18    FROM     common_lookup
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'333-3333'                                       -- telephone_number
 24  ,(SELECT   system_user_id
 25    FROM     system_user
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_id
 29    FROM     system_user
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

1 row inserted.

SQL> 
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE    c.last_name = 'Sweeney';

Account    Name                                                       
Number     (Last, First MI) City         State      Telephone         
---------- ---------------- ------------ ---------- ------------------
B293-71447 Sweeney, Meaghan San Jose     CA         USA-(408) 333-3333
B293-71447 Sweeney, Matthew San Jose     CA         USA-(408) 333-3333
B293-71447 Sweeney, Ian M   San Jose     CA         USA-(408) 333-3333

3 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@item_inserts.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   item_inserts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL item_inserts.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds rows in a item table.
SQL> -- ------------------------------------------------------------------
SQL> --  - Insert 21 rows in the ITEM table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'9736-05640-4'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'The Hunt for Red October'
 21  ,'Special Collector''s Edition'
 22  ,'PG'
 23  ,'02-MAR-90'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 23 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'9736-05640-4'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'The Hunt for Red October'
,'Special Collector''s Edition'
,'PG'
,'02-MAR-90'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item 
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'24543-02392'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'Star Wars I'
 21  ,'Phantom Menace'
 22  ,'PG'
 23  ,'04-MAY-99'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 51 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item 
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'24543-02392'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'Star Wars I'
,'Phantom Menace'
,'PG'
,'04-MAY-99'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item 
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'24543-5615'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'DVD_FULL_SCREEN')
 20  ,'Star Wars II'
 21  ,'Attack of the Clones'
 22  ,'PG'
 23  ,'16-MAY-02'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 79 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item 
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'24543-5615'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'DVD_FULL_SCREEN')
,'Star Wars II'
,'Attack of the Clones'
,'PG'
,'16-MAY-02'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item 
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'24543-05539'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'Star Wars II'
 21  ,'Attack of the Clones'
 22  ,'PG'
 23  ,'16-MAY-02'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 107 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item 
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'24543-05539'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'Star Wars II'
,'Attack of the Clones'
,'PG'
,'16-MAY-02'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'24543-20309'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'Star Wars III'
 21  ,'Revenge of the Sith'
 22  ,'PG13'
 23  ,'19-MAY-05'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 135 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'24543-20309'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'Star Wars III'
,'Revenge of the Sith'
,'PG13'
,'19-MAY-05'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'86936-70380'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'The Chronicles of Narnia'
 21  ,'The Lion, the Witch and the Wardrobe','PG'
 22  ,'16-MAY-02'
 23  , 1001
 24  , SYSDATE
 25  , 1001
 26  , SYSDATE);

Error starting at line : 163 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'86936-70380'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'The Chronicles of Narnia'
,'The Lion, the Witch and the Wardrobe','PG'
,'16-MAY-02'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'91493-06475'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'RoboCop'
 21  ,''
 22  ,'Mature'
 23  ,'24-JUL-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 190 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'91493-06475'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'XBOX')
,'RoboCop'
,''
,'Mature'
,'24-JUL-03'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'93155-11810'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'Pirates of the Caribbean'
 21  ,''
 22  ,'Teen'
 23  ,'30-JUN-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 218 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'93155-11810'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'XBOX')
,'Pirates of the Caribbean'
,''
,'Teen'
,'30-JUN-03'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'12725-00173'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'The Chronicles of Narnia'
 21  ,'The Lion, the Witch and the Wardrobe'
 22  ,'Everyone'
 23  ,'30-JUN-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 246 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'12725-00173'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'XBOX')
,'The Chronicles of Narnia'
,'The Lion, the Witch and the Wardrobe'
,'Everyone'
,'30-JUN-03'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'45496-96128'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'NINTENDO_GAMECUBE')
 20  ,'MarioKart'
 21  ,'Double Dash'
 22  ,'Everyone'
 23  ,'17-NOV-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 274 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'45496-96128'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'NINTENDO_GAMECUBE')
,'MarioKart'
,'Double Dash'
,'Everyone'
,'17-NOV-03'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'08888-32214'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'PLAYSTATION2')
 20  ,'Splinter Cell'
 21  ,'Chaos Theory'
 22  ,'Teen'
 23  ,'08-APR-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 302 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'08888-32214'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'PLAYSTATION2')
,'Splinter Cell'
,'Chaos Theory'
,'Teen'
,'08-APR-03'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'14633-14821'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'PLAYSTATION2')
 20  ,'Need for Speed'
 21  ,'Most Wanted'
 22  ,'Everyone'
 23  ,'15-NOV-04'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 330 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'14633-14821'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'PLAYSTATION2')
,'Need for Speed'
,'Most Wanted'
,'Everyone'
,'15-NOV-04'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'10425-29944'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'The DaVinci Code'
 21  ,''
 22  ,'Teen'
 23  ,'19-MAY-06'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 358 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'10425-29944'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'XBOX')
,'The DaVinci Code'
,''
,'Teen'
,'19-MAY-06'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'52919-52057'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'Cars'
 21  ,''
 22  ,'Everyone'
 23  ,'28-APR-06'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 386 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'52919-52057'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'XBOX')
,'Cars'
,''
,'Everyone'
,'28-APR-06'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'9689-80547-3'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Beau Geste'
 21  ,''
 22  ,'PG'
 23  ,'01-MAR-92'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 414 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'9689-80547-3'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'Beau Geste'
,''
,'PG'
,'01-MAR-92'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'53939-64103'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'I Remember Mama'
 21  ,''
 22  ,'NR'
 23  ,'05-JAN-98'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 442 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'53939-64103'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'I Remember Mama'
,''
,'NR'
,'05-JAN-98'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'24543-01292'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Tora! Tora! Tora!'
 21  ,'The Attack on Pearl Harbor'
 22  ,'G'
 23  ,'02-NOV-99'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 470 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'24543-01292'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'Tora! Tora! Tora!'
,'The Attack on Pearl Harbor'
,'G'
,'02-NOV-99'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'43396-60047'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'A Man for All Seasons'
 21  ,''
 22  ,'G'
 23  ,'28-JUN-94'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 498 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'43396-60047'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'A Man for All Seasons'
,''
,'G'
,'28-JUN-94'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'43396-70603'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Hook'
 21  ,''
 22  ,'PG'
 23  ,'11-DEC-91'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 526 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'43396-70603'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'Hook'
,''
,'PG'
,'11-DEC-91'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'85391-13213'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Around the World in 80 Days'
 21  ,''
 22  ,'G'
 23  ,'04-DEC-92'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 554 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'85391-13213'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'Around the World in 80 Days'
,''
,'G'
,'04-DEC-92'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> INSERT INTO item
  2  ( item_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_s1.nextval
 15  ,'85391-10843'
 16  ,(SELECT   common_lookup_id
 17    FROM     common_lookup
 18    WHERE    common_lookup_context = 'ITEM'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Camelot'
 21  ,''
 22  ,'G'
 23  ,'15-MAY-98'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 582 File @ /home/student/Data/cit225/oracle/lib1/seed/item_inserts.sql
In command -
INSERT INTO item
( item_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_s1.nextval
,'85391-10843'
,(SELECT   common_lookup_id
  FROM     common_lookup
  WHERE    common_lookup_context = 'ITEM'
  AND      common_lookup_type = 'BLU-RAY')
,'Camelot'
,''
,'G'
,'15-MAY-98'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_ITEM_3) violated - parent key not found

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Display the 21 inserts into the item table.
SQL> -- ------------------------------------------------------------------
SQL> SET PAGESIZE 99
SQL> COL item_id                FORMAT 9999  HEADING "Item|ID #"
SQL> COL common_lookup_meaning  FORMAT A20  HEADING "Item Description"
SQL> COL item_title             FORMAT A30  HEADING "Item Title"
SQL> COL item_release_date      FORMAT A11  HEADING "Item|Release|Date"
SQL> SELECT   i.item_id
  2  ,        cl.common_lookup_meaning
  3  ,        i.item_title
  4  ,        i.item_release_date
  5  FROM     item i INNER JOIN common_lookup cl ON i.item_type = cl.common_lookup_id;

0 rows selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@create_insert_contacts.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   create_insert_contacts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> --  This automates creating accounts.
SQL> -- ------------------------------------------------------------------
SQL> -- ------------------------------------------------------------------
SQL> --  Automates inserts of member accounts for individual accounts. 
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL create_insert_contacts.txt
SQL> 
SQL> -- Transaction Management Example.
SQL> CREATE OR REPLACE PROCEDURE contact_insert
  2  ( pv_member_type         VARCHAR2
  3  , pv_account_number      VARCHAR2
  4  , pv_credit_card_number  VARCHAR2
  5  , pv_credit_card_type    VARCHAR2
  6  , pv_first_name          VARCHAR2
  7  , pv_middle_name         VARCHAR2 := ''
  8  , pv_last_name           VARCHAR2
  9  , pv_contact_type        VARCHAR2
 10  , pv_address_type        VARCHAR2
 11  , pv_city                VARCHAR2
 12  , pv_state_province      VARCHAR2
 13  , pv_postal_code         VARCHAR2
 14  , pv_street_address      VARCHAR2
 15  , pv_telephone_type      VARCHAR2
 16  , pv_country_code        VARCHAR2
 17  , pv_area_code           VARCHAR2
 18  , pv_telephone_number    VARCHAR2
 19  , pv_created_by          NUMBER   := 1001
 20  , pv_creation_date       DATE     := SYSDATE
 21  , pv_last_updated_by     NUMBER   := 1001
 22  , pv_last_update_date    DATE     := SYSDATE) IS
 23  
 24  BEGIN
 25  
 26    /* Create a SAVEPOINT as a starting point. */
 27    SAVEPOINT starting_point;
 28  
 29    /* Insert into the member table. */
 30    INSERT INTO member
 31    ( member_id
 32    , member_type
 33    , account_number
 34    , credit_card_number
 35    , credit_card_type
 36    , created_by
 37    , creation_date
 38    , last_updated_by
 39    , last_update_date )
 40    VALUES
 41    ( member_s1.NEXTVAL
 42    ,(SELECT   common_lookup_id
 43      FROM     common_lookup
 44      WHERE    common_lookup_context = 'MEMBER'
 45      AND      common_lookup_type = pv_member_type)
 46    , pv_account_number
 47    , pv_credit_card_number
 48    ,(SELECT   common_lookup_id
 49      FROM     common_lookup
 50      WHERE    common_lookup_context = 'MEMBER'
 51      AND      common_lookup_type = pv_credit_card_type)
 52    , pv_created_by
 53    , pv_creation_date
 54    , pv_last_updated_by
 55    , pv_last_update_date );
 56  
 57    /* Insert into the contact table. */
 58    INSERT INTO contact
 59    VALUES
 60    ( contact_s1.NEXTVAL
 61    , member_s1.CURRVAL
 62    ,(SELECT   common_lookup_id
 63      FROM     common_lookup
 64      WHERE    common_lookup_context = 'CONTACT'
 65      AND      common_lookup_type = pv_contact_type)
 66    , pv_first_name
 67    , pv_middle_name
 68    , pv_last_name
 69    , pv_created_by
 70    , pv_creation_date
 71    , pv_last_updated_by
 72    , pv_last_update_date );  
 73  
 74    /* Insert into the address table. */
 75    INSERT INTO address
 76    VALUES
 77    ( address_s1.NEXTVAL
 78    , contact_s1.CURRVAL
 79    ,(SELECT   common_lookup_id
 80      FROM     common_lookup
 81      WHERE    common_lookup_context = 'MULTIPLE'
 82      AND      common_lookup_type = pv_address_type)
 83    , pv_city
 84    , pv_state_province
 85    , pv_postal_code
 86    , pv_created_by
 87    , pv_creation_date
 88    , pv_last_updated_by
 89    , pv_last_update_date );  
 90  
 91    /* Insert into the street_address table. */
 92    INSERT INTO street_address
 93    VALUES
 94    ( street_address_s1.NEXTVAL
 95    , address_s1.CURRVAL
 96    , pv_street_address
 97    , pv_created_by
 98    , pv_creation_date
 99    , pv_last_updated_by
100    , pv_last_update_date );  
101  
102    /* Insert into the telephone table. */
103    INSERT INTO telephone
104    VALUES
105    ( telephone_s1.NEXTVAL                              -- TELEPHONE_ID
106    , contact_s1.CURRVAL                                -- CONTACT_ID
107    , address_s1.CURRVAL                                -- ADDRESS_ID
108    ,(SELECT   common_lookup_id                         -- ADDRESS_TYPE
109      FROM     common_lookup
110      WHERE    common_lookup_context = 'MULTIPLE'
111      AND      common_lookup_type = pv_telephone_type)
112    , pv_country_code                                   -- COUNTRY_CODE
113    , pv_area_code                                      -- AREA_CODE
114    , pv_telephone_number                               -- TELEPHONE_NUMBER
115    , pv_created_by                                     -- CREATED_BY
116    , pv_creation_date                                  -- CREATION_DATE
117    , pv_last_updated_by                                -- LAST_UPDATED_BY
118    , pv_last_update_date);                             -- LAST_UPDATE_DATE
119  
120    /* Commit the series of inserts. */
121    COMMIT;
122  EXCEPTION 
123    WHEN OTHERS THEN
124      ROLLBACK TO starting_point;
125      RETURN;
126  END contact_insert;
127  /

Procedure CONTACT_INSERT compiled

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@individual_accounts.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   individual_accounts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> --  This inserts 5 individual accounts through procedure.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL individual_accounts.txt
SQL> 
SQL> -- Insert first contact.
SQL> BEGIN
  2    /* Call the contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-34'
  6      , pv_credit_card_number => '1111-1111-1111-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Goeffrey'
  9      , pv_middle_name => 'Ward'
 10      , pv_last_name => 'Clinton'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address => '118 South 9th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1234' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Insert second contact.
SQL> BEGIN
  2    /* Call athe contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-35'
  6      , pv_credit_card_number => '1111-2222-1111-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Wendy'
  9      , pv_last_name => 'Moss'
 10      , pv_contact_type => 'CUSTOMER'
 11      , pv_address_type => 'HOME'
 12      , pv_city => 'Provo'
 13      , pv_state_province => 'Utah'
 14      , pv_postal_code => '84606'
 15      , pv_street_address => '1218 South 10th East'
 16      , pv_telephone_type => 'HOME'
 17      , pv_country_code => '001'
 18      , pv_area_code => '801'
 19      , pv_telephone_number => '423-1235' );
 20  END;
 21  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Insert third contact.
SQL> BEGIN
  2    /* Call the contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-36'
  6      , pv_credit_card_number => '1111-1111-2222-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Simon'
  9      , pv_middle_name => 'Jonah'
 10      , pv_last_name => 'Gretelz'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address => '2118 South 7th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1236' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Insert fourth contact.
SQL> BEGIN
  2    /* Call the contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-37'
  6      , pv_credit_card_number => '3333-1111-1111-2222'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Elizabeth'
  9      , pv_middle_name => 'Jane'
 10      , pv_last_name => 'Royal'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address => '2228 South 14th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1237' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Insert fifth contact.
SQL> BEGIN
  2    /* Call the contact_insert procedure. */
  3    contact_insert(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-38'
  6      , pv_credit_card_number => '1111-1111-3333-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Brian'
  9      , pv_middle_name => 'Nathan'
 10      , pv_last_name => 'Smith'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Spanish Fork'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address => '333 North 2nd East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1238' );
 21  END;
 22  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify five individual rows of chained inserts through
SQL> --   a procedure into the five dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE    m.member_type = (SELECT common_lookup_id
 14                            FROM   common_lookup
 15                            WHERE  common_lookup_context = 'MEMBER'
 16                            AND    common_lookup_type = 'INDIVIDUAL');

0 rows selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@update_members.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   update_members.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  25-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- These steps modify the MEMBER table created during Lab #2, by adding
SQL> -- a MEMBER_TYPE column and seeding an appropriate group or individual 
SQL> -- account on the basis of how many contacts belong to a member.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL update_members.txt
SQL> 
SQL> -- Update all MEMBER_TYPE values based on number of dependent CONTACT rows.
SQL> UPDATE member m
  2  SET    member_type =
  3          (SELECT   common_lookup_id
  4           FROM     common_lookup
  5           WHERE    common_lookup_context = 'MEMBER'
  6           AND      common_lookup_type =
  7                     (SELECT  dt.member_type
  8                      FROM   (SELECT   c.member_id
  9                              ,        CASE
 10                                         WHEN COUNT(c.member_id) > 1 THEN 'GROUP'
 11                                         ELSE 'INDIVIDUAL'
 12                                       END AS member_type
 13                              FROM     contact c
 14                              GROUP BY c.member_id) dt
 15                      WHERE    dt.member_id = m.member_id));

3 rows updated.

SQL> 
SQL> -- Modify the MEMBER table to add a NOT NULL constraint to the MEMBER_TYPE column.
SQL> ALTER TABLE member
  2    MODIFY (member_type  NUMBER  CONSTRAINT nn_member_1  NOT NULL);

Table MEMBER altered.

SQL> 
SQL> -- Use SQL*Plus report formatting commands.
SQL> COLUMN member_id          FORMAT 999999 HEADING "MEMBER|ID"
SQL> COLUMN members            FORMAT 999999 HEADING "MEMBER|QTY #"
SQL> COLUMN member_type        FORMAT 999999 HEADING "MEMBER|TYPE|ID #"
SQL> COLUMN common_lookup_id   FORMAT 999999 HEADING "MEMBER|LOOKUP|ID #"
SQL> COLUMN common_lookup_type FORMAT A12    HEADING "COMMON|LOOKUP|TYPE"
SQL> SELECT   m.member_id
  2  ,        COUNT(contact_id) AS MEMBERS
  3  ,        m.member_type
  4  ,        cl.common_lookup_id
  5  ,        cl.common_lookup_type
  6  FROM     member m INNER JOIN contact c
  7  ON       m.member_id = c.member_id INNER JOIN common_lookup cl
  8  ON       m.member_type = cl.common_lookup_id
  9  GROUP BY m.member_id
 10  ,        m.member_type
 11  ,        cl.common_lookup_id
 12  ,        cl.common_lookup_type
 13  ORDER BY m.member_id;

                                 MEMBER             MEMBER COMMON      
   MEMBER       MEMBER             TYPE             LOOKUP LOOKUP      
       ID        QTY #             ID #               ID # TYPE        
--------- ------------ ---------------- ------------------ ------------
     1001            2             1004               1004 GROUP       
     1002            2             1004               1004 GROUP       
     1003            3             1004               1004 GROUP       

3 rows selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@rental_inserts.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   rental_inserts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  29-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds data in the video store model.
SQL> --   - Inserts the data in the rental table for 5 records and
SQL> --     then inserts 9 dependent records in a non-sequential 
SQL> --     order.
SQL> --   - A non-sequential order requires that you use subqueries
SQL> --     to discover the foreign key values for the inserts.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL rental_inserts.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> -- Insert 5 records in the RENTAL table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Vizquel'
 15    AND      first_name = 'Oscar')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 30 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental
( rental_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_s1.nextval
,(SELECT   contact_id
  FROM     contact
  WHERE    last_name = 'Vizquel'
  AND      first_name = 'Oscar')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_RENTAL_3) violated - parent key not found

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Vizquel'
 15    AND      first_name = 'Doreen')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 52 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental
( rental_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_s1.nextval
,(SELECT   contact_id
  FROM     contact
  WHERE    last_name = 'Vizquel'
  AND      first_name = 'Doreen')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_RENTAL_3) violated - parent key not found

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Sweeney'
 15    AND      first_name = 'Meaghan')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 74 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental
( rental_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_s1.nextval
,(SELECT   contact_id
  FROM     contact
  WHERE    last_name = 'Sweeney'
  AND      first_name = 'Meaghan')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_RENTAL_3) violated - parent key not found

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Sweeney'
 15    AND      first_name = 'Ian')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 96 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental
( rental_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_s1.nextval
,(SELECT   contact_id
  FROM     contact
  WHERE    last_name = 'Sweeney'
  AND      first_name = 'Ian')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_RENTAL_3) violated - parent key not found

SQL> 
SQL> INSERT INTO rental
  2  ( rental_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_s1.nextval
 12  ,(SELECT   contact_id
 13    FROM     contact
 14    WHERE    last_name = 'Winn'
 15    AND      first_name = 'Brian')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 118 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental
( rental_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_s1.nextval
,(SELECT   contact_id
  FROM     contact
  WHERE    last_name = 'Winn'
  AND      first_name = 'Brian')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-02291: integrity constraint (STUDENT.FK_RENTAL_3) violated - parent key not found

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> -- Insert 9 records in the RENTAL_ITEM table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Oscar')
 17  ,(SELECT   i.item_id
 18    FROM     item i
 19    ,        common_lookup cl
 20    WHERE    i.item_title = 'Star Wars I'
 21    AND      i.item_subtitle = 'Phantom Menace'
 22    AND      i.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 144 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Oscar')
,(SELECT   i.item_id
  FROM     item i
  ,        common_lookup cl
  WHERE    i.item_title = 'Star Wars I'
  AND      i.item_subtitle = 'Phantom Menace'
  AND      i.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r inner join contact c
 13    ON       r.customer_id = c.contact_id
 14    WHERE    c.last_name = 'Vizquel'
 15    AND      c.first_name = 'Oscar')
 16  ,(SELECT   d.item_id
 17    FROM     item d join common_lookup cl
 18    ON       d.item_title = 'Star Wars II'
 19    WHERE    d.item_subtitle = 'Attack of the Clones'
 20    AND      d.item_type = cl.common_lookup_id
 21    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 22  , 1001
 23  , SYSDATE
 24  , 1001
 25  , SYSDATE);

Error starting at line : 172 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r inner join contact c
  ON       r.customer_id = c.contact_id
  WHERE    c.last_name = 'Vizquel'
  AND      c.first_name = 'Oscar')
,(SELECT   d.item_id
  FROM     item d join common_lookup cl
  ON       d.item_title = 'Star Wars II'
  WHERE    d.item_subtitle = 'Attack of the Clones'
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Oscar')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Star Wars III'
 21    AND      d.item_subtitle = 'Revenge of the Sith'
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 198 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Oscar')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'Star Wars III'
  AND      d.item_subtitle = 'Revenge of the Sith'
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Doreen')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'I Remember Mama'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 226 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Doreen')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'I Remember Mama'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'BLU-RAY')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Doreen')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Camelot'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 254 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Doreen')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'Camelot'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'BLU-RAY')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Sweeney'
 16    AND      c.first_name = 'Meaghan')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Hook'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 282 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Sweeney'
  AND      c.first_name = 'Meaghan')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'Hook'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'BLU-RAY')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Sweeney'
 16    AND      c.first_name = 'Ian')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'Cars'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'XBOX')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 310 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Sweeney'
  AND      c.first_name = 'Ian')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'Cars'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'XBOX')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Winn'
 16    AND      c.first_name = 'Brian')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'RoboCop'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'XBOX')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 338 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Winn'
  AND      c.first_name = 'Brian')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'RoboCop'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'XBOX')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> INSERT INTO rental_item
  2  ( rental_item_id
  3  , rental_id
  4  , item_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_s1.nextval
 11  ,(SELECT   r.rental_id
 12    FROM     rental r
 13    ,        contact c
 14    WHERE    r.customer_id = c.contact_id
 15    AND      c.last_name = 'Winn'
 16    AND      c.first_name = 'Brian')
 17  ,(SELECT   d.item_id
 18    FROM     item d
 19    ,        common_lookup cl
 20    WHERE    d.item_title = 'The Hunt for Red October'
 21    AND      d.item_subtitle = 'Special Collector''s Edition'
 22    AND      d.item_type = cl.common_lookup_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 366 File @ /home/student/Data/cit225/oracle/lib1/seed/rental_inserts.sql
In command -
INSERT INTO rental_item
( rental_item_id
, rental_id
, item_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_s1.nextval
,(SELECT   r.rental_id
  FROM     rental r
  ,        contact c
  WHERE    r.customer_id = c.contact_id
  AND      c.last_name = 'Winn'
  AND      c.first_name = 'Brian')
,(SELECT   d.item_id
  FROM     item d
  ,        common_lookup cl
  WHERE    d.item_title = 'The Hunt for Red October'
  AND      d.item_subtitle = 'Special Collector''s Edition'
  AND      d.item_type = cl.common_lookup_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM"."RENTAL_ID")

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify nine rental agreements, some with one and some
SQL> --   with more than one rental item.
SQL> -- ------------------------------------------------------------------
SQL> COL member_id       FORMAT 9999 HEADING "Member|ID #"
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL rental_id       FORMAT 9999 HEADING "Rent|ID #"
SQL> COL rental_item_id  FORMAT 9999 HEADING "Rent|Item|ID #"
SQL> COL item_title      FORMAT A26  HEADING "Item Title"
SQL> SELECT   m.member_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||       CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        r.rental_id
  8  ,        ri.rental_item_id
  9  ,        i.item_title
 10  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 11           rental r ON c.contact_id = r.customer_id INNER JOIN
 12           rental_item ri ON r.rental_id = ri.rental_id INNER JOIN
 13           item i ON ri.item_id = i.item_id
 14  ORDER BY r.rental_id;

0 rows selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
SQL> @@create_view.sql
SQL> -- ------------------------------------------------------------------
SQL> --  Program Name:   system_user_inserts.sql
SQL> --  Lab Assignment: N/A
SQL> --  Program Author: Michael McLaughlin
SQL> --  Creation Date:  30-Jan-2018
SQL> -- ------------------------------------------------------------------
SQL> --  Change Log:
SQL> -- ------------------------------------------------------------------
SQL> --  Change Date    Change Reason
SQL> -- -------------  ---------------------------------------------------
SQL> --  
SQL> -- ------------------------------------------------------------------
SQL> -- This creates tables, sequences, indexes, and constraints necessary
SQL> -- to begin lesson #3. Demonstrates proper process and syntax.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- Insert statement demonstrates a mandatory-only column override signature.
SQL> -- ------------------------------------------------------------------
SQL> -- TIP: When a comment ends the last line, you must use a forward slash on
SQL> --      on the next line to run the statement rather than a semicolon.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Open log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL create_view.txt
SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #1
SQL> --  --------
SQL> --   Display the rows in the member and contact tables.
SQL> -- --------------------------------------------------------
SQL> 
SQL> COL member_id           FORMAT 9999  HEADING "Member|ID #"
SQL> COL members             FORMAT 9999  HEADING "Member|#"
SQL> COL common_lookup_type  FORMAT A12   HEADING "Common|Lookup Type"
SQL> SELECT   m.member_id
  2  ,        COUNT(contact_id) AS MEMBERS
  3  ,        cl.common_lookup_type
  4  FROM     member m INNER JOIN contact c
  5  ON       m.member_id = c.member_id INNER JOIN common_lookup cl
  6  ON       m.member_type = cl.common_lookup_id
  7  GROUP BY m.member_id
  8  ,        m.member_type
  9  ,        cl.common_lookup_id
 10  ,        cl.common_lookup_type
 11  ORDER BY m.member_id;

     Member   Member Common      
       ID #        # Lookup Type 
----------- -------- ------------
       1001        2 GROUP       
       1002        2 GROUP       
       1003        3 GROUP       

3 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #2
SQL> --  --------
SQL> --   Create a view .
SQL> -- --------------------------------------------------------
SQL> CREATE OR REPLACE VIEW current_rental AS
  2    SELECT   m.account_number
  3    ,        c.last_name || ', ' || c.first_name
  4    ||       CASE
  5               WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6             END AS full_name
  7    ,        i.item_title AS title
  8    ,        i.item_subtitle AS subtitle
  9    ,        SUBSTR(cl.common_lookup_meaning,1,3) AS product
 10    ,        r.check_out_date
 11    ,        r.return_date
 12    FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 13             rental r ON c.contact_id = r.customer_id INNER JOIN
 14             rental_item ri ON r.rental_id = ri.rental_id INNER JOIN
 15             item i ON ri.item_id = i.item_id INNER JOIN
 16             common_lookup cl ON i.item_id = cl.common_lookup_id
 17    ORDER BY 1, 2, 3;

View CURRENT_RENTAL created.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #3
SQL> --  --------
SQL> --   Display the content of a view .
SQL> -- --------------------------------------------------------
SQL> COL full_name      FORMAT A24
SQL> COL title          FORMAT A30
SQL> COL subtitlei      FORMAT A4
SQL> COL product        FORMAT A7
SQL> COL check_out_date FORMAT A11
SQL> COL return_date    FORMAT A11
SQL> SELECT   cr.full_name
  2  ,        cr.title
  3  ,        cr.check_out_date
  4  ,        cr.return_date
  5  FROM     current_rental cr;

0 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------       
SQL> SPOOL OFF
SQL> 
SQL> SPOOL seeding.txt
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify seven rows of chained inserts to the five
SQL> --   dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> --    1. MEMBER
SQL> --    2. CONTACT
SQL> --    3. ADDRESS
SQL> --    4. STREET_ADDRESS
SQL> --    5. TELEPHONE
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> COL member_id       FORMAT 9999 HEADING "Acct|ID #"
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.member_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||       CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        a.city
  8  ,        a.state_province
  9  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
 10  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 11           address a ON c.contact_id = a.contact_id INNER JOIN
 12           street_address sa ON a.address_id = sa.address_id INNER JOIN
 13           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 14  WHERE    last_name IN ('Sweeney','Vizquel','Winn');

     Acct Account    Name                                                       
     ID # Number     (Last, First MI) City         State      Telephone         
--------- ---------- ---------------- ------------ ---------- ------------------
     1001 B293-71445 Winn, Randi      San Jose     CA         001-(408) 111-1111
     1001 B293-71445 Winn, Brian      San Jose     CA         001-(408) 111-1111
     1002 B293-71446 Vizquel, Oscar   San Jose     CA         USA-(408) 222-2222
     1002 B293-71446 Vizquel, Doreen  San Jose     CA         USA-(408) 222-2222
     1003 B293-71447 Sweeney, Meaghan San Jose     CA         USA-(408) 333-3333
     1003 B293-71447 Sweeney, Matthew San Jose     CA         USA-(408) 333-3333
     1003 B293-71447 Sweeney, Ian M   San Jose     CA         USA-(408) 333-3333

7 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Display the 21 inserts into the item table.
SQL> -- ------------------------------------------------------------------
SQL> SET PAGESIZE 99
SQL> COL item_id                FORMAT 9999  HEADING "Item|ID #"
SQL> COL common_lookup_meaning  FORMAT A20  HEADING "Item Description"
SQL> COL item_title             FORMAT A30  HEADING "Item Title"
SQL> COL item_release_date      FORMAT A11  HEADING "Item|Release|Date"
SQL> SELECT   i.item_id
  2  ,        cl.common_lookup_meaning
  3  ,        i.item_title
  4  ,        i.item_release_date
  5  FROM     item i INNER JOIN common_lookup cl ON i.item_type = cl.common_lookup_id;

0 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify five individual rows of chained inserts through
SQL> --   a procedure into the five dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 10           address a ON c.contact_id = a.contact_id INNER JOIN
 11           street_address sa ON a.address_id = sa.address_id INNER JOIN
 12           telephone t ON c.contact_id = t.contact_id AND a.address_id = t.address_id
 13  WHERE    m.member_type = (SELECT common_lookup_id
 14                            FROM   common_lookup
 15                            WHERE  common_lookup_context = 'MEMBER'
 16                            AND    common_lookup_type = 'INDIVIDUAL');

0 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify nine rental agreements, some with one and some
SQL> --   with more than one rental item.
SQL> -- ------------------------------------------------------------------
SQL> COL member_id       FORMAT 9999 HEADING "Member|ID #"
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL rental_id       FORMAT 9999 HEADING "Rent|ID #"
SQL> COL rental_item_id  FORMAT 9999 HEADING "Rent|Item|ID #"
SQL> COL item_title      FORMAT A26  HEADING "Item Title"
SQL> SELECT   m.member_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||       CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        r.rental_id
  8  ,        ri.rental_item_id
  9  ,        i.item_title
 10  FROM     member m INNER JOIN contact c ON m.member_id = c.member_id INNER JOIN
 11           rental r ON c.contact_id = r.customer_id INNER JOIN
 12           rental_item ri ON r.rental_id = ri.rental_id INNER JOIN
 13           item i ON ri.item_id = i.item_id
 14  ORDER BY r.rental_id;

0 rows selected. 

SQL> 
SQL> SPOOL OFF
SQL> 
SQL> -- ------------------------------------------------------------------ 
SQL> -- Open log file.  
SQL> SPOOL apply_oracle_lab4.txt
SQL> -- ------------------------------------------------------------------
SQL> --  Insert record set #1, with one entry in the member_lab table and
SQL> --  two entries in contact_lab table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO member_lab
  2  ( member_id_lab
  3  , member_type
  4  , account_number
  5  , credit_card_number
  6  , credit_card_type
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( member_lab_s1.nextval                               -- member_lab_id
 13  , NULL                                            -- member_type
 14  ,'B293-71445'                                     -- account_number
 15  ,'1111-2222-3333-4444'                            -- credit_card_number
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'MEMBER_LAB'
 19    AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 42 in command -
INSERT INTO member_lab
( member_id_lab
, member_type
, account_number
, credit_card_number
, credit_card_type
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( member_lab_s1.nextval                               -- member_lab_id
, NULL                                            -- member_type
,'B293-71445'                                     -- account_number
,'1111-2222-3333-4444'                            -- credit_card_number
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MEMBER_LAB'
  AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 53 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert first contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_lab_s1.nextval                              -- contact_lab_id
 13  , member_lab_s1.currval                               -- member_lab_id
 14  ,(SELECT   common_lookup_lab_id
 15    FROM     common_lookup_lab
 16    WHERE    common_lookup_context = 'CONTACT_LAB'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Randi'                                          -- first_name
 19  ,'Winn'                                           -- last_name
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 74 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Randi'                                          -- first_name
,'Winn'                                           -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 86 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 103 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_lab_id
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_lab_id
 12  ,'10 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 133 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_lab_id
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_lab_id
,'10 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 136 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'001'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'111-1111'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 155 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'001'                                            -- country_code
,'408'                                            -- area_code
,'111-1111'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert second contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_lab_s1.nextval                              -- contact_lab_id
 13  , member_lab_s1.currval                               -- member_lab_id
 14  ,(SELECT   common_lookup_lab_id
 15    FROM     common_lookup_lab
 16    WHERE    common_lookup_context = 'CONTACT_LAB'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Brian'                                          -- first_name
 19  ,'Winn'                                           -- last_name
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 191 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Brian'                                          -- first_name
,'Winn'                                           -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 203 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 221 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_lab_id
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_lab_id
 12  ,'10 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 251 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_lab_id
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_lab_id
,'10 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 254 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'001'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'111-1111'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 273 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'001'                                            -- country_code
,'408'                                            -- area_code
,'111-1111'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 10           address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
 11           street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
 12           telephone_lab t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
 13  WHERE    c.last_name = 'Winn';

0 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert record set #2, with one entry in the member_lab table and
SQL> --  two entries in contact_lab table.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO member_lab
  2  ( member_lab_id
  3  , member_type
  4  , account_number
  5  , credit_card_number
  6  , credit_card_type
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( member_lab_s1.nextval                               -- member_lab_id
 13  , NULL                                            -- member_type
 14  ,'B293-71446'                                     -- account_number
 15  ,'2222-3333-4444-5555'                            -- credit_card_number
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'MEMBER_LAB'
 19    AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 329 in command -
INSERT INTO member_lab
( member_lab_id
, member_type
, account_number
, credit_card_number
, credit_card_type
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( member_lab_s1.nextval                               -- member_lab_id
, NULL                                            -- member_type
,'B293-71446'                                     -- account_number
,'2222-3333-4444-5555'                            -- credit_card_number
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MEMBER_LAB'
  AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 340 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert first contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_lab_s1.nextval                              -- contact_lab_id
 13  , member_lab_s1.currval                               -- member_lab_id
 14  ,(SELECT   common_lookup_lab_id
 15    FROM     common_lookup_lab
 16    WHERE    common_lookup_context = 'CONTACT_LAB'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Oscar'                                          -- first_name
 19  ,'Vizquel'                                        -- last_name
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 361 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Oscar'                                          -- first_name
,'Vizquel'                                        -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 373 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 390 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_lab_id
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_lab_id
 12  ,'12 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 420 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_lab_id
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_lab_id
,'12 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 423 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'222-2222'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 442 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'USA'                                            -- country_code
,'408'                                            -- area_code
,'222-2222'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert second contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_lab_s1.nextval                              -- contact_lab_id
 13  , member_lab_s1.currval                               -- member_lab_id
 14  ,(SELECT   common_lookup_lab_id
 15    FROM     common_lookup_lab
 16    WHERE    common_lookup_context = 'CONTACT_LAB'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Doreen'                                         -- first_name
 19  ,'Vizquel'                                        -- last_name
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 478 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Doreen'                                         -- first_name
,'Vizquel'                                        -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 490 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 508 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_lab_id
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_lab_id_lab
 12  ,'12 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 538 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_lab_id
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_lab_id_lab
,'12 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 541 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'222-2222'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 560 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'USA'                                            -- country_code
,'408'                                            -- area_code
,'222-2222'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 10           address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
 11           street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
 12           telephone_lab t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
 13  WHERE    c.last_name = 'Vizquel';

0 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert record set #3, with one entry in the member_lab table and
SQL> --  two entries in contact_lab table.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO member_lab
  2  ( member_lab_id
  3  , member_type
  4  , account_number
  5  , credit_card_number
  6  , credit_card_type
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( member_lab_s1.nextval                               -- member_lab_id
 13  , NULL                                            -- member_type
 14  ,'B293-71447'                                     -- account_number
 15  ,'3333-4444-5555-6666'                            -- credit_card_number
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'MEMBER_LAB'
 19    AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 616 in command -
INSERT INTO member_lab
( member_lab_id
, member_type
, account_number
, credit_card_number
, credit_card_type
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( member_lab_s1.nextval                               -- member_lab_id
, NULL                                            -- member_type
,'B293-71447'                                     -- account_number
,'3333-4444-5555-6666'                            -- credit_card_number
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MEMBER_LAB'
  AND      common_lookup_type = 'DISCOVER_CARD')  -- credit_card_type
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 627 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert first contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_lab_s1.nextval                              -- contact_lab_id
 13  , member_lab_s1.currval                               -- member_lab_id
 14  ,(SELECT   common_lookup_lab_id
 15    FROM     common_lookup_lab
 16    WHERE    common_lookup_context = 'CONTACT_LAB'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Meaghan'                                        -- first_name
 19  ,'Sweeney'                                        -- last_name
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 648 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Meaghan'                                        -- first_name
,'Sweeney'                                        -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 660 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 677 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_lab_id
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_lab_id
 12  ,'14 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 707 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_lab_id
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_lab_id
,'14 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 710 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'333-3333'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 729 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'USA'                                            -- country_code
,'408'                                            -- area_code
,'333-3333'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert second contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , last_name
  7  , created_by
  8  , creation_date
  9  , last_updated_by
 10  , last_update_date )
 11  VALUES
 12  ( contact_lab_s1.nextval                              -- contact_lab_id
 13  , member_lab_s1.currval                               -- member_lab_id
 14  ,(SELECT   common_lookup_lab_id
 15    FROM     common_lookup_lab
 16    WHERE    common_lookup_context = 'CONTACT_LAB'
 17    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 18  ,'Matthew'                                         -- first_name
 19  ,'Sweeney'                                        -- last_name
 20  ,(SELECT   system_user_lab_id
 21    FROM     system_user_lab
 22    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 23  , SYSDATE                                         -- creation_date
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 27  , SYSDATE                                         -- last_update_date
 28  );

Error starting at line : 765 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Matthew'                                         -- first_name
,'Sweeney'                                        -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 777 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 795 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_id_lab
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_id_lab
 12  ,'14 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 825 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_id_lab
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_id_lab
,'14 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 828 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'333-3333'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 847 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'USA'                                            -- country_code
,'408'                                            -- area_code
,'333-3333'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Insert third contact_lab in a group account user.
SQL> -- ------------------------------------------------------------------
SQL> INSERT INTO contact_lab
  2  ( contact_lab_id
  3  , member_lab_id
  4  , contact_type
  5  , first_name
  6  , middle_name
  7  , last_name
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( contact_lab_s1.nextval                              -- contact_lab_id
 14  , member_lab_s1.currval                               -- member_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_context = 'CONTACT_LAB'
 18    AND      common_lookup_type = 'CUSTOMER')       -- contact_type
 19  ,'Ian'                                            -- first_name
 20  ,'M'                                              -- middle_name
 21  ,'Sweeney'                                        -- last_name
 22  ,(SELECT   system_user_lab_id
 23    FROM     system_user_lab
 24    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 25  , SYSDATE                                         -- creation_date
 26  ,(SELECT   system_user_lab_id
 27    FROM     system_user_lab
 28    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 29  , SYSDATE                                         -- last_update_date
 30  );

Error starting at line : 883 in command -
INSERT INTO contact_lab
( contact_lab_id
, member_lab_id
, contact_type
, first_name
, middle_name
, last_name
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( contact_lab_s1.nextval                              -- contact_lab_id
, member_lab_s1.currval                               -- member_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'CONTACT_LAB'
  AND      common_lookup_type = 'CUSTOMER')       -- contact_type
,'Ian'                                            -- first_name
,'M'                                              -- middle_name
,'Sweeney'                                        -- last_name
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 896 Column : 3
Error report -
SQL Error: ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> 
SQL> INSERT INTO address_lab
  2  ( address_lab_id
  3  , contact_lab_id
  4  , address_type
  5  , city
  6  , state_province
  7  , postal_code
  8  , created_by
  9  , creation_date
 10  , last_updated_by
 11  , last_update_date )
 12  VALUES
 13  ( address_lab_s1.nextval                              -- address_lab_id
 14  , contact_lab_s1.currval                              -- contact_lab_id
 15  ,(SELECT   common_lookup_lab_id
 16    FROM     common_lookup_lab
 17    WHERE    common_lookup_type = 'HOME')           -- address_type
 18  ,'San Jose'                                       -- city
 19  ,'CA'                                             -- state_province
 20  ,'95192'                                          -- postal_code
 21  ,(SELECT   system_user_lab_id
 22    FROM     system_user_lab
 23    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 24  , SYSDATE                                         -- creation_date
 25  ,(SELECT   system_user_lab_id
 26    FROM     system_user_lab
 27    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 28  , SYSDATE                                         -- last_update_date
 29  );

Error starting at line : 915 in command -
INSERT INTO address_lab
( address_lab_id
, contact_lab_id
, address_type
, city
, state_province
, postal_code
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( address_lab_s1.nextval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_type = 'HOME')           -- address_type
,'San Jose'                                       -- city
,'CA'                                             -- state_province
,'95192'                                          -- postal_code
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence CONTACT_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> INSERT INTO street_address_lab
  2  ( street_address_lab_id
  3  , address_id_lab
  4  , street_address_lab
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date )
  9   VALUES
 10  ( street_address_lab_s1.nextval                       -- street_address_lab_id
 11  , address_lab_s1.currval                              -- address_lab_id
 12  ,'14 El Camino Real'                              -- street_address_lab
 13  ,(SELECT   system_user_lab_id
 14    FROM     system_user_lab
 15    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 16  , SYSDATE                                         -- creation_date
 17  ,(SELECT   system_user_lab_id
 18    FROM     system_user_lab
 19    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 20  , SYSDATE                                         -- last_update_date
 21  );

Error starting at line : 945 in command -
INSERT INTO street_address_lab
( street_address_lab_id
, address_id_lab
, street_address_lab
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( street_address_lab_s1.nextval                       -- street_address_lab_id
, address_lab_s1.currval                              -- address_lab_id
,'14 El Camino Real'                              -- street_address_lab
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error at Command Line : 948 Column : 3
Error report -
SQL Error: ORA-00904: "STREET_ADDRESS_LAB": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO telephone_lab
  2  ( telephone_lab_id
  3  , contact_lab_id
  4  , address_lab_id
  5  , telephone_type
  6  , country_code
  7  , area_code
  8  , telephone_number
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13   VALUES
 14  ( telephone_lab_s1.nextval                            -- telephone_lab_id
 15  , address_lab_s1.currval                              -- address_lab_id
 16  , contact_lab_s1.currval                              -- contact_lab_id
 17  ,(SELECT   common_lookup_lab_id
 18    FROM     common_lookup_lab
 19    WHERE    common_lookup_context = 'MULTIPLE'
 20    AND      common_lookup_type = 'HOME')           -- telephone_type
 21  ,'USA'                                            -- country_code
 22  ,'408'                                            -- area_code
 23  ,'333-3333'                                       -- telephone_number
 24  ,(SELECT   system_user_lab_id
 25    FROM     system_user_lab
 26    WHERE    system_user_name = 'SYSADMIN')         -- created_by
 27  , SYSDATE                                         -- creation_date
 28  ,(SELECT   system_user_lab_id
 29    FROM     system_user_lab
 30    WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
 31  , SYSDATE                                         -- last_update_date
 32  );

Error starting at line : 967 in command -
INSERT INTO telephone_lab
( telephone_lab_id
, contact_lab_id
, address_lab_id
, telephone_type
, country_code
, area_code
, telephone_number
, created_by
, creation_date
, last_updated_by
, last_update_date )
 VALUES
( telephone_lab_s1.nextval                            -- telephone_lab_id
, address_lab_s1.currval                              -- address_lab_id
, contact_lab_s1.currval                              -- contact_lab_id
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'MULTIPLE'
  AND      common_lookup_type = 'HOME')           -- telephone_type
,'USA'                                            -- country_code
,'408'                                            -- area_code
,'333-3333'                                       -- telephone_number
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- created_by
, SYSDATE                                         -- creation_date
,(SELECT   system_user_lab_id
  FROM     system_user_lab
  WHERE    system_user_name = 'SYSADMIN')         -- last_updated_by
, SYSDATE                                         -- last_update_date
)
Error report -
ORA-08002: sequence ADDRESS_LAB_S1.CURRVAL is not yet defined in this session

SQL> 
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 10           address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
 11           street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
 12           telephone t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
 13  WHERE    c.last_name = 'Sweeney';

Error starting at line : 1,005 in command -
SELECT   m.account_number
,        c.last_name || ', ' || c.first_name
||       CASE
           WHEN c.middle_name IS NOT NULL THEN ' ' || c.middle_name
         END AS full_name
,        a.city
,        a.state_province
,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
         address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
         street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
         telephone t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
WHERE    c.last_name = 'Sweeney'
Error at Command Line : 1,016 Column : 84
Error report -
SQL Error: ORA-00904: "T"."ADDRESS_LAB_ID": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  This seeds rows in a item table.
SQL> -- ------------------------------------------------------------------
SQL> --  - Insert 21 rows in the ITEM table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'9736-05640-4'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'The Hunt for Red October'
 21  ,'Special Collector''s Edition'
 22  ,'PG'
 23  ,'02-MAR-90'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab 
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'24543-02392'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'Star Wars I'
 21  ,'Phantom Menace'
 22  ,'PG'
 23  ,'04-MAY-99'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab 
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'24543-5615'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'DVD_FULL_SCREEN')
 20  ,'Star Wars II'
 21  ,'Attack of the Clones'
 22  ,'PG'
 23  ,'16-MAY-02'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,081 in command -
INSERT INTO item_lab 
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'24543-5615'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'DVD_FULL_SCREEN')
,'Star Wars II'
,'Attack of the Clones'
,'PG'
,'16-MAY-02'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'24543-05539'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'Star Wars II'
 21  ,'Attack of the Clones'
 22  ,'PG'
 23  ,'16-MAY-02'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,109 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'24543-05539'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'Star Wars II'
,'Attack of the Clones'
,'PG'
,'16-MAY-02'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'24543-20309'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'Star Wars III'
 21  ,'Revenge of the Sith'
 22  ,'PG13'
 23  ,'19-MAY-05'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,137 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'24543-20309'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'DVD_WIDE_SCREEN')
,'Star Wars III'
,'Revenge of the Sith'
,'PG13'
,'19-MAY-05'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'86936-70380'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'DVD_WIDE_SCREEN')
 20  ,'The Chronicles of Narnia'
 21  ,'The Lion, the Witch and the Wardrobe','PG'
 22  ,'16-MAY-02'
 23  , 1001
 24  , SYSDATE
 25  , 1001
 26  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'91493-06475'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'RoboCop'
 21  ,''
 22  ,'Mature'
 23  ,'24-JUL-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'93155-11810'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'Pirates of the Caribbean'
 21  ,''
 22  ,'Teen'
 23  ,'30-JUN-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'12725-00173'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'The Chronicles of Narnia'
 21  ,'The Lion, the Witch and the Wardrobe'
 22  ,'Everyone'
 23  ,'30-JUN-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'45496-96128'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'NINTENDO_GAMECUBE')
 20  ,'MarioKart'
 21  ,'Double Dash'
 22  ,'Everyone'
 23  ,'17-NOV-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'08888-32214'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'PLAYSTATION2')
 20  ,'Splinter Cell'
 21  ,'Chaos Theory'
 22  ,'Teen'
 23  ,'08-APR-03'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'14633-14821'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'PLAYSTATION2')
 20  ,'Need for Speed'
 21  ,'Most Wanted'
 22  ,'Everyone'
 23  ,'15-NOV-04'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'10425-29944'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'The DaVinci Code'
 21  ,''
 22  ,'Teen'
 23  ,'19-MAY-06'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'52919-52057'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'XBOX')
 20  ,'Cars'
 21  ,''
 22  ,'Everyone'
 23  ,'28-APR-06'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'9689-80547-3'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_LAB'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Beau Geste'
 21  ,''
 22  ,'PG'
 23  ,'01-MAR-92'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'53939-64103'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'I Remember Mama'
 21  ,''
 22  ,'NR'
 23  ,'05-JAN-98'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,444 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'53939-64103'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'BLU-RAY')
,'I Remember Mama'
,''
,'NR'
,'05-JAN-98'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'24543-01292'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Tora! Tora! Tora!'
 21  ,'The Attack on Pearl Harbor'
 22  ,'G'
 23  ,'02-NOV-99'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,472 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'24543-01292'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'BLU-RAY')
,'Tora! Tora! Tora!'
,'The Attack on Pearl Harbor'
,'G'
,'02-NOV-99'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'43396-60047'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'A Man for All Seasons'
 21  ,''
 22  ,'G'
 23  ,'28-JUN-94'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,500 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'43396-60047'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'BLU-RAY')
,'A Man for All Seasons'
,''
,'G'
,'28-JUN-94'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'43396-70603'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Hook'
 21  ,''
 22  ,'PG'
 23  ,'11-DEC-91'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,528 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'43396-70603'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'BLU-RAY')
,'Hook'
,''
,'PG'
,'11-DEC-91'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'85391-13213'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Around the World in 80 Days'
 21  ,''
 22  ,'G'
 23  ,'04-DEC-92'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,556 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'85391-13213'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'BLU-RAY')
,'Around the World in 80 Days'
,''
,'G'
,'04-DEC-92'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> INSERT INTO item_lab
  2  ( item_lab_id
  3  , item_barcode
  4  , item_type
  5  , item_title
  6  , item_subtitle
  7  , item_rating
  8  , item_release_date
  9  , created_by
 10  , creation_date
 11  , last_updated_by
 12  , last_update_date )
 13  VALUES
 14  ( item_lab_s1.nextval
 15  ,'85391-10843'
 16  ,(SELECT   common_lookup_lab_id
 17    FROM     common_lookup_lab
 18    WHERE    common_lookup_context = 'ITEM_lab'
 19    AND      common_lookup_type = 'BLU-RAY')
 20  ,'Camelot'
 21  ,''
 22  ,'G'
 23  ,'15-MAY-98'
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 1,584 in command -
INSERT INTO item_lab
( item_lab_id
, item_barcode
, item_type
, item_title
, item_subtitle
, item_rating
, item_release_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( item_lab_s1.nextval
,'85391-10843'
,(SELECT   common_lookup_lab_id
  FROM     common_lookup_lab
  WHERE    common_lookup_context = 'ITEM_lab'
  AND      common_lookup_type = 'BLU-RAY')
,'Camelot'
,''
,'G'
,'15-MAY-98'
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."ITEM_LAB"."ITEM_TYPE")

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Display the 21 inserts into the item_lab table.
SQL> -- ------------------------------------------------------------------
SQL> SET PAGESIZE 99
SQL> COL item_lab_id                FORMAT 9999  HEADING "Item|ID #"
SQL> COL common_lookup_meaning  FORMAT A20  HEADING "Item Description"
SQL> COL item_title             FORMAT A30  HEADING "Item Title"
SQL> COL item_release_date      FORMAT A11  HEADING "Item|Release|Date"
SQL> SELECT   i.item_lab_id
  2  ,        cl.common_lookup_meaning
  3  ,        i.item_title
  4  ,        i.item_release_date
  5  FROM     item_lab i INNER JOIN common_lookup_lab cl ON i.item_type = cl.common_lookup_lab_id;

                                                              Item       
     Item                                                     Release    
     ID # Item Description     Item Title                     Date       
--------- -------------------- ------------------------------ -----------
     1006 DVD: Wide Screen     The Chronicles of Narnia       16-MAY-02  
     1002 DVD: Wide Screen     Star Wars I                    04-MAY-99  
     1001 DVD: Wide Screen     The Hunt for Red October       02-MAR-90  
     1010 Nintendo Gamecube    MarioKart                      17-NOV-03  
     1012 Playstation2         Need for Speed                 15-NOV-04  
     1011 Playstation2         Splinter Cell                  08-APR-03  
     1014 XBOX                 Cars                           28-APR-06  
     1013 XBOX                 The DaVinci Code               19-MAY-06  
     1009 XBOX                 The Chronicles of Narnia       30-JUN-03  
     1008 XBOX                 Pirates of the Caribbean       30-JUN-03  
     1007 XBOX                 RoboCop                        24-JUL-03  
     1015 Blu-ray              Beau Geste                     01-MAR-92  

12 rows selected. 

SQL> 
SQL> -- Transaction Management Example.
SQL> CREATE OR REPLACE PROCEDURE contact_insert_lab
  2  ( pv_member_type         VARCHAR2
  3  , pv_account_number      VARCHAR2
  4  , pv_credit_card_number  VARCHAR2
  5  , pv_credit_card_type    VARCHAR2
  6  , pv_first_name          VARCHAR2
  7  , pv_middle_name         VARCHAR2 := ''
  8  , pv_last_name           VARCHAR2
  9  , pv_contact_type        VARCHAR2
 10  , pv_address_type        VARCHAR2
 11  , pv_city                VARCHAR2
 12  , pv_state_province      VARCHAR2
 13  , pv_postal_code         VARCHAR2
 14  , pv_street_address_lab      VARCHAR2
 15  , pv_telephone_type      VARCHAR2
 16  , pv_country_code        VARCHAR2
 17  , pv_area_code           VARCHAR2
 18  , pv_telephone_number    VARCHAR2
 19  , pv_created_by          NUMBER   := 1001
 20  , pv_creation_date       DATE     := SYSDATE
 21  , pv_last_updated_by     NUMBER   := 1001
 22  , pv_last_update_date    DATE     := SYSDATE) IS
 23  
 24  BEGIN
 25  
 26    /* Create a SAVEPOINT as a starting point. */
 27    SAVEPOINT starting_point;
 28  
 29    /* Insert into the member_lab table. */
 30    INSERT INTO member_lab
 31    ( member_lab_id
 32    , member_type
 33    , account_number
 34    , credit_card_number
 35    , credit_card_type
 36    , created_by
 37    , creation_date
 38    , last_updated_by
 39    , last_update_date )
 40    VALUES
 41    ( member_lab_s1.NEXTVAL
 42    ,(SELECT   common_lookup_id
 43      FROM     common_lookup
 44      WHERE    common_lookup_context = 'MEMBER_lab'
 45      AND      common_lookup_type = pv_member_type)
 46    , pv_account_number
 47    , pv_credit_card_number
 48    ,(SELECT   common_lookup_id
 49      FROM     common_lookup
 50      WHERE    common_lookup_context = 'MEMBER_lab'
 51      AND      common_lookup_type = pv_credit_card_type)
 52    , pv_created_by
 53    , pv_creation_date
 54    , pv_last_updated_by
 55    , pv_last_update_date );
 56  
 57    /* Insert into the contact_lab table. */
 58    INSERT INTO contact_lab
 59    VALUES
 60    ( contact_lab_s1.NEXTVAL
 61    , member_lab_s1.CURRVAL
 62    ,(SELECT   common_lookup_id
 63      FROM     common_lookup
 64      WHERE    common_lookup_context = 'CONTACT_lab'
 65      AND      common_lookup_type = pv_contact_type)
 66    , pv_first_name
 67    , pv_middle_name
 68    , pv_last_name
 69    , pv_created_by
 70    , pv_creation_date
 71    , pv_last_updated_by
 72    , pv_last_update_date );  
 73  
 74    /* Insert into the address_lab table. */
 75    INSERT INTO address_lab
 76    VALUES
 77    ( address_lab_s1.NEXTVAL
 78    , contact_lab_s1.CURRVAL
 79    ,(SELECT   common_lookup_id
 80      FROM     common_lookup
 81      WHERE    common_lookup_context = 'MULTIPLE'
 82      AND      common_lookup_type = pv_address_type)
 83    , pv_city
 84    , pv_state_province
 85    , pv_postal_code
 86    , pv_created_by
 87    , pv_creation_date
 88    , pv_last_updated_by
 89    , pv_last_update_date );  
 90  
 91    /* Insert into the street_address_lab table. */
 92    INSERT INTO street_address_lab
 93    VALUES
 94    ( street_address_lab_s1.NEXTVAL
 95    , address_lab_s1.CURRVAL
 96    , pv_street_address_lab
 97    , pv_created_by
 98    , pv_creation_date
 99    , pv_last_updated_by
100    , pv_last_update_date );  
101  
102    /* Insert into the telephone table. */
103    INSERT INTO telephone_lab
104    VALUES
105    ( telephone_lab_s1.NEXTVAL                              -- TELEPHONE_lab_ID
106    , contact_lab_s1.CURRVAL                                -- CONTACT_lab_ID
107    , address_lab_s1.CURRVAL                                -- ADDRESS_lab_ID
108    ,(SELECT   common_lookup_id                         -- ADDRESS_TYPE
109      FROM     common_lookup
110      WHERE    common_lookup_context = 'MULTIPLE'
111      AND      common_lookup_type = pv_telephone_type)
112    , pv_country_code                                   -- COUNTRY_CODE
113    , pv_area_code                                      -- AREA_CODE
114    , pv_telephone_number                               -- TELEPHONE_NUMBER
115    , pv_created_by                                     -- CREATED_BY
116    , pv_creation_date                                  -- CREATION_DATE
117    , pv_last_updated_by                                -- LAST_UPDATED_BY
118    , pv_last_update_date);                             -- LAST_UPDATE_DATE
119  
120    /* Commit the series of inserts. */
121    COMMIT;
122  EXCEPTION 
123    WHEN OTHERS THEN
124      ROLLBACK TO starting_point;
125      RETURN;
126  END contact_insert_lab;
127  /

Procedure CONTACT_INSERT_LAB compiled

LINE/COL  ERROR
--------- -------------------------------------------------------------
30/3      PL/SQL: SQL Statement ignored
41/5      PL/SQL: ORA-02289: sequence does not exist
58/3      PL/SQL: SQL Statement ignored
61/5      PL/SQL: ORA-02289: sequence does not exist
Errors: check compiler log
SQL> 
SQL> -- Insert first contact.
SQL> BEGIN
  2    /* Call the contact_insert_lab procedure. */
  3    contact_insert_lab(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-34'
  6      , pv_credit_card_number => '1111-1111-1111-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Goeffrey'
  9      , pv_middle_name => 'Ward'
 10      , pv_last_name => 'Clinton'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address_lab => '118 South 9th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1234' );
 21  END;
 22  /

Error starting at line : 1,756 in command -
BEGIN
  /* Call the contact_insert_lab procedure. */
  contact_insert_lab(
      pv_member_type => 'INDIVIDUAL'
    , pv_account_number => 'R11-514-34'
    , pv_credit_card_number => '1111-1111-1111-1111'
    , pv_credit_card_type => 'VISA_CARD'
    , pv_first_name => 'Goeffrey'
    , pv_middle_name => 'Ward'
    , pv_last_name => 'Clinton'
    , pv_contact_type => 'CUSTOMER'
    , pv_address_type => 'HOME'
    , pv_city => 'Provo'
    , pv_state_province => 'Utah'
    , pv_postal_code => '84606'
    , pv_street_address_lab => '118 South 9th East'
    , pv_telephone_type => 'HOME'
    , pv_country_code => '001'
    , pv_area_code => '801'
    , pv_telephone_number => '423-1234' );
END;
Error report -
ORA-06550: line 3, column 3:
PLS-00905: object STUDENT.CONTACT_INSERT_LAB is invalid
ORA-06550: line 3, column 3:
PL/SQL: Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:
SQL> 
SQL> -- Insert second contact.
SQL> BEGIN
  2    /* Call athe contact_insert_lab procedure. */
  3    contact_insert_lab(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-35'
  6      , pv_credit_card_number => '1111-2222-1111-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Wendy'
  9      , pv_last_name => 'Moss'
 10      , pv_contact_type => 'CUSTOMER'
 11      , pv_address_type => 'HOME'
 12      , pv_city => 'Provo'
 13      , pv_state_province => 'Utah'
 14      , pv_postal_code => '84606'
 15      , pv_street_address_lab => '1218 South 10th East'
 16      , pv_telephone_type => 'HOME'
 17      , pv_country_code => '001'
 18      , pv_area_code => '801'
 19      , pv_telephone_number => '423-1235' );
 20  END;
 21  /

Error starting at line : 1,780 in command -
BEGIN
  /* Call athe contact_insert_lab procedure. */
  contact_insert_lab(
      pv_member_type => 'INDIVIDUAL'
    , pv_account_number => 'R11-514-35'
    , pv_credit_card_number => '1111-2222-1111-1111'
    , pv_credit_card_type => 'VISA_CARD'
    , pv_first_name => 'Wendy'
    , pv_last_name => 'Moss'
    , pv_contact_type => 'CUSTOMER'
    , pv_address_type => 'HOME'
    , pv_city => 'Provo'
    , pv_state_province => 'Utah'
    , pv_postal_code => '84606'
    , pv_street_address_lab => '1218 South 10th East'
    , pv_telephone_type => 'HOME'
    , pv_country_code => '001'
    , pv_area_code => '801'
    , pv_telephone_number => '423-1235' );
END;
Error report -
ORA-06550: line 3, column 3:
PLS-00905: object STUDENT.CONTACT_INSERT_LAB is invalid
ORA-06550: line 3, column 3:
PL/SQL: Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:
SQL> 
SQL> -- Insert third contact.
SQL> BEGIN
  2    /* Call the contact_insert_lab procedure. */
  3    contact_insert_lab(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-36'
  6      , pv_credit_card_number => '1111-1111-2222-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Simon'
  9      , pv_middle_name => 'Jonah'
 10      , pv_last_name => 'Gretelz'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address_lab => '2118 South 7th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1236' );
 21  END;
 22  /

Error starting at line : 1,803 in command -
BEGIN
  /* Call the contact_insert_lab procedure. */
  contact_insert_lab(
      pv_member_type => 'INDIVIDUAL'
    , pv_account_number => 'R11-514-36'
    , pv_credit_card_number => '1111-1111-2222-1111'
    , pv_credit_card_type => 'VISA_CARD'
    , pv_first_name => 'Simon'
    , pv_middle_name => 'Jonah'
    , pv_last_name => 'Gretelz'
    , pv_contact_type => 'CUSTOMER'
    , pv_address_type => 'HOME'
    , pv_city => 'Provo'
    , pv_state_province => 'Utah'
    , pv_postal_code => '84606'
    , pv_street_address_lab => '2118 South 7th East'
    , pv_telephone_type => 'HOME'
    , pv_country_code => '001'
    , pv_area_code => '801'
    , pv_telephone_number => '423-1236' );
END;
Error report -
ORA-06550: line 3, column 3:
PLS-00905: object STUDENT.CONTACT_INSERT_LAB is invalid
ORA-06550: line 3, column 3:
PL/SQL: Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:
SQL> 
SQL> -- Insert fourth contact.
SQL> BEGIN
  2    /* Call the contact_insert_lab procedure. */
  3    contact_insert_lab(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-37'
  6      , pv_credit_card_number => '3333-1111-1111-2222'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Elizabeth'
  9      , pv_middle_name => 'Jane'
 10      , pv_last_name => 'Royal'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Provo'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address_lab => '2228 South 14th East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1237' );
 21  END;
 22  /

Error starting at line : 1,827 in command -
BEGIN
  /* Call the contact_insert_lab procedure. */
  contact_insert_lab(
      pv_member_type => 'INDIVIDUAL'
    , pv_account_number => 'R11-514-37'
    , pv_credit_card_number => '3333-1111-1111-2222'
    , pv_credit_card_type => 'VISA_CARD'
    , pv_first_name => 'Elizabeth'
    , pv_middle_name => 'Jane'
    , pv_last_name => 'Royal'
    , pv_contact_type => 'CUSTOMER'
    , pv_address_type => 'HOME'
    , pv_city => 'Provo'
    , pv_state_province => 'Utah'
    , pv_postal_code => '84606'
    , pv_street_address_lab => '2228 South 14th East'
    , pv_telephone_type => 'HOME'
    , pv_country_code => '001'
    , pv_area_code => '801'
    , pv_telephone_number => '423-1237' );
END;
Error report -
ORA-06550: line 3, column 3:
PLS-00905: object STUDENT.CONTACT_INSERT_LAB is invalid
ORA-06550: line 3, column 3:
PL/SQL: Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:
SQL> 
SQL> -- Insert fifth contact.
SQL> BEGIN
  2    /* Call the contact_insert_lab procedure. */
  3    contact_insert_lab(
  4        pv_member_type => 'INDIVIDUAL'
  5      , pv_account_number => 'R11-514-38'
  6      , pv_credit_card_number => '1111-1111-3333-1111'
  7      , pv_credit_card_type => 'VISA_CARD'
  8      , pv_first_name => 'Brian'
  9      , pv_middle_name => 'Nathan'
 10      , pv_last_name => 'Smith'
 11      , pv_contact_type => 'CUSTOMER'
 12      , pv_address_type => 'HOME'
 13      , pv_city => 'Spanish Fork'
 14      , pv_state_province => 'Utah'
 15      , pv_postal_code => '84606'
 16      , pv_street_address_lab => '333 North 2nd East'
 17      , pv_telephone_type => 'HOME'
 18      , pv_country_code => '001'
 19      , pv_area_code => '801'
 20      , pv_telephone_number => '423-1238' );
 21  END;
 22  /

Error starting at line : 1,851 in command -
BEGIN
  /* Call the contact_insert_lab procedure. */
  contact_insert_lab(
      pv_member_type => 'INDIVIDUAL'
    , pv_account_number => 'R11-514-38'
    , pv_credit_card_number => '1111-1111-3333-1111'
    , pv_credit_card_type => 'VISA_CARD'
    , pv_first_name => 'Brian'
    , pv_middle_name => 'Nathan'
    , pv_last_name => 'Smith'
    , pv_contact_type => 'CUSTOMER'
    , pv_address_type => 'HOME'
    , pv_city => 'Spanish Fork'
    , pv_state_province => 'Utah'
    , pv_postal_code => '84606'
    , pv_street_address_lab => '333 North 2nd East'
    , pv_telephone_type => 'HOME'
    , pv_country_code => '001'
    , pv_area_code => '801'
    , pv_telephone_number => '423-1238' );
END;
Error report -
ORA-06550: line 3, column 3:
PLS-00905: object STUDENT.CONTACT_INSERT_LAB is invalid
ORA-06550: line 3, column 3:
PL/SQL: Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify five individual rows of chained inserts through
SQL> --   a procedure into the five dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name       FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL city            FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone       FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,        c.last_name || ', ' || c.first_name
  3  ||       CASE
  4             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  5           END AS full_name
  6  ,        a.city
  7  ,        a.state_province
  8  ,        t.country_code || '-(' || t.area_code || ') ' || t.telephone_number AS telephone
  9  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 10           address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
 11           street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
 12           telephone_lab t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
 13  WHERE    m.member_type = (SELECT common_lookup_lab_id
 14                            FROM   common_lookup_lab
 15                            WHERE  common_lookup_context = 'MEMBER_LAB'
 16                            AND    common_lookup_type = 'INDIVIDUAL');

0 rows selected. 

SQL> 
SQL> -- Update all MEMBER_TYPE values based on number of dependent CONTACT rows.
SQL> UPDATE member_lab m
  2  SET    member_type =
  3          (SELECT   common_lookup_lab_id
  4           FROM     common_lookup_lab
  5           WHERE    common_lookup_context = 'MEMBER_LAB'
  6           AND      common_lookup_type =
  7                     (SELECT  dt.member_type
  8                      FROM   (SELECT   c.member_lab_id
  9                              ,        CASE
 10                                         WHEN COUNT(c.member_lab_id) > 1 THEN 'GROUP'
 11                                         ELSE 'INDIVIDUAL'
 12                                       END AS member_type
 13                              FROM     contact_lab c
 14                              GROUP BY c.member_lab_id) dt
 15                      WHERE    dt.member_lab_id = m.member_lab_id));

0 rows updated.

SQL> 
SQL> -- Modify the MEMBER_lab table to add a NOT NULL constraint to the MEMBER_TYPE column.
SQL> ALTER TABLE member_lab
  2    MODIFY (member_type  NUMBER  CONSTRAINT nn_member_lab_1  NOT NULL);

Table MEMBER_LAB altered.

SQL> 
SQL> -- Use SQL*Plus report formatting commands.
SQL> COLUMN member_lab_id         FORMAT 999999 HEADING "Member|ID"
SQL> COLUMN members               FORMAT 999999 HEADING "Member|Qty #"
SQL> COLUMN member_type           FORMAT 999999 HEADING "Member|Type|ID #"
SQL> COLUMN common_lookup_lab_id  FORMAT 999999 HEADING "Member|Lookup|ID #"
SQL> COLUMN common_lookup_type    FORMAT A12    HEADING "Common|Lookup|Type"
SQL> SELECT   m.member_lab_id
  2  ,        COUNT(contact_lab_id) AS MEMBERS
  3  ,        m.member_type
  4  ,        cl.common_lookup_lab_id
  5  ,        cl.common_lookup_type
  6  FROM     member_lab m INNER JOIN contact_lab c
  7  ON       m.member_lab_id = c.member_lab_id INNER JOIN common_lookup_lab cl
  8  ON       m.member_type = cl.common_lookup_lab_id
  9  GROUP BY m.member_lab_id
 10  ,        m.member_type
 11  ,        cl.common_lookup_lab_id
 12  ,        cl.common_lookup_type
 13  ORDER BY m.member_lab_id;

0 rows selected. 

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> -- Insert 5 records in the RENTAL_lab table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO rental_lab
  2  ( rental_lab_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_lab_s1.nextval
 12  ,(SELECT   contact_lab_id
 13    FROM     contact_lab
 14    WHERE    last_name = 'Vizquel'
 15    AND      first_name = 'Oscar')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 1,945 in command -
INSERT INTO rental_lab
( rental_lab_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_lab_s1.nextval
,(SELECT   contact_lab_id
  FROM     contact_lab
  WHERE    last_name = 'Vizquel'
  AND      first_name = 'Oscar')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_LAB"."CUSTOMER_ID")

SQL> 
SQL> INSERT INTO rental_lab
  2  ( rental_lab_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_lab_s1.nextval
 12  ,(SELECT   contact_lab_id
 13    FROM     contact_lab
 14    WHERE    last_name = 'Vizquel'
 15    AND      first_name = 'Doreen')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 1,967 in command -
INSERT INTO rental_lab
( rental_lab_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_lab_s1.nextval
,(SELECT   contact_lab_id
  FROM     contact_lab
  WHERE    last_name = 'Vizquel'
  AND      first_name = 'Doreen')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_LAB"."CUSTOMER_ID")

SQL> 
SQL> INSERT INTO rental_lab
  2  ( rental_lab_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_lab_s1.nextval
 12  ,(SELECT   contact_lab_id
 13    FROM     contact_lab
 14    WHERE    last_name = 'Sweeney'
 15    AND      first_name = 'Meaghan')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 1,989 in command -
INSERT INTO rental_lab
( rental_lab_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_lab_s1.nextval
,(SELECT   contact_lab_id
  FROM     contact_lab
  WHERE    last_name = 'Sweeney'
  AND      first_name = 'Meaghan')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_LAB"."CUSTOMER_ID")

SQL> 
SQL> INSERT INTO rental_lab
  2  ( rental_lab_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_lab_s1.nextval
 12  ,(SELECT   contact_lab_id
 13    FROM     contact_lab
 14    WHERE    last_name = 'Sweeney'
 15    AND      first_name = 'Ian')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 2,011 in command -
INSERT INTO rental_lab
( rental_lab_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_lab_s1.nextval
,(SELECT   contact_lab_id
  FROM     contact_lab
  WHERE    last_name = 'Sweeney'
  AND      first_name = 'Ian')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_LAB"."CUSTOMER_ID")

SQL> 
SQL> INSERT INTO rental_lab
  2  ( rental_lab_id
  3  , customer_id
  4  , check_out_date
  5  , return_date
  6  , created_by
  7  , creation_date
  8  , last_updated_by
  9  , last_update_date )
 10  VALUES
 11  ( rental_lab_s1.nextval
 12  ,(SELECT   contact_lab_id
 13    FROM     contact_lab
 14    WHERE    last_name = 'Winn'
 15    AND      first_name = 'Brian')
 16  , TRUNC(SYSDATE)
 17  , TRUNC(SYSDATE) + 5
 18  , 1001
 19  , SYSDATE
 20  , 1001
 21  , SYSDATE);

Error starting at line : 2,033 in command -
INSERT INTO rental_lab
( rental_lab_id
, customer_id
, check_out_date
, return_date
, created_by
, creation_date
, last_updated_by
, last_update_date )
VALUES
( rental_lab_s1.nextval
,(SELECT   contact_lab_id
  FROM     contact_lab
  WHERE    last_name = 'Winn'
  AND      first_name = 'Brian')
, TRUNC(SYSDATE)
, TRUNC(SYSDATE) + 5
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_LAB"."CUSTOMER_ID")

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> -- Insert 9 records in the RENTAL_ITEM table.
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Oscar')
 17  ,(SELECT   i.item_lab_id
 18    FROM     item_lab i
 19    ,        common_lookup_lab cl
 20    WHERE    i.item_title = 'Star Wars I'
 21    AND      i.item_subtitle = 'Phantom Menace'
 22    AND      i.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,059 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Oscar')
,(SELECT   i.item_lab_id
  FROM     item_lab i
  ,        common_lookup_lab cl
  WHERE    i.item_title = 'Star Wars I'
  AND      i.item_subtitle = 'Phantom Menace'
  AND      i.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r inner join contact_lab c
 13    ON       r.customer_id = c.contact_lab_id
 14    WHERE    c.last_name = 'Vizquel'
 15    AND      c.first_name = 'Oscar')
 16  ,(SELECT   d.item_lab_id
 17    FROM     item_lab d join common_lookup_lab cl
 18    ON       d.item_title = 'Star Wars II'
 19    WHERE    d.item_subtitle = 'Attack of the Clones'
 20    AND      d.item_type = cl.common_lookup_lab_id
 21    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 22  , 1001
 23  , SYSDATE
 24  , 1001
 25  , SYSDATE);

Error starting at line : 2,087 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r inner join contact_lab c
  ON       r.customer_id = c.contact_lab_id
  WHERE    c.last_name = 'Vizquel'
  AND      c.first_name = 'Oscar')
,(SELECT   d.item_lab_id
  FROM     item_lab d join common_lookup_lab cl
  ON       d.item_title = 'Star Wars II'
  WHERE    d.item_subtitle = 'Attack of the Clones'
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Oscar')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item_lab d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title _lab= 'Star Wars III'
 21    AND      d.item_subtitle = 'Revenge of the Sith'
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,113 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Oscar')
,(SELECT   d.item_lab_id
  FROM     item_lab d
  ,        common_lookup_lab cl
  WHERE    d.item_title _lab= 'Star Wars III'
  AND      d.item_subtitle = 'Revenge of the Sith'
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error at Command Line : 2,132 Column : 25
Error report -
SQL Error: ORA-00911: invalid character
00911. 00000 -  "invalid character"
*Cause:    identifiers may not start with any ASCII character other than
           letters and numbers.  $#_ are also allowed after the first
           character.  Identifiers enclosed by doublequotes may contain
           any character other than a doublequote.  Alternative quotes
           (q'#...#') cannot use spaces, tabs, or carriage returns as
           delimiters.  For all other contexts, consult the SQL Language
           Reference Manual.
*Action:
SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Doreen')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item_lab d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title = 'I Remember Mama'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,141 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Doreen')
,(SELECT   d.item_lab_id
  FROM     item_lab d
  ,        common_lookup_lab cl
  WHERE    d.item_title = 'I Remember Mama'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'BLU-RAY')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Vizquel'
 16    AND      c.first_name = 'Doreen')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title = 'Camelot'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,169 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Vizquel'
  AND      c.first_name = 'Doreen')
,(SELECT   d.item_lab_id
  FROM     item d
  ,        common_lookup_lab cl
  WHERE    d.item_title = 'Camelot'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'BLU-RAY')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error at Command Line : 2,185 Column : 12
Error report -
SQL Error: ORA-00904: "D"."ITEM_LAB_ID": invalid identifier
00904. 00000 -  "%s: invalid identifier"
*Cause:    
*Action:
SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Sweeney'
 16    AND      c.first_name = 'Meaghan')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item_lab d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title = 'Hook'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'BLU-RAY')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,197 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Sweeney'
  AND      c.first_name = 'Meaghan')
,(SELECT   d.item_lab_id
  FROM     item_lab d
  ,        common_lookup_lab cl
  WHERE    d.item_title = 'Hook'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'BLU-RAY')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Sweeney'
 16    AND      c.first_name = 'Ian')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item_lab d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title = 'Cars'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'XBOX')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,225 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Sweeney'
  AND      c.first_name = 'Ian')
,(SELECT   d.item_lab_id
  FROM     item_lab d
  ,        common_lookup_lab cl
  WHERE    d.item_title = 'Cars'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'XBOX')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Winn'
 16    AND      c.first_name = 'Brian')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item_lab d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title = 'RoboCop'
 21    AND      d.item_subtitle IS NULL
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'XBOX')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,253 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Winn'
  AND      c.first_name = 'Brian')
,(SELECT   d.item_lab_id
  FROM     item_lab d
  ,        common_lookup_lab cl
  WHERE    d.item_title = 'RoboCop'
  AND      d.item_subtitle IS NULL
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'XBOX')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> INSERT INTO rental_item_lab
  2  ( rental_item_lab_id
  3  , rental_lab_id
  4  , item_lab_id
  5  , created_by
  6  , creation_date
  7  , last_updated_by
  8  , last_update_date)
  9  VALUES
 10  ( rental_item_lab_s1.nextval
 11  ,(SELECT   r.rental_lab_id
 12    FROM     rental_lab r
 13    ,        contact_lab c
 14    WHERE    r.customer_id = c.contact_lab_id
 15    AND      c.last_name = 'Winn'
 16    AND      c.first_name = 'Brian')
 17  ,(SELECT   d.item_lab_id
 18    FROM     item_lab d
 19    ,        common_lookup_lab cl
 20    WHERE    d.item_title = 'The Hunt for Red October'
 21    AND      d.item_subtitle = 'Special Collector''s Edition'
 22    AND      d.item_type = cl.common_lookup_lab_id
 23    AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 24  , 1001
 25  , SYSDATE
 26  , 1001
 27  , SYSDATE);

Error starting at line : 2,281 in command -
INSERT INTO rental_item_lab
( rental_item_lab_id
, rental_lab_id
, item_lab_id
, created_by
, creation_date
, last_updated_by
, last_update_date)
VALUES
( rental_item_lab_s1.nextval
,(SELECT   r.rental_lab_id
  FROM     rental_lab r
  ,        contact_lab c
  WHERE    r.customer_id = c.contact_lab_id
  AND      c.last_name = 'Winn'
  AND      c.first_name = 'Brian')
,(SELECT   d.item_lab_id
  FROM     item_lab d
  ,        common_lookup_lab cl
  WHERE    d.item_title = 'The Hunt for Red October'
  AND      d.item_subtitle = 'Special Collector''s Edition'
  AND      d.item_type = cl.common_lookup_lab_id
  AND      cl.common_lookup_type = 'DVD_WIDE_SCREEN')
, 1001
, SYSDATE
, 1001
, SYSDATE)
Error report -
ORA-01400: cannot insert NULL into ("STUDENT"."RENTAL_ITEM_LAB"."RENTAL_LAB_ID")

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify nine rental agreements, some with one and some
SQL> --   with more than one rental item.
SQL> -- ------------------------------------------------------------------
SQL> COL member_lab_id       FORMAT 9999 HEADING "Member|ID #"
SQL> COL account_number      FORMAT A10  HEADING "Account|Number"
SQL> COL full_name           FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL rental_lab_id       FORMAT 9999 HEADING "Rent|ID #"
SQL> COL rental_item_lab_id  FORMAT 9999 HEADING "Rent|Item|ID #"
SQL> COL item_title          FORMAT A26  HEADING "Item Title"
SQL> SELECT   m.member_lab_id
  2  ,        m.account_number
  3  ,        c.last_name || ', ' || c.first_name
  4  ||       CASE
  5             WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6           END AS full_name
  7  ,        r.rental_lab_id
  8  ,        ri.rental_item_lab_id
  9  ,        i.item_title
 10  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 11           rental_lab r ON c.contact_lab_id = r.customer_id INNER JOIN
 12           rental_item_lab ri ON r.rental_lab_id = ri.rental_lab_id INNER JOIN
 13           item_lab i ON ri.item_lab_id = i.item_lab_id
 14  ORDER BY r.rental_lab_id;

0 rows selected. 

SQL> 
SQL> --  --------
SQL> --   Display the rows in the member_lab and contact_lab tables.
SQL> -- --------------------------------------------------------
SQL> 
SQL> COL member_lab_id           FORMAT 9999  HEADING "Member|ID #"
SQL> COL member_lab             FORMAT 9999  HEADING "Member|#"
SQL> COL common_lookup_type  FORMAT A12   HEADING "Common|Lookup Type"
SQL> SELECT   m.member_lab_id
  2  ,        COUNT(contact_lab_id) AS MEMBERS
  3  ,        cl.common_lookup_type
  4  FROM     member_lab m INNER JOIN contact_lab c
  5  ON       m.member_lab_id = c.member_lab_id INNER JOIN common_lookup_lab cl
  6  ON       m.member_type = cl.common_lookup_lab_id
  7  GROUP BY m.member_lab_id
  8  ,        m.member_type
  9  ,        cl.common_lookup_lab_id
 10  ,        cl.common_lookup_type
 11  ORDER BY m.member_lab_id;

0 rows selected. 

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #2
SQL> --  --------
SQL> --   Create a view .
SQL> -- --------------------------------------------------------
SQL> CREATE OR REPLACE VIEW current_rental_lab AS
  2    SELECT   m.account_number
  3    ,        c.last_name || ', ' || c.first_name
  4    ||       CASE
  5               WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6             END AS full_name
  7    ,        i.item_title AS title
  8    ,        i.item_subtitle AS subtitle
  9    ,        SUBSTR(cl.common_lookup_meaning,1,3) AS product
 10    ,        r.check_out_date
 11    ,        r.return_date
 12    FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 13             rental_lab r ON c.contact_lab_id = r.customer_id INNER JOIN
 14             rental_item_lab ri ON r.rental_lab_id = ri.rental_lab_id INNER JOIN
 15             item_lab i ON ri.item_lab_id = i.item_lab_id INNER JOIN
 16             common_lookup_lab cl ON i.item_type = cl.common_lookup_lab_id
 17    ORDER BY 1, 2, 3;

View CURRENT_RENTAL_LAB created.

SQL> 
SQL> -- --------------------------------------------------------
SQL> --  Step #3
SQL> --  --------
SQL> --   Display the content of a view .
SQL> -- --------------------------------------------------------
SQL> COL full_name      FORMAT A24
SQL> COL title          FORMAT A30
SQL> COL subtitlei      FORMAT A4
SQL> COL product        FORMAT A7
SQL> COL check_out_date FORMAT A11
SQL> COL return_date    FORMAT A11
SQL> SELECT   cr.full_name
  2  ,        cr.title
  3  ,        cr.check_out_date
  4  ,        cr.return_date
  5  FROM     current_rental_lab  cr;

0 rows selected. 

SQL> 
SQL> -- Close log file.
SQL> SPOOL OFF
SQL> 
SQL> -- Make all changes permanent.
SQL> COMMIT;

Commit complete.

