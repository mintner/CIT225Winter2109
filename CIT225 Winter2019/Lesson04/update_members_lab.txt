SQL> 
SQL> -- Update all MEMBER_TYPE values based on number of dependent CONTACT rows.
SQL> UPDATE member_lab m
  2  SET    member_type =
  3          (SELECT   common_lookup_lab_id
  4           FROM     common_lookup_lab
  5           WHERE    common_lookup_context = 'MEMBER'
  6           AND      common_lookup_type =
  7                     (SELECT  dt.member_type
  8                      FROM   (SELECT   c.member_lab_id
  9                              ,        CASE
 10                                         WHEN COUNT(c.member_lab_id) > 1 THEN 'GROUP'
 11                                         ELSE 'INDIVIDUAL'
 12                                       END AS member_type
 13                              FROM     contact_lab c
 14                              GROUP BY c.member_lab_id) dt
 15                      WHERE    dt.member_lab_id = m.member_lab_id));

0 rows updated.

SQL> 
SQL> -- Modify the MEMBER_lab table to add a NOT NULL constraint to the MEMBER_TYPE column.
SQL> ALTER TABLE member_lab
  2    MODIFY (member_type  NUMBER  CONSTRAINT nn_member_1  NOT NULL);

Error starting at line : 41 File @ /home/student/Data/cit225/oracle/lab4/update_members_lab.sql
In command -
ALTER TABLE member_lab
  MODIFY (member_type  NUMBER  CONSTRAINT nn_member_1  NOT NULL)
Error report -
ORA-02264: name already used by an existing constraint
02264. 00000 -  "name already used by an existing constraint"
*Cause:    The specified constraint name has to be unique.
*Action:   Specify a unique constraint name for the constraint.
SQL> 
SQL> -- Use SQL*Plus report formatting commands.
SQL> COLUMN member_lab_id         FORMAT 999999 HEADING "Member|ID"
SQL> COLUMN members               FORMAT 999999 HEADING "Member|Qty #"
SQL> COLUMN member_type           FORMAT 999999 HEADING "Member|Type|ID #"
SQL> COLUMN common_lookup_lab_id  FORMAT 999999 HEADING "Member|Lookup|ID #"
SQL> COLUMN common_lookup_type    FORMAT A12    HEADING "Common|Lookup|Type"
SQL> SELECT   m.member_lab_id
  2  ,        COUNT(contact_lab_id) AS MEMBERS
  3  ,        m.member_type
  4  ,        cl.common_lookup_lab_id
  5  ,        cl.common_lookup_type
  6  FROM     member_lab m INNER JOIN contact_lab c
  7  ON       m.member_lab_id = c.member_lab_id INNER JOIN common_lookup_lab cl
  8  ON       m.member_type = cl.common_lookup_lab_id
  9  GROUP BY m.member_lab_id
 10  ,        m.member_type
 11  ,        cl.common_lookup_lab_id
 12  ,        cl.common_lookup_type
 13  ORDER BY m.member_lab_id;

0 rows selected. 

SQL> 
SQL> -- Commit changes.
SQL> COMMIT;

Commit complete.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Close log file.
SQL> -- ------------------------------------------------------------------
SQL> SPOOL OFF
